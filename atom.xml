<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iZheteng</title>
  <subtitle>Enjoy work, Enjoy life!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cuiqingwei.github.io/"/>
  <updated>2016-09-19T09:51:04.000Z</updated>
  <id>http://cuiqingwei.github.io/</id>
  
  <author>
    <name>cuiqingwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>活着，就要折腾</title>
    <link href="http://cuiqingwei.github.io/2016/09/15/2016-09-05-%E6%B4%BB%E7%9D%80%EF%BC%8C%E5%B0%B1%E8%A6%81%E6%8A%98%E8%85%BE/"/>
    <id>http://cuiqingwei.github.io/2016/09/15/2016-09-05-活着，就要折腾/</id>
    <published>2016-09-15T09:23:37.000Z</published>
    <updated>2016-09-19T09:51:04.000Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><fieldset style="padding: 15px; max-width: 100%; min-width: 0px; border: 1px solid rgb(0, 202, 255); color: rgb(51, 51, 51); line-height: 24px; font-family: 宋体; orphans: 2; widows: 2; box-shadow: rgb(165, 165, 165) 5px 5px 2px; background-color: rgb(239, 239, 239); box-sizing: border-box !important; word-wrap: break-word !important;"><legend style="max-width: 100%; text-align: center; font-size: medium; box-sizing: border-box !important; word-wrap: break-word !important;"><span style="padding: 4px 10px; max-width: 100%; border-top-left-radius: 2em 0.5em; border-top-right-radius: 1em 3em; border-bottom-right-radius: 4em 0.5em; border-bottom-left-radius: 1em 3em; color: rgb(255, 255, 255); box-shadow: rgb(165, 165, 165) 4px 4px 2px; background-color: rgb(0, 202, 255); font-family: 微软雅黑; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">写在前面</span></legend><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">积极的人像太阳，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">照到哪里哪里亮；</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">消极的人像月亮，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">初一十五不一样。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">态度决定一切。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">有什么态度，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">就有什么样的未来。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">有怎样的性格，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">就有怎样的人生。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">不折腾，你永远都是——“做梦君”！</span><br></fieldset><br></div><br><a id="more"></a><br><div align="center"><br><img src="/img/20160905/1.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">如果你不能飞，那就跑；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">如果跑不动，那就走；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">实在走不动了，那就爬。</span><br><strong><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">记住：</span></strong><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">无论做什么，都要勇往直前；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">无论有多难，都要多坚持一下。</span><br></div><br><div align="center"><br><img src="/img/20160905/2.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">斑驳如画的风景是大自然对人类的慷慨；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">努力在事业中拼搏是生命对人生的期待；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">千万不要低估你实现梦想的能力。</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">更不要怀疑你的努力。</span><br><span style="max-width: 100%; font-family: 宋体; font-weight: bold; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">请时刻提醒自己：</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">再不折腾，你就老了！</span><br></div><br><div align="center"><br><img src="/img/20160905/3.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">所谓青春纪念册，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">是折腾不动时候的回忆。</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">趁年轻，趁当下，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">努力拼搏，好好生活，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">工作之余，多读几本益身心的书；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">有时间，多去看望朋友。</span><br><span style="max-width: 100%; font-size: 16px; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;">忙碌，让生活更有意义，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">让回忆充满色彩。</span><br></div><br><div align="center"><br><img src="/img/20160905/4.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">我们必须接受失望，因为它是有限的；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">但千万不可失去希望，因为它是无穷的。</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">感恩那些让你有笑有泪的成长，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">同时也别忘了提醒自己：</span><br><span style="max-width: 100%; color: rgb(247, 150, 70); font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"><strong><span style="max-width: 100%; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;">还有梦想尚未实现，还有高峰不曾抵达，</span></strong></span><br><span style="max-width: 100%; color: rgb(247, 150, 70); font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"><strong><span style="max-width: 100%; font-size: 18px; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;">让我们更有力量！</span></strong></span><br><span style="max-width: 100%; color: rgb(247, 150, 70); font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"><strong><span style="max-width: 100%; font-size: 18px; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;"></span></strong></span><br></div>
]]></content>
    
    <summary type="html">
    
      &lt;div align=center&gt;&lt;br&gt;&lt;fieldset style=&quot;padding: 15px; max-width: 100%; min-width: 0px; border: 1px solid rgb(0, 202, 255); color: rgb(51, 51, 51); line-height: 24px; font-family: 宋体; orphans: 2; widows: 2; box-shadow: rgb(165, 165, 165) 5px 5px 2px; background-color: rgb(239, 239, 239); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;&lt;legend style=&quot;max-width: 100%; text-align: center; font-size: medium; box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;padding: 4px 10px; max-width: 100%; border-top-left-radius: 2em 0.5em; border-top-right-radius: 1em 3em; border-bottom-right-radius: 4em 0.5em; border-bottom-left-radius: 1em 3em; color: rgb(255, 255, 255); box-shadow: rgb(165, 165, 165) 4px 4px 2px; background-color: rgb(0, 202, 255); font-family: 微软雅黑; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;写在前面&lt;/span&gt;&lt;/legend&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;积极的人像太阳，&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;照到哪里哪里亮；&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;消极的人像月亮，&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;初一十五不一样。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;态度决定一切。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;有什么态度，&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;就有什么样的未来。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;有怎样的性格，&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;就有怎样的人生。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;&quot;&gt;不折腾，你永远都是——“做梦君”！&lt;/span&gt;&lt;br&gt;&lt;/fieldset&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>网站设计的最简主义</title>
    <link href="http://cuiqingwei.github.io/2016/05/12/2016-05-12-%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%9C%80%E7%AE%80%E4%B8%BB%E4%B9%89/"/>
    <id>http://cuiqingwei.github.io/2016/05/12/2016-05-12-网站设计的最简主义/</id>
    <published>2016-05-12T09:23:37.000Z</published>
    <updated>2016-09-15T13:00:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前在阮一峰的网络日志看到《网站设计的最简主义》，文中写到：</p>
<p>昨天，我看到了一个网站 (<a href="http://www.plaintxt.org" target="_blank" rel="external"><u>http://www.plaintxt.org</u></a>)，提倡最简主义（<strong>Minimalism</strong>）的设计，这也正是我的想法。我因此感到十分惊喜。所谓”最简主义”设计，就是说网页上没有不相关的内容与装饰，美工基本就是白底黑字，尽量少用图片和复杂的排版，给人一种非常简单朴素的感觉。</p>
<p><strong>Plaintxt.org</strong>的站长<strong>Scott</strong>说，他信奉”最简主义”设计，因为<strong>2000</strong>年下半年他去尼泊尔当志愿者。在那里，他只能用<strong>24.4K</strong>的<strong>Modem</strong>上网，这意味着一幅<strong>120K</strong>的图片，都要花将近1分钟才能看到。他在尼泊尔待了3年，再回到美国以后，彻底改变了对网站设计的看法，从此走上了宣传”最简主义”的道路。<br><a id="more"></a><br>至于我为什么喜欢”最简主义”，除了因为我喜欢简洁的东西以外，还因为我觉得将页面最简化，可以使访问者集中注意力，关注主要的内容。（顺便说一句，在读书上，我也喜欢”最简主义”的文字，就是说没有不相关的废话。）我认为，”最简主义”有利于节省访问者的时间，体现了对访问者的尊重，最终也有利于网站的成功。Google就是”最简主义”的一个典型，首页上就是只有一个长长的搜索框。</p>
<p>另外，在Plaintxt.org的首页上，Scott还说了一句很棒的话。他说：<strong>“我不是程序员，也不是设计师，我只是碰巧有一些想法和一台电脑。”（I am not a designer nor a coder. I’m just a guy with a point-of-view and a computer.）</strong>我很喜欢这句话，它也是我的心声。</p>
<p>赞同<em>最简主义</em>，因此，本人主页追求简洁朴素！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在阮一峰的网络日志看到《网站设计的最简主义》，文中写到：&lt;/p&gt;
&lt;p&gt;昨天，我看到了一个网站 (&lt;a href=&quot;http://www.plaintxt.org&quot;&gt;&lt;u&gt;http://www.plaintxt.org&lt;/u&gt;&lt;/a&gt;)，提倡最简主义（&lt;strong&gt;Minimalism&lt;/strong&gt;）的设计，这也正是我的想法。我因此感到十分惊喜。所谓”最简主义”设计，就是说网页上没有不相关的内容与装饰，美工基本就是白底黑字，尽量少用图片和复杂的排版，给人一种非常简单朴素的感觉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Plaintxt.org&lt;/strong&gt;的站长&lt;strong&gt;Scott&lt;/strong&gt;说，他信奉”最简主义”设计，因为&lt;strong&gt;2000&lt;/strong&gt;年下半年他去尼泊尔当志愿者。在那里，他只能用&lt;strong&gt;24.4K&lt;/strong&gt;的&lt;strong&gt;Modem&lt;/strong&gt;上网，这意味着一幅&lt;strong&gt;120K&lt;/strong&gt;的图片，都要花将近1分钟才能看到。他在尼泊尔待了3年，再回到美国以后，彻底改变了对网站设计的看法，从此走上了宣传”最简主义”的道路。&lt;br&gt;
    
    </summary>
    
    
      <category term="网站设计" scheme="http://cuiqingwei.github.io/tags/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="最简主义" scheme="http://cuiqingwei.github.io/tags/%E6%9C%80%E7%AE%80%E4%B8%BB%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>GitHub建立个人站点</title>
    <link href="http://cuiqingwei.github.io/2016/05/12/2016-05-12-GitHub%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/"/>
    <id>http://cuiqingwei.github.io/2016/05/12/2016-05-12-GitHub建立个人站点/</id>
    <published>2016-05-12T03:38:38.000Z</published>
    <updated>2016-09-18T08:58:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>Jekyll-简单的博客、静态网站工具<a href="http://jekyll.bootcss.om/" target="_blank" rel="external">http://jekyll.bootcss.com/</a>;</p>
<h3 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h3><ul>
<li>Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</li>
</ul>
<ul>
<li>GitHub可以托管各种git库的站点。</li>
</ul>
<ul>
<li>GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。</li>
</ul>
<h3 id="2-为什么使用Github-Pages"><a href="#2-为什么使用Github-Pages" class="headerlink" title="2.为什么使用Github Pages"></a>2.为什么使用Github Pages</h3><ul>
<li>搭建简单而且免费；</li>
<li>支持静态脚本；</li>
<li>可以绑定你的域名；</li>
<li>DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；</li>
<li>理想写博环境，git+github+markdown+jekyll；<a id="more"></a>
<h3 id="3-创建Github-Pages"><a href="#3-创建Github-Pages" class="headerlink" title="3 创建Github Pages"></a>3 创建Github Pages</h3></li>
</ul>
<h4 id="3-1-安装git工具"><a href="#3-1-安装git工具" class="headerlink" title="3.1 安装git工具"></a>3.1 安装git工具</h4><ul>
<li>Windows <a href="http://windows.github.com/" target="_blank" rel="external">http://windows.github.com/</a>;</li>
<li>Mac OS X <a href="http://mac.github.com/&amp;gt" target="_blank" rel="external">http://mac.github.com/&amp;gt</a>;</li>
</ul>
<h4 id="3-2-两种pages模式"><a href="#3-2-两种pages模式" class="headerlink" title="3.2 两种pages模式"></a>3.2 两种pages模式</h4><h5 id="1-User-Organization-Pages-个人或公司站点"><a href="#1-User-Organization-Pages-个人或公司站点" class="headerlink" title="1) User/Organization Pages 个人或公司站点"></a>1) User/Organization Pages 个人或公司站点</h5><ul>
<li>使用自己的用户名，每个用户名下面只能建立一个；</li>
<li>资源命名必须符合这样的规则username/username.github.com；</li>
<li>主干上内容被用来构建和发布页面</li>
</ul>
<h5 id="2-Project-Pages-项目站点"><a href="#2-Project-Pages-项目站点" class="headerlink" title="2) Project Pages 项目站点"></a>2) Project Pages 项目站点</h5><ul>
<li>gh-pages分支用于构建和发布；</li>
<li>如果user/org pages使用了独立域名，那么托管在账户下的所有project pages将使用相同的域名进行重定向，除非project pages使用了自己的独立域名；</li>
<li>如果没有使用独立域名，project pages将通过子路径的形式提供服务username.github.com/projectname；</li>
<li>自定义404页面只能在独立域名下使用，否则会使用User Pages 404；</li>
<li><p>创建项目站点步骤：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/USERNAME/PROJECT.git PROJECT</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div><div class="line">$ git add .</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">"First pages commit"</span></div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
</li>
<li><p>可以通过User/OrganizationPages建立主站，而通过ProjectPages挂载二级应用页面。</p>
</li>
</ul>
<h3 id="4-使用Jekyll搭建博客"><a href="#4-使用Jekyll搭建博客" class="headerlink" title="4 使用Jekyll搭建博客"></a>4 使用Jekyll搭建博客</h3><h4 id="4-1-什么是jekyll"><a href="#4-1-什么是jekyll" class="headerlink" title="4.1 什么是jekyll"></a>4.1 什么是jekyll</h4><ul>
<li>Jekyll是一种简单的、适用于博客的、静态网站生成引擎。它使用一个模板目录作为网站布局的基础框架，支持Markdown、Textile等标记语言的解析，提供了模板、变量、插件等功能，最终生成一个完整的静态Web站点。说白了就是，只要安装Jekyll的规范和结构，不用写html，就可以生成网站。[jekyll介绍][jekyll on github][jekyllbootstrap]。</li>
<li>Jekyll使用Liquid模板语言，表示文章标题，<p>Jekyll-简单的博客、静态网站工具<a href="http://jekyll.bootcss.om/" target="_blank" rel="external">http://jekyll.bootcss.com/</a>;</p>
<h3 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h3><ul>
<li>Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</li>
</ul>
<ul>
<li>GitHub可以托管各种git库的站点。</li>
</ul>
<ul>
<li>GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。</li>
</ul>
<h3 id="2-为什么使用Github-Pages"><a href="#2-为什么使用Github-Pages" class="headerlink" title="2.为什么使用Github Pages"></a>2.为什么使用Github Pages</h3><ul>
<li>搭建简单而且免费；</li>
<li>支持静态脚本；</li>
<li>可以绑定你的域名；</li>
<li>DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；</li>
<li>理想写博环境，git+github+markdown+jekyll；<!--more-->
<h3 id="3-创建Github-Pages"><a href="#3-创建Github-Pages" class="headerlink" title="3 创建Github Pages"></a>3 创建Github Pages</h3></li>
</ul>
<h4 id="3-1-安装git工具"><a href="#3-1-安装git工具" class="headerlink" title="3.1 安装git工具"></a>3.1 安装git工具</h4><ul>
<li>Windows <a href="http://windows.github.com/" target="_blank" rel="external">http://windows.github.com/</a>;</li>
<li>Mac OS X <a href="http://mac.github.com/&amp;gt" target="_blank" rel="external">http://mac.github.com/&amp;gt</a>;</li>
</ul>
<h4 id="3-2-两种pages模式"><a href="#3-2-两种pages模式" class="headerlink" title="3.2 两种pages模式"></a>3.2 两种pages模式</h4><h5 id="1-User-Organization-Pages-个人或公司站点"><a href="#1-User-Organization-Pages-个人或公司站点" class="headerlink" title="1) User/Organization Pages 个人或公司站点"></a>1) User/Organization Pages 个人或公司站点</h5><ul>
<li>使用自己的用户名，每个用户名下面只能建立一个；</li>
<li>资源命名必须符合这样的规则username/username.github.com；</li>
<li>主干上内容被用来构建和发布页面</li>
</ul>
<h5 id="2-Project-Pages-项目站点"><a href="#2-Project-Pages-项目站点" class="headerlink" title="2) Project Pages 项目站点"></a>2) Project Pages 项目站点</h5><ul>
<li>gh-pages分支用于构建和发布；</li>
<li>如果user/org pages使用了独立域名，那么托管在账户下的所有project pages将使用相同的域名进行重定向，除非project pages使用了自己的独立域名；</li>
<li>如果没有使用独立域名，project pages将通过子路径的形式提供服务username.github.com/projectname；</li>
<li>自定义404页面只能在独立域名下使用，否则会使用User Pages 404；</li>
<li><p>创建项目站点步骤：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/USERNAME/PROJECT.git PROJECT</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div><div class="line">$ git add .</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">"First pages commit"</span></div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
</li>
<li><p>可以通过User/OrganizationPages建立主站，而通过ProjectPages挂载二级应用页面。</p>
</li>
</ul>
<h3 id="4-使用Jekyll搭建博客"><a href="#4-使用Jekyll搭建博客" class="headerlink" title="4 使用Jekyll搭建博客"></a>4 使用Jekyll搭建博客</h3><h4 id="4-1-什么是jekyll"><a href="#4-1-什么是jekyll" class="headerlink" title="4.1 什么是jekyll"></a>4.1 什么是jekyll</h4><ul>
<li>Jekyll是一种简单的、适用于博客的、静态网站生成引擎。它使用一个模板目录作为网站布局的基础框架，支持Markdown、Textile等标记语言的解析，提供了模板、变量、插件等功能，最终生成一个完整的静态Web站点。说白了就是，只要安装Jekyll的规范和结构，不用写html，就可以生成网站。[jekyll介绍][jekyll on github][jekyllbootstrap]。</li>
<li>Jekyll使用Liquid模板语言，{{page.title}}表示文章标题，{{content}}表示文章内容。我们可以用两种Liquid标记语言：输出标记（output markup）和标签标记 (tag markup)。输出标记会输出文本（如果被引用的变量存在），而标签标记不会。输出标记是用双花括号分隔，而标签标记是用花括号-百分号对分隔。[Liquid模板语言] [Liquid模板变量参考]。</li>
<li>jekyll与github的关系：GitHub Pages一个由 GitHub 提供的用于托管项目主页或博客的服务，jekyll是后台所运行的引擎。</li>
</ul>
<h4 id="4-2-jekyll本地环境搭建"><a href="#4-2-jekyll本地环境搭建" class="headerlink" title="4.2 jekyll本地环境搭建"></a>4.2 jekyll本地环境搭建</h4><ul>
<li>下载最新的RubyInstaller并安装(我下载的是rubyinstaller-1.9.3-p194.exe)，设置环境变量，path中配置C:\Ruby193\bin目录，然后在命令行终端下输入gem update –system来升级gem；</li>
<li><p>下载最新的DevKit，DevKit是windows平台下编译和使用本地C/C++扩展包的工具。它就是用来模拟Linux平台下的make,gcc,sh来进行编译。但是这个方法目前仅支持通过RubyInstaller安装的Ruby，并双击运行解压到C:\DevKit。然后打开终端cmd，输入下列命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> C:\DevKit</div><div class="line">ruby dk.rb init</div><div class="line">ruby dk.rb install</div></pre></td></tr></table></figure>
</li>
<li><p>完成上面的准备就可以安装Jekyll了,因为Jekyll是用Ruby编写的,最好的安装方式是通过RubyGems(gem):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install Jekyll</div></pre></td></tr></table></figure>
</li>
<li><p>并使用命令检验是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --version</div></pre></td></tr></table></figure>
</li>
<li><p>安装Rdiscount，这个用来解析Markdown标记的包，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rdiscount</div></pre></td></tr></table></figure>
</li>
<li><p>运行本地工程：<br>cd 到工程目录，启动服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-3-jekyll目录结构"><a href="#4-3-jekyll目录结构" class="headerlink" title="4.3 jekyll目录结构**"></a>4.3 jekyll目录结构**</h4><ul>
<li><p><strong>_posts：</strong><br>: _posts中的数据文档，通过注入_layouts定义的模板，通过jekyll –server最终生成的静态页面在_sites目录。目录是用来存放你的文章的，一般以日期的形式书写标题。</p>
</li>
<li><p><strong>_layouts：</strong><br>: _layouts中的模板一般指向了_includes/themes中的模板。目录是用来存放模板的，在这里你可以定义页面中不同的头部和底部。</p>
</li>
<li><p><strong>_includes：</strong><br>: _includes/JB中有一些常用的工具，用于列表显示、评论等；<br>: _includes/themes中可参看主题的相关html文档。<br>: _includes/themes中的主题一般包含default.html、post.html和page.html三个文档。default.html定义了网站的最上层框架（模板），post.html和page.html是其子框架（模板）。<br>: 生成好的html子页面通过default.html的{{ content }}变量调用，生成整个页面。</p>
<ul>
<li><strong>assets</strong><br>: 渲染页面的CSS和JS文档在assets/themes中</li>
</ul>
</li>
<li><p><strong>_config.yml</strong><br>: 站点生成需要用到_config.yml配置文件，站点的全局变量在_config.yml中定义，用site.访问；页面的变量在YAML Front Matter中定义，用page.访问，更多的模板变量可参考模板数据。</p>
</li>
<li><p><strong>index.html</strong> 是你的页面首页。</p>
</li>
</ul>
<h4 id="4-4-Jekyll-Bootstrap创建博客"><a href="#4-4-Jekyll-Bootstrap创建博客" class="headerlink" title="4.4 Jekyll-Bootstrap创建博客"></a>4.4 Jekyll-Bootstrap创建博客</h4><ul>
<li>创建个人站点，即创建一个新资源，格式为username.github.com；</li>
<li><p>安装Jekyll-Bootstrap：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com</div><div class="line">$ <span class="built_in">cd</span> USERNAME.github.com</div><div class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com:USERNAME/USERNAME.github.com.git</div><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
</li>
<li><p>访问创建好的个人站点：username.github.com</p>
</li>
<li>在本地测试查看效果：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> USERNAME.github.com</div><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-5-Jekyll-写博过程"><a href="#4-5-Jekyll-写博过程" class="headerlink" title="4.5 Jekyll 写博过程"></a>4.5 Jekyll 写博过程</h4><h5 id="1-配置-config-yml"><a href="#1-配置-config-yml" class="headerlink" title="1) 配置_config.yml"></a>1) 配置_config.yml</h5><ul>
<li><p>修改标题：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title : My B<span class="built_in">log</span> =)</div></pre></td></tr></table></figure>
</li>
<li><p>修改个人信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">author :</div><div class="line">name : Name Lastname</div><div class="line">email : blah@email.test</div><div class="line">github : username</div><div class="line">twitter : username</div><div class="line">feedburner : feedname</div><div class="line">``</div><div class="line"></div><div class="line"><span class="comment">##### 2) 写文章</span></div><div class="line">按照_config.yml的格式permalink: /:categories/:year/:month/:day/:title，可以修改格式，创建markdown格式文件，就可以发布了。</div><div class="line"></div><div class="line"><span class="comment">##### 3) 发布</span></div><div class="line">本地预览修改：运行jekyll –server，预览http:127.0.0.1:4000。</div><div class="line">发布到github上：通过命令提交或者客户端提交。</div><div class="line"></div><div class="line"><span class="comment">#### 4.6 个性化博客</span></div><div class="line">Github Page完成了博客的主要功能，写作、发布、修改，这些都是相对静态的东西，就是你自己可以控制的事情，还有一些动态的东西Github Pages无法支持，比如说文章浏览次数、文章的评论等，还有一些个性化的东西，像个性化页头页尾、代码高亮可以把博客整的更漂亮一点，其实这写都可以通过第三方应用来实现，个性化自己的博客。</div><div class="line">加上Disqus云评论:</div><div class="line">注册http://disqus.com</div><div class="line">修改_config.yml:</div><div class="line">``` bash</div><div class="line">comments :</div><div class="line">provider : disqus</div><div class="line">disqus :</div><div class="line">short_name : tiansj</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-使用Markdown"><a href="#5-使用Markdown" class="headerlink" title="5 使用Markdown"></a>5 使用Markdown</h3><h4 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h4><ul>
<li>Markdown 的宗旨是实现「易读易写」。可读性，无论如何，都是最重要的。</li>
<li>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。格式撰写的文件可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</li>
<li>资料：<a href="http://www.cnblogs.com/purediy/archive/2013/01/10/2855397.html" target="_blank" rel="external">搭建环境</a></li>
</ul>
<h4 id="5-2-基本语法"><a href="#5-2-基本语法" class="headerlink" title="5.2 基本语法"></a>5.2 基本语法</h4><ul>
<li>使用一个或多个空行分隔内容段来生成段落 <p>。</p></li>
<li>标题（h1~h6）格式为使用相应个数的“#”作前缀，比如表示h3用 ### this is a level-3 header ###</li>
<li>使用“&gt;”作为段落前缀来标识引用文字段落。这其实是 email 中标记引用文字的标准方式；</li>
<li>使用<strong>*</strong>或<strong>+</strong>或<strong>-</strong>来表示无序列表；使用数字加“.”表示有序列表。如：</li>
</ul>
<ol>
<li>I am ordered list item 1…</li>
<li>So I should be item 2</li>
</ol>
<ul>
<li>使用4个以上<strong>空格</strong>或1个以上的<strong>tab</strong>来标记代码段落，它们将被<strong>\<pre\></pre\></strong>和<strong>\<code\></code\></strong>包裹，这意味着代码段内的字体会是monospace家族的，并且特殊符号不会被转义。</li>
<li>使用[test](<a href="http://example.net" target="_blank" rel="external">http://example.net</a> “optional title”)来标记普通链接。</li>
<li>使用![img](<a href="http://example.net/img.png" target="_blank" rel="external">http://example.net/img.png</a> “optional title”)&gt;来标记图片。引号内的title文字是可选的，链接也可以使用相对路径。</li>
<li>使用* 或 _ 包裹文本产生 strong 效果：<em>语气很重的文本</em> 以及 <strong>语气更重的文本</strong></li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>GitHub Pages 建立个人主页 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a></li>
<li>jekyll <a href="http://jekyll.bootcss.com/" target="_blank" rel="external">http://jekyll.bootcss.com/</a></li>
<li>GitHub Pages和Jekyll入门 <a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html</a></li>
<li>通过GitHub Pages建立个人站点 <a href="http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="external">http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html</a></li>
<li>基于jekyll-bootstrap的GitHub Pages搭建过程 <a href="http://www.cnblogs.com/Leo_wl/p/3402935.html" target="_blank" rel="external">http://www.cnblogs.com/Leo_wl/p/3402935.html</a></li>
<li>jekyll-bootstrap模板 <a href="http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html" target="_blank" rel="external">http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html</a></li>
<li>Markdown 语法说明 <a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="external">http://wowubuntu.com/markdown/index.html</a></li>
<li>highlight.js <a href="https://highlightjs.org/" target="_blank" rel="external">https://highlightjs.org/</a></li>
</ul>
表示文章内容。我们可以用两种Liquid标记语言：输出标记（output markup）和标签标记 (tag markup)。输出标记会输出文本（如果被引用的变量存在），而标签标记不会。输出标记是用双花括号分隔，而标签标记是用花括号-百分号对分隔。[Liquid模板语言] [Liquid模板变量参考]。</li>
<li>jekyll与github的关系：GitHub Pages一个由 GitHub 提供的用于托管项目主页或博客的服务，jekyll是后台所运行的引擎。</li>
</ul>
<h4 id="4-2-jekyll本地环境搭建"><a href="#4-2-jekyll本地环境搭建" class="headerlink" title="4.2 jekyll本地环境搭建"></a>4.2 jekyll本地环境搭建</h4><ul>
<li>下载最新的RubyInstaller并安装(我下载的是rubyinstaller-1.9.3-p194.exe)，设置环境变量，path中配置C:\Ruby193\bin目录，然后在命令行终端下输入gem update –system来升级gem；</li>
<li><p>下载最新的DevKit，DevKit是windows平台下编译和使用本地C/C++扩展包的工具。它就是用来模拟Linux平台下的make,gcc,sh来进行编译。但是这个方法目前仅支持通过RubyInstaller安装的Ruby，并双击运行解压到C:\DevKit。然后打开终端cmd，输入下列命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> C:\DevKit</div><div class="line">ruby dk.rb init</div><div class="line">ruby dk.rb install</div></pre></td></tr></table></figure>
</li>
<li><p>完成上面的准备就可以安装Jekyll了,因为Jekyll是用Ruby编写的,最好的安装方式是通过RubyGems(gem):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install Jekyll</div></pre></td></tr></table></figure>
</li>
<li><p>并使用命令检验是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --version</div></pre></td></tr></table></figure>
</li>
<li><p>安装Rdiscount，这个用来解析Markdown标记的包，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rdiscount</div></pre></td></tr></table></figure>
</li>
<li><p>运行本地工程：<br>cd 到工程目录，启动服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-3-jekyll目录结构"><a href="#4-3-jekyll目录结构" class="headerlink" title="4.3 jekyll目录结构**"></a>4.3 jekyll目录结构**</h4><ul>
<li><p><strong>_posts：</strong><br>: _posts中的数据文档，通过注入_layouts定义的模板，通过jekyll –server最终生成的静态页面在_sites目录。目录是用来存放你的文章的，一般以日期的形式书写标题。</p>
</li>
<li><p><strong>_layouts：</strong><br>: _layouts中的模板一般指向了_includes/themes中的模板。目录是用来存放模板的，在这里你可以定义页面中不同的头部和底部。</p>
</li>
<li><p><strong>_includes：</strong><br>: _includes/JB中有一些常用的工具，用于列表显示、评论等；<br>: _includes/themes中可参看主题的相关html文档。<br>: _includes/themes中的主题一般包含default.html、post.html和page.html三个文档。default.html定义了网站的最上层框架（模板），post.html和page.html是其子框架（模板）。<br>: 生成好的html子页面通过default.html的</p><p>Jekyll-简单的博客、静态网站工具<a href="http://jekyll.bootcss.om/" target="_blank" rel="external">http://jekyll.bootcss.com/</a>;</p>
<h3 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h3><ul>
<li>Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</li>
</ul>
<ul>
<li>GitHub可以托管各种git库的站点。</li>
</ul>
<ul>
<li>GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。</li>
</ul>
<h3 id="2-为什么使用Github-Pages"><a href="#2-为什么使用Github-Pages" class="headerlink" title="2.为什么使用Github Pages"></a>2.为什么使用Github Pages</h3><ul>
<li>搭建简单而且免费；</li>
<li>支持静态脚本；</li>
<li>可以绑定你的域名；</li>
<li>DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；</li>
<li>理想写博环境，git+github+markdown+jekyll；<!--more-->
<h3 id="3-创建Github-Pages"><a href="#3-创建Github-Pages" class="headerlink" title="3 创建Github Pages"></a>3 创建Github Pages</h3></li>
</ul>
<h4 id="3-1-安装git工具"><a href="#3-1-安装git工具" class="headerlink" title="3.1 安装git工具"></a>3.1 安装git工具</h4><ul>
<li>Windows <a href="http://windows.github.com/" target="_blank" rel="external">http://windows.github.com/</a>;</li>
<li>Mac OS X <a href="http://mac.github.com/&amp;gt" target="_blank" rel="external">http://mac.github.com/&amp;gt</a>;</li>
</ul>
<h4 id="3-2-两种pages模式"><a href="#3-2-两种pages模式" class="headerlink" title="3.2 两种pages模式"></a>3.2 两种pages模式</h4><h5 id="1-User-Organization-Pages-个人或公司站点"><a href="#1-User-Organization-Pages-个人或公司站点" class="headerlink" title="1) User/Organization Pages 个人或公司站点"></a>1) User/Organization Pages 个人或公司站点</h5><ul>
<li>使用自己的用户名，每个用户名下面只能建立一个；</li>
<li>资源命名必须符合这样的规则username/username.github.com；</li>
<li>主干上内容被用来构建和发布页面</li>
</ul>
<h5 id="2-Project-Pages-项目站点"><a href="#2-Project-Pages-项目站点" class="headerlink" title="2) Project Pages 项目站点"></a>2) Project Pages 项目站点</h5><ul>
<li>gh-pages分支用于构建和发布；</li>
<li>如果user/org pages使用了独立域名，那么托管在账户下的所有project pages将使用相同的域名进行重定向，除非project pages使用了自己的独立域名；</li>
<li>如果没有使用独立域名，project pages将通过子路径的形式提供服务username.github.com/projectname；</li>
<li>自定义404页面只能在独立域名下使用，否则会使用User Pages 404；</li>
<li><p>创建项目站点步骤：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/USERNAME/PROJECT.git PROJECT</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div><div class="line">$ git add .</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">"First pages commit"</span></div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
</li>
<li><p>可以通过User/OrganizationPages建立主站，而通过ProjectPages挂载二级应用页面。</p>
</li>
</ul>
<h3 id="4-使用Jekyll搭建博客"><a href="#4-使用Jekyll搭建博客" class="headerlink" title="4 使用Jekyll搭建博客"></a>4 使用Jekyll搭建博客</h3><h4 id="4-1-什么是jekyll"><a href="#4-1-什么是jekyll" class="headerlink" title="4.1 什么是jekyll"></a>4.1 什么是jekyll</h4><ul>
<li>Jekyll是一种简单的、适用于博客的、静态网站生成引擎。它使用一个模板目录作为网站布局的基础框架，支持Markdown、Textile等标记语言的解析，提供了模板、变量、插件等功能，最终生成一个完整的静态Web站点。说白了就是，只要安装Jekyll的规范和结构，不用写html，就可以生成网站。[jekyll介绍][jekyll on github][jekyllbootstrap]。</li>
<li>Jekyll使用Liquid模板语言，{{page.title}}表示文章标题，{{content}}表示文章内容。我们可以用两种Liquid标记语言：输出标记（output markup）和标签标记 (tag markup)。输出标记会输出文本（如果被引用的变量存在），而标签标记不会。输出标记是用双花括号分隔，而标签标记是用花括号-百分号对分隔。[Liquid模板语言] [Liquid模板变量参考]。</li>
<li>jekyll与github的关系：GitHub Pages一个由 GitHub 提供的用于托管项目主页或博客的服务，jekyll是后台所运行的引擎。</li>
</ul>
<h4 id="4-2-jekyll本地环境搭建"><a href="#4-2-jekyll本地环境搭建" class="headerlink" title="4.2 jekyll本地环境搭建"></a>4.2 jekyll本地环境搭建</h4><ul>
<li>下载最新的RubyInstaller并安装(我下载的是rubyinstaller-1.9.3-p194.exe)，设置环境变量，path中配置C:\Ruby193\bin目录，然后在命令行终端下输入gem update –system来升级gem；</li>
<li><p>下载最新的DevKit，DevKit是windows平台下编译和使用本地C/C++扩展包的工具。它就是用来模拟Linux平台下的make,gcc,sh来进行编译。但是这个方法目前仅支持通过RubyInstaller安装的Ruby，并双击运行解压到C:\DevKit。然后打开终端cmd，输入下列命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> C:\DevKit</div><div class="line">ruby dk.rb init</div><div class="line">ruby dk.rb install</div></pre></td></tr></table></figure>
</li>
<li><p>完成上面的准备就可以安装Jekyll了,因为Jekyll是用Ruby编写的,最好的安装方式是通过RubyGems(gem):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install Jekyll</div></pre></td></tr></table></figure>
</li>
<li><p>并使用命令检验是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --version</div></pre></td></tr></table></figure>
</li>
<li><p>安装Rdiscount，这个用来解析Markdown标记的包，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rdiscount</div></pre></td></tr></table></figure>
</li>
<li><p>运行本地工程：<br>cd 到工程目录，启动服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-3-jekyll目录结构"><a href="#4-3-jekyll目录结构" class="headerlink" title="4.3 jekyll目录结构**"></a>4.3 jekyll目录结构**</h4><ul>
<li><p><strong>_posts：</strong><br>: _posts中的数据文档，通过注入_layouts定义的模板，通过jekyll –server最终生成的静态页面在_sites目录。目录是用来存放你的文章的，一般以日期的形式书写标题。</p>
</li>
<li><p><strong>_layouts：</strong><br>: _layouts中的模板一般指向了_includes/themes中的模板。目录是用来存放模板的，在这里你可以定义页面中不同的头部和底部。</p>
</li>
<li><p><strong>_includes：</strong><br>: _includes/JB中有一些常用的工具，用于列表显示、评论等；<br>: _includes/themes中可参看主题的相关html文档。<br>: _includes/themes中的主题一般包含default.html、post.html和page.html三个文档。default.html定义了网站的最上层框架（模板），post.html和page.html是其子框架（模板）。<br>: 生成好的html子页面通过default.html的{{ content }}变量调用，生成整个页面。</p>
<ul>
<li><strong>assets</strong><br>: 渲染页面的CSS和JS文档在assets/themes中</li>
</ul>
</li>
<li><p><strong>_config.yml</strong><br>: 站点生成需要用到_config.yml配置文件，站点的全局变量在_config.yml中定义，用site.访问；页面的变量在YAML Front Matter中定义，用page.访问，更多的模板变量可参考模板数据。</p>
</li>
<li><p><strong>index.html</strong> 是你的页面首页。</p>
</li>
</ul>
<h4 id="4-4-Jekyll-Bootstrap创建博客"><a href="#4-4-Jekyll-Bootstrap创建博客" class="headerlink" title="4.4 Jekyll-Bootstrap创建博客"></a>4.4 Jekyll-Bootstrap创建博客</h4><ul>
<li>创建个人站点，即创建一个新资源，格式为username.github.com；</li>
<li><p>安装Jekyll-Bootstrap：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com</div><div class="line">$ <span class="built_in">cd</span> USERNAME.github.com</div><div class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com:USERNAME/USERNAME.github.com.git</div><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
</li>
<li><p>访问创建好的个人站点：username.github.com</p>
</li>
<li>在本地测试查看效果：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> USERNAME.github.com</div><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-5-Jekyll-写博过程"><a href="#4-5-Jekyll-写博过程" class="headerlink" title="4.5 Jekyll 写博过程"></a>4.5 Jekyll 写博过程</h4><h5 id="1-配置-config-yml"><a href="#1-配置-config-yml" class="headerlink" title="1) 配置_config.yml"></a>1) 配置_config.yml</h5><ul>
<li><p>修改标题：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title : My B<span class="built_in">log</span> =)</div></pre></td></tr></table></figure>
</li>
<li><p>修改个人信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">author :</div><div class="line">name : Name Lastname</div><div class="line">email : blah@email.test</div><div class="line">github : username</div><div class="line">twitter : username</div><div class="line">feedburner : feedname</div><div class="line">``</div><div class="line"></div><div class="line"><span class="comment">##### 2) 写文章</span></div><div class="line">按照_config.yml的格式permalink: /:categories/:year/:month/:day/:title，可以修改格式，创建markdown格式文件，就可以发布了。</div><div class="line"></div><div class="line"><span class="comment">##### 3) 发布</span></div><div class="line">本地预览修改：运行jekyll –server，预览http:127.0.0.1:4000。</div><div class="line">发布到github上：通过命令提交或者客户端提交。</div><div class="line"></div><div class="line"><span class="comment">#### 4.6 个性化博客</span></div><div class="line">Github Page完成了博客的主要功能，写作、发布、修改，这些都是相对静态的东西，就是你自己可以控制的事情，还有一些动态的东西Github Pages无法支持，比如说文章浏览次数、文章的评论等，还有一些个性化的东西，像个性化页头页尾、代码高亮可以把博客整的更漂亮一点，其实这写都可以通过第三方应用来实现，个性化自己的博客。</div><div class="line">加上Disqus云评论:</div><div class="line">注册http://disqus.com</div><div class="line">修改_config.yml:</div><div class="line">``` bash</div><div class="line">comments :</div><div class="line">provider : disqus</div><div class="line">disqus :</div><div class="line">short_name : tiansj</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-使用Markdown"><a href="#5-使用Markdown" class="headerlink" title="5 使用Markdown"></a>5 使用Markdown</h3><h4 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h4><ul>
<li>Markdown 的宗旨是实现「易读易写」。可读性，无论如何，都是最重要的。</li>
<li>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。格式撰写的文件可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</li>
<li>资料：<a href="http://www.cnblogs.com/purediy/archive/2013/01/10/2855397.html" target="_blank" rel="external">搭建环境</a></li>
</ul>
<h4 id="5-2-基本语法"><a href="#5-2-基本语法" class="headerlink" title="5.2 基本语法"></a>5.2 基本语法</h4><ul>
<li>使用一个或多个空行分隔内容段来生成段落 <p>。</p></li>
<li>标题（h1~h6）格式为使用相应个数的“#”作前缀，比如表示h3用 ### this is a level-3 header ###</li>
<li>使用“&gt;”作为段落前缀来标识引用文字段落。这其实是 email 中标记引用文字的标准方式；</li>
<li>使用<strong>*</strong>或<strong>+</strong>或<strong>-</strong>来表示无序列表；使用数字加“.”表示有序列表。如：</li>
</ul>
<ol>
<li>I am ordered list item 1…</li>
<li>So I should be item 2</li>
</ol>
<ul>
<li>使用4个以上<strong>空格</strong>或1个以上的<strong>tab</strong>来标记代码段落，它们将被<strong>\<pre\></pre\></strong>和<strong>\<code\></code\></strong>包裹，这意味着代码段内的字体会是monospace家族的，并且特殊符号不会被转义。</li>
<li>使用[test](<a href="http://example.net" target="_blank" rel="external">http://example.net</a> “optional title”)来标记普通链接。</li>
<li>使用![img](<a href="http://example.net/img.png" target="_blank" rel="external">http://example.net/img.png</a> “optional title”)&gt;来标记图片。引号内的title文字是可选的，链接也可以使用相对路径。</li>
<li>使用* 或 _ 包裹文本产生 strong 效果：<em>语气很重的文本</em> 以及 <strong>语气更重的文本</strong></li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>GitHub Pages 建立个人主页 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a></li>
<li>jekyll <a href="http://jekyll.bootcss.com/" target="_blank" rel="external">http://jekyll.bootcss.com/</a></li>
<li>GitHub Pages和Jekyll入门 <a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html</a></li>
<li>通过GitHub Pages建立个人站点 <a href="http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="external">http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html</a></li>
<li>基于jekyll-bootstrap的GitHub Pages搭建过程 <a href="http://www.cnblogs.com/Leo_wl/p/3402935.html" target="_blank" rel="external">http://www.cnblogs.com/Leo_wl/p/3402935.html</a></li>
<li>jekyll-bootstrap模板 <a href="http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html" target="_blank" rel="external">http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html</a></li>
<li>Markdown 语法说明 <a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="external">http://wowubuntu.com/markdown/index.html</a></li>
<li>highlight.js <a href="https://highlightjs.org/" target="_blank" rel="external">https://highlightjs.org/</a></li>
</ul>
变量调用，生成整个页面。<p></p>
<ul>
<li><strong>assets</strong><br>: 渲染页面的CSS和JS文档在assets/themes中</li>
</ul>
</li>
<li><p><strong>_config.yml</strong><br>: 站点生成需要用到_config.yml配置文件，站点的全局变量在_config.yml中定义，用site.访问；页面的变量在YAML Front Matter中定义，用page.访问，更多的模板变量可参考模板数据。</p>
</li>
<li><p><strong>index.html</strong> 是你的页面首页。</p>
</li>
</ul>
<h4 id="4-4-Jekyll-Bootstrap创建博客"><a href="#4-4-Jekyll-Bootstrap创建博客" class="headerlink" title="4.4 Jekyll-Bootstrap创建博客"></a>4.4 Jekyll-Bootstrap创建博客</h4><ul>
<li>创建个人站点，即创建一个新资源，格式为username.github.com；</li>
<li><p>安装Jekyll-Bootstrap：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com</div><div class="line">$ <span class="built_in">cd</span> USERNAME.github.com</div><div class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com:USERNAME/USERNAME.github.com.git</div><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
</li>
<li><p>访问创建好的个人站点：username.github.com</p>
</li>
<li>在本地测试查看效果：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> USERNAME.github.com</div><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-5-Jekyll-写博过程"><a href="#4-5-Jekyll-写博过程" class="headerlink" title="4.5 Jekyll 写博过程"></a>4.5 Jekyll 写博过程</h4><h5 id="1-配置-config-yml"><a href="#1-配置-config-yml" class="headerlink" title="1) 配置_config.yml"></a>1) 配置_config.yml</h5><ul>
<li><p>修改标题：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title : My B<span class="built_in">log</span> =)</div></pre></td></tr></table></figure>
</li>
<li><p>修改个人信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">author :</div><div class="line">name : Name Lastname</div><div class="line">email : blah@email.test</div><div class="line">github : username</div><div class="line">twitter : username</div><div class="line">feedburner : feedname</div><div class="line">``</div><div class="line"></div><div class="line"><span class="comment">##### 2) 写文章</span></div><div class="line">按照_config.yml的格式permalink: /:categories/:year/:month/:day/:title，可以修改格式，创建markdown格式文件，就可以发布了。</div><div class="line"></div><div class="line"><span class="comment">##### 3) 发布</span></div><div class="line">本地预览修改：运行jekyll –server，预览http:127.0.0.1:4000。</div><div class="line">发布到github上：通过命令提交或者客户端提交。</div><div class="line"></div><div class="line"><span class="comment">#### 4.6 个性化博客</span></div><div class="line">Github Page完成了博客的主要功能，写作、发布、修改，这些都是相对静态的东西，就是你自己可以控制的事情，还有一些动态的东西Github Pages无法支持，比如说文章浏览次数、文章的评论等，还有一些个性化的东西，像个性化页头页尾、代码高亮可以把博客整的更漂亮一点，其实这写都可以通过第三方应用来实现，个性化自己的博客。</div><div class="line">加上Disqus云评论:</div><div class="line">注册http://disqus.com</div><div class="line">修改_config.yml:</div><div class="line">``` bash</div><div class="line">comments :</div><div class="line">provider : disqus</div><div class="line">disqus :</div><div class="line">short_name : tiansj</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-使用Markdown"><a href="#5-使用Markdown" class="headerlink" title="5 使用Markdown"></a>5 使用Markdown</h3><h4 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h4><ul>
<li>Markdown 的宗旨是实现「易读易写」。可读性，无论如何，都是最重要的。</li>
<li>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。格式撰写的文件可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</li>
<li>资料：<a href="http://www.cnblogs.com/purediy/archive/2013/01/10/2855397.html" target="_blank" rel="external">搭建环境</a></li>
</ul>
<h4 id="5-2-基本语法"><a href="#5-2-基本语法" class="headerlink" title="5.2 基本语法"></a>5.2 基本语法</h4><ul>
<li>使用一个或多个空行分隔内容段来生成段落 <p>。</p></li>
<li>标题（h1~h6）格式为使用相应个数的“#”作前缀，比如表示h3用 ### this is a level-3 header ###</li>
<li>使用“&gt;”作为段落前缀来标识引用文字段落。这其实是 email 中标记引用文字的标准方式；</li>
<li>使用<strong>*</strong>或<strong>+</strong>或<strong>-</strong>来表示无序列表；使用数字加“.”表示有序列表。如：</li>
</ul>
<ol>
<li>I am ordered list item 1…</li>
<li>So I should be item 2</li>
</ol>
<ul>
<li>使用4个以上<strong>空格</strong>或1个以上的<strong>tab</strong>来标记代码段落，它们将被<strong>\<pre\></pre\></strong>和<strong>\<code\></code\></strong>包裹，这意味着代码段内的字体会是monospace家族的，并且特殊符号不会被转义。</li>
<li>使用[test](<a href="http://example.net" target="_blank" rel="external">http://example.net</a> “optional title”)来标记普通链接。</li>
<li>使用![img](<a href="http://example.net/img.png" target="_blank" rel="external">http://example.net/img.png</a> “optional title”)&gt;来标记图片。引号内的title文字是可选的，链接也可以使用相对路径。</li>
<li>使用* 或 _ 包裹文本产生 strong 效果：<em>语气很重的文本</em> 以及 <strong>语气更重的文本</strong></li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>GitHub Pages 建立个人主页 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a></li>
<li>jekyll <a href="http://jekyll.bootcss.com/" target="_blank" rel="external">http://jekyll.bootcss.com/</a></li>
<li>GitHub Pages和Jekyll入门 <a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html</a></li>
<li>通过GitHub Pages建立个人站点 <a href="http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="external">http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html</a></li>
<li>基于jekyll-bootstrap的GitHub Pages搭建过程 <a href="http://www.cnblogs.com/Leo_wl/p/3402935.html" target="_blank" rel="external">http://www.cnblogs.com/Leo_wl/p/3402935.html</a></li>
<li>jekyll-bootstrap模板 <a href="http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html" target="_blank" rel="external">http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html</a></li>
<li>Markdown 语法说明 <a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="external">http://wowubuntu.com/markdown/index.html</a></li>
<li>highlight.js <a href="https://highlightjs.org/" target="_blank" rel="external">https://highlightjs.org/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jekyll-简单的博客、静态网站工具&lt;a href=&quot;http://jekyll.bootcss.om/&quot;&gt;http://jekyll.bootcss.com/&lt;/a&gt;;&lt;/p&gt;
&lt;h3 id=&quot;1-Git简介&quot;&gt;&lt;a href=&quot;#1-Git简介&quot; class=&quot;headerlink&quot; title=&quot;1.Git简介&quot;&gt;&lt;/a&gt;1.Git简介&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;GitHub可以托管各种git库的站点。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-为什么使用Github-Pages&quot;&gt;&lt;a href=&quot;#2-为什么使用Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;2.为什么使用Github Pages&quot;&gt;&lt;/a&gt;2.为什么使用Github Pages&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;搭建简单而且免费；&lt;/li&gt;
&lt;li&gt;支持静态脚本；&lt;/li&gt;
&lt;li&gt;可以绑定你的域名；&lt;/li&gt;
&lt;li&gt;DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；&lt;/li&gt;
&lt;li&gt;理想写博环境，git+github+markdown+jekyll；
    
    </summary>
    
    
      <category term="GitHub Pages" scheme="http://cuiqingwei.github.io/tags/GitHub-Pages/"/>
    
      <category term="Jekyll" scheme="http://cuiqingwei.github.io/tags/Jekyll/"/>
    
  </entry>
  
  <entry>
    <title>eMaker.Space</title>
    <link href="http://cuiqingwei.github.io/2016/03/08/2016-03-08-eMaker-Space/"/>
    <id>http://cuiqingwei.github.io/2016/03/08/2016-03-08-eMaker-Space/</id>
    <published>2016-03-08T13:34:00.000Z</published>
    <updated>2016-09-18T08:58:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wiki"><a href="#wiki" class="headerlink" title="wiki"></a>wiki</h1><p><a href="http://www.seeedstudio.com/wiki/Main_Page" target="_blank" rel="external">http://www.seeedstudio.com/wiki/Main_Page</a><br><a href="https://wiki.microduino.cc/index.php" target="_blank" rel="external">https://wiki.microduino.cc/index.php</a><br><a href="http://wiki.dfrobot.com.cn/index.php" target="_blank" rel="external">http://wiki.dfrobot.com.cn/index.php</a><br><a href="http://www.alsrobot.cn/wiki/" target="_blank" rel="external">http://www.alsrobot.cn/wiki/</a><br><a href="http://duinopeak.com/wiki/index.php" target="_blank" rel="external">http://duinopeak.com/wiki/index.php</a><br><a id="more"></a></p>
<h1 id="Open-Source-Hardware"><a href="#Open-Source-Hardware" class="headerlink" title="Open Source Hardware"></a>Open Source Hardware</h1><p><a href="http://www.oshwa.org/open-source-hardware-logo/" target="_blank" rel="external">http://www.oshwa.org/open-source-hardware-logo/</a><br><a href="http://kb.open.eefocus.com/index.php" target="_blank" rel="external">http://kb.open.eefocus.com/index.php</a></p>
<h1 id="Duino"><a href="#Duino" class="headerlink" title="Duino"></a>Duino</h1><p><a href="https://www.arduino.cc/" target="_blank" rel="external">https://www.arduino.cc/</a><br><a href="http://www.drduino.com/" target="_blank" rel="external">http://www.drduino.com/</a><br><a href="https://www.microduino.cn/" target="_blank" rel="external">https://www.microduino.cn/</a><br><a href="http://www.duino-robotics.com/" target="_blank" rel="external">http://www.duino-robotics.com/</a><br><a href="http://www.86duino.com/" target="_blank" rel="external">http://www.86duino.com/</a><br><a href="http://www.rfduino.com/" target="_blank" rel="external">http://www.rfduino.com/</a><br><a href="http://www.netduino.com/" target="_blank" rel="external">http://www.netduino.com/</a><br><a href="http://wtfduino.calumk.com/" target="_blank" rel="external">http://wtfduino.calumk.com/</a><br><a href="https://easyeda.com/seeedstudio/Xadow_Duino-M5d71jdvp" target="_blank" rel="external">https://easyeda.com/seeedstudio/Xadow_Duino-M5d71jdvp</a><br><a href="http://rasp.io/" target="_blank" rel="external">http://rasp.io/</a><br><a href="http://www.motoduino.com/" target="_blank" rel="external">http://www.motoduino.com/</a><br><a href="http://cubieboard.org/" target="_blank" rel="external">http://cubieboard.org/</a><br><a href="http://www.techbang.com/posts/42412-maker" target="_blank" rel="external">http://www.techbang.com/posts/42412-maker</a><br><a href="http://wiki.iteadstudio.com/Product" target="_blank" rel="external">http://wiki.iteadstudio.com/Product</a></p>
<h1 id="Raspberry"><a href="#Raspberry" class="headerlink" title="Raspberry"></a>Raspberry</h1><p><a href="https://www.cooking-hacks.com/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge/" target="_blank" rel="external">https://www.cooking-hacks.com/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge/</a></p>
<h1 id="Sparkfun"><a href="#Sparkfun" class="headerlink" title="Sparkfun"></a>Sparkfun</h1><p><a href="https://www.sparkfun.com/products/13111" target="_blank" rel="external">https://www.sparkfun.com/products/13111</a><br><a href="https://www.sparkfun.com/products/11511" target="_blank" rel="external">https://www.sparkfun.com/products/11511</a><br><a href="https://www.sparkfun.com/products/11683" target="_blank" rel="external">https://www.sparkfun.com/products/11683</a></p>
<h1 id="blockly"><a href="#blockly" class="headerlink" title="blockly"></a>blockly</h1><p><a href="https://developers.google.com/blockly/" target="_blank" rel="external">https://developers.google.com/blockly/</a><br><a href="https://blockly-demo.appspot.com/static/demos/index.html" target="_blank" rel="external">https://blockly-demo.appspot.com/static/demos/index.html</a><br><a href="https://blockly-games.appspot.com/?lang=zh-hans" target="_blank" rel="external">https://blockly-games.appspot.com/?lang=zh-hans</a><br><a href="https://studio.code.org/" target="_blank" rel="external">https://studio.code.org/</a></p>
<h1 id="Ardublock"><a href="#Ardublock" class="headerlink" title="Ardublock"></a>Ardublock</h1><p><a href="https://sourceforge.net/projects/ardublock/" target="_blank" rel="external">https://sourceforge.net/projects/ardublock/</a><br><a href="http://blog.ardublock.com/zh/category/tutorial/" target="_blank" rel="external">http://blog.ardublock.com/zh/category/tutorial/</a><br><a href="https://learn.sparkfun.com/resources/59" target="_blank" rel="external">https://learn.sparkfun.com/resources/59</a><br><a href="https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/ardublock" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/ardublock</a></p>
<h1 id="Mixly米思齐"><a href="#Mixly米思齐" class="headerlink" title="Mixly米思齐"></a>Mixly米思齐</h1><p><a href="http://mixly.cn/" target="_blank" rel="external">http://mixly.cn/</a></p>
<h1 id="MIT-App-Inventor-2"><a href="#MIT-App-Inventor-2" class="headerlink" title="MIT App Inventor 2"></a>MIT App Inventor 2</h1><p><a href="http://app.gzjkw.net/" target="_blank" rel="external">http://app.gzjkw.net/</a><br><a href="http://blog.cavedu.com/programming-language/appinventor/appinventorandarduinowithbluetooth/" target="_blank" rel="external">http://blog.cavedu.com/programming-language/appinventor/appinventorandarduinowithbluetooth/</a><br><a href="http://appinventor.pevest.com/?page_id=10" target="_blank" rel="external">http://appinventor.pevest.com/?page_id=10</a><br><a href="https://sites.google.com/site/jingprogram/app" target="_blank" rel="external">https://sites.google.com/site/jingprogram/app</a></p>
<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><p><a href="http://www.sketchup.com/" target="_blank" rel="external">http://www.sketchup.com/</a><br><a href="http://www.123dapp.com/design" target="_blank" rel="external">http://www.123dapp.com/design</a><br><a href="https://scratch.mit.edu/" target="_blank" rel="external">https://scratch.mit.edu/</a><br><a href="http://s4a.cat/" target="_blank" rel="external">http://s4a.cat/</a><br><a href="http://www.arduino.cc/" target="_blank" rel="external">http://www.arduino.cc/</a><br><a href="http://www.arduino.org.cn/" target="_blank" rel="external">http://www.arduino.org.cn/</a><br><a href="https://en.wikipedia.org/wiki/Arduino" target="_blank" rel="external">https://en.wikipedia.org/wiki/Arduino</a><br><a href="http://i.youku.com/u/UNDYwMzEyOTk2" target="_blank" rel="external">http://i.youku.com/u/UNDYwMzEyOTk2</a><br><a href="http://www.makerlab.tw/resources/" target="_blank" rel="external">http://www.makerlab.tw/resources/</a></p>
<h1 id="3D-Modeling-and-Printing-：3D建模和打印"><a href="#3D-Modeling-and-Printing-：3D建模和打印" class="headerlink" title="3D Modeling and Printing ：3D建模和打印"></a>3D Modeling and Printing ：3D建模和打印</h1><p><a href="http://the3doodler.com/" target="_blank" rel="external">http://the3doodler.com/</a><br><a href="https://www.ultimaker.com/" target="_blank" rel="external">https://www.ultimaker.com/</a><br><a href="http://www.makerbot.com/" target="_blank" rel="external">http://www.makerbot.com/</a><br><a href="http://www.sketchup.com/" target="_blank" rel="external">http://www.sketchup.com/</a><br><a href="https://www.tinkercad.com/" target="_blank" rel="external">https://www.tinkercad.com/</a></p>
<h1 id="Circuits：电路"><a href="#Circuits：电路" class="headerlink" title="Circuits：电路"></a>Circuits：电路</h1><p><a href="http://snapcircuits.net.tw/" target="_blank" rel="external">http://snapcircuits.net.tw/</a><br><a href="http://courseweb.stthomas.edu/apthomas/SquishyCircuits/buildingCircuits.htm" target="_blank" rel="external">http://courseweb.stthomas.edu/apthomas/SquishyCircuits/buildingCircuits.htm</a><br><a href="http://littlebits.cc/" target="_blank" rel="external">http://littlebits.cc/</a><br><a href="http://wiki.funmetas.com/index.php?title=%E9%A6%96%E9%A1%B5" target="_blank" rel="external">http://wiki.funmetas.com/index.php?title=%E9%A6%96%E9%A1%B5</a><br><a href="http://www.makeymakey.com/" target="_blank" rel="external">http://www.makeymakey.com/</a></p>
<h1 id="Programming-Coding：程序设计-编程"><a href="#Programming-Coding：程序设计-编程" class="headerlink" title="Programming/Coding：程序设计/编程"></a>Programming/Coding：程序设计/编程</h1><p><a href="https://blockly-games.appspot.com/" target="_blank" rel="external">https://blockly-games.appspot.com/</a><br><a href="https://scratch.mit.edu/" target="_blank" rel="external">https://scratch.mit.edu/</a><br><a href="http://www.arduino.cc/" target="_blank" rel="external">http://www.arduino.cc/</a><br><a href="https://www.raspberrypi.org/" target="_blank" rel="external">https://www.raspberrypi.org/</a></p>
<h1 id="Robotics：机器人"><a href="#Robotics：机器人" class="headerlink" title="Robotics：机器人"></a>Robotics：机器人</h1><p><a href="http://www.lego.com/zh-cn/mindstorms/?domainredir=mindstorms.lego.com" target="_blank" rel="external">http://www.lego.com/zh-cn/mindstorms/?domainredir=mindstorms.lego.com</a><br><a href="http://www.firstinspires.org/robotics/frc" target="_blank" rel="external">http://www.firstinspires.org/robotics/frc</a><br><a href="http://www.arduino.org.cn/products/kits/6-arduino-kits/arduino-starter-kit" target="_blank" rel="external">http://www.arduino.org.cn/products/kits/6-arduino-kits/arduino-starter-kit</a><br><a href="http://mobilerobotkit.com/robot-kits.html" target="_blank" rel="external">http://mobilerobotkit.com/robot-kits.html</a></p>
<h1 id="Tools-amp-Materials-工具及耗材"><a href="#Tools-amp-Materials-工具及耗材" class="headerlink" title="Tools &amp; Materials : 工具及耗材"></a>Tools &amp; Materials : 工具及耗材</h1><ul>
<li>Woodworking：木工</li>
<li>Metalworking：金工</li>
<li>Laser Cutting：激光切割</li>
<li>CNC Cutting： 数控切割</li>
</ul>
<h1 id="MakerSpae"><a href="#MakerSpae" class="headerlink" title="MakerSpae"></a>MakerSpae</h1><p><a href="http://www.makezine.com.tw/makerspace.html" target="_blank" rel="external">http://www.makezine.com.tw/makerspace.html</a><br><a href="http://www.fablabtaiwan.org.tw/" target="_blank" rel="external">http://www.fablabtaiwan.org.tw/</a><br><a href="http://www.fablabtaipei.org/2510520497303403537320633.html" target="_blank" rel="external">http://www.fablabtaipei.org/2510520497303403537320633.html</a><br><a href="http://www.weschool.tw/26377217382012335373206332403720855.html" target="_blank" rel="external">http://www.weschool.tw/26377217382012335373206332403720855.html</a></p>
<h1 id="国内创客空间"><a href="#国内创客空间" class="headerlink" title="国内创客空间"></a>国内创客空间</h1><p><a href="http://www.chaihuo.org/products/list" target="_blank" rel="external">http://www.chaihuo.org/products/list</a><br><a href="http://xinchejian.com/?lang=zh" target="_blank" rel="external">http://xinchejian.com/?lang=zh</a><br><a href="http://www.bjmakerspace.com/" target="_blank" rel="external">http://www.bjmakerspace.com/</a></p>
<h1 id="Digital-Sandbox"><a href="#Digital-Sandbox" class="headerlink" title="Digital Sandbox"></a>Digital Sandbox</h1><p><a href="https://www.sparkfun.com/products/12651" target="_blank" rel="external">https://www.sparkfun.com/products/12651</a><br><a href="http://b2b.hc360.com/supplyself/348068096.html" target="_blank" rel="external">http://b2b.hc360.com/supplyself/348068096.html</a><br><a href="https://learn.sparkfun.com/tutorials/digital-sandbox-experiment-guide/setting-up-arduino-and-ardublock" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/digital-sandbox-experiment-guide/setting-up-arduino-and-ardublock</a><br><a href="http://classes.engr.oregonstate.edu/eecs/fall2015/cs160-501/labs/lab_01.pdf" target="_blank" rel="external">http://classes.engr.oregonstate.edu/eecs/fall2015/cs160-501/labs/lab_01.pdf</a><br><a href="https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/codebender" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/codebender</a></p>
<h1 id="创客空间里面都有那些设备"><a href="#创客空间里面都有那些设备" class="headerlink" title="创客空间里面都有那些设备"></a>创客空间里面都有那些设备</h1><p><a href="http://www.zhishihao.com/xue/show/155996" target="_blank" rel="external">http://www.zhishihao.com/xue/show/155996</a></p>
<h1 id="趣味电子"><a href="#趣味电子" class="headerlink" title="趣味电子"></a>趣味电子</h1><ul>
<li><strong>Back in Time木质时光倒流时钟</strong><br><a href="https://item.taobao.com/item.htm?spm=a1z10.5-c.w4002-11172345288.31.fQeFq4&amp;id=45557720848" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=a1z10.5-c.w4002-11172345288.31.fQeFq4&amp;id=45557720848</a></li>
<li><strong>基于Arduino设计的简易宠物喂食机</strong><br><a href="http://bbs.intorobot.com/thread-683-1-1.html" target="_blank" rel="external">http://bbs.intorobot.com/thread-683-1-1.html</a></li>
<li><strong>3D打印全自动宠物喂食器</strong><br><a href="http://bbs.intorobot.com/thread-684-1-1.html" target="_blank" rel="external">http://bbs.intorobot.com/thread-684-1-1.html</a></li>
<li><strong>Plotclock小贱钟</strong><br><a href="http://www.arduino.cn/thread-6049-1-1.html" target="_blank" rel="external">http://www.arduino.cn/thread-6049-1-1.html</a><br><a href="http://jjrobots.com/projects-2/" target="_blank" rel="external">http://jjrobots.com/projects-2/</a></li>
</ul>
<h1 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h1><p><a href="http://robert.cireddu.free.fr/" target="_blank" rel="external">http://robert.cireddu.free.fr/</a><br><a href="http://pedagogie.ac-toulouse.fr/lp-baylet-valence-agen/" target="_blank" rel="external">http://pedagogie.ac-toulouse.fr/lp-baylet-valence-agen/</a></p>
<h1 id="STEM"><a href="#STEM" class="headerlink" title="STEM"></a>STEM</h1><p><a href="http://www.creativelearningsystems.com/" target="_blank" rel="external">http://www.creativelearningsystems.com/</a></p>
<h1 id="走进3D"><a href="#走进3D" class="headerlink" title="走进3D"></a>走进3D</h1><p><a href="http://k12.leiphone.com/article/201601/Nnf0kNrFwit3zZBV.html" target="_blank" rel="external">http://k12.leiphone.com/article/201601/Nnf0kNrFwit3zZBV.html</a><br><a href="http://www.e-works.net.cn/report/2015stratasys3d/2015stratasys3d.html" target="_blank" rel="external">http://www.e-works.net.cn/report/2015stratasys3d/2015stratasys3d.html</a></p>
<h1 id="配套"><a href="#配套" class="headerlink" title="配套"></a>配套</h1><p><strong>洞洞板</strong><br><a href="https://item.taobao.com/item.htm?spm=2013.1.20141001.1.QOwtaJ&amp;id=35618674019&amp;;scm=1007.10115.22552.100200300000000&amp;pvid=3a6eaed6-f152-4ad3-a716-ed9d05874607" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=2013.1.20141001.1.QOwtaJ&amp;id=35618674019&amp;;scm=1007.10115.22552.100200300000000&amp;pvid=3a6eaed6-f152-4ad3-a716-ed9d05874607</a></p>
<h1 id="想做创客？这些关于开源硬件的知识你不得不知"><a href="#想做创客？这些关于开源硬件的知识你不得不知" class="headerlink" title="想做创客？这些关于开源硬件的知识你不得不知"></a>想做创客？这些关于开源硬件的知识你不得不知</h1><p><a href="http://www.csdn.net/article/2014-06-30/2820457/2" target="_blank" rel="external">http://www.csdn.net/article/2014-06-30/2820457/2</a></p>
<h1 id="DIY示波器"><a href="#DIY示波器" class="headerlink" title="DIY示波器"></a>DIY示波器</h1><p><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.HxgqLG&amp;id=43507787334&amp;ns=1&amp;abbucket=20#detail" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=a230r.1.14.16.HxgqLG&amp;id=43507787334&amp;ns=1&amp;abbucket=20#detail</a><br><a href="http://www.jyetech.com/index.php" target="_blank" rel="external">http://www.jyetech.com/index.php</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;wiki&quot;&gt;&lt;a href=&quot;#wiki&quot; class=&quot;headerlink&quot; title=&quot;wiki&quot;&gt;&lt;/a&gt;wiki&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.seeedstudio.com/wiki/Main_Page&quot;&gt;http://www.seeedstudio.com/wiki/Main_Page&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://wiki.microduino.cc/index.php&quot;&gt;https://wiki.microduino.cc/index.php&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://wiki.dfrobot.com.cn/index.php&quot;&gt;http://wiki.dfrobot.com.cn/index.php&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.alsrobot.cn/wiki/&quot;&gt;http://www.alsrobot.cn/wiki/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://duinopeak.com/wiki/index.php&quot;&gt;http://duinopeak.com/wiki/index.php&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="创客" scheme="http://cuiqingwei.github.io/tags/%E5%88%9B%E5%AE%A2/"/>
    
      <category term="开源硬件" scheme="http://cuiqingwei.github.io/tags/%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6/"/>
    
      <category term="链接" scheme="http://cuiqingwei.github.io/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>创客硬件</title>
    <link href="http://cuiqingwei.github.io/2015/11/18/2015-11-18-%E5%88%9B%E5%AE%A2%E7%A1%AC%E4%BB%B6/"/>
    <id>http://cuiqingwei.github.io/2015/11/18/2015-11-18-创客硬件/</id>
    <published>2015-11-17T16:26:00.000Z</published>
    <updated>2016-09-18T08:58:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>SparkFun Electronics<br><a href="https://www.sparkfun.com/" target="_blank" rel="external">https://www.sparkfun.com/</a><br>美国Sparkfun是世界最具盛名的电子零配件供应商，主要面向产品原型开发以及项目设计。电子产品种类相当齐全多大上万种，有许多国内少见的电子产品都可以在这里觅寻到。</p>
<p>Adafruit Industries, Unique &amp; fun DIY electronics and kits<br><a href="http://www.adafruit.com/" target="_blank" rel="external">http://www.adafruit.com/</a></p>
<p>美国纽约的Adafruit是一家DIY公司，网上对此公司评价为创意无底限。该公司在智能穿戴设备、物联网上有很好的创意与发展。Adafruit的CEO是MIT工程硕士毕业的 Limor Fried，是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。<br><a id="more"></a><br>哈尔滨奥松机器人<br><a href="http://www.alsrobot.cn/index.php" target="_blank" rel="external">http://www.alsrobot.cn/index.php</a></p>
<p>dfrobot - DF创客社区-分享创造的喜悦<br><a href="http://www.dfrobot.com.cn/" target="_blank" rel="external">http://www.dfrobot.com.cn/</a></p>
<p>DFRobot-开源硬件和机器人<br><a href="http://www.dfrobot.cn/" target="_blank" rel="external">http://www.dfrobot.cn/</a></p>
<p>DFRobot 官方旗舰<br><a href="https://dfrobot.taobao.com/" target="_blank" rel="external">https://dfrobot.taobao.com/</a></p>
<p>DUINOPEAK-开源硬件社区-创客基地 | 将想法变为现实<br><a href="http://duinopeak.cn/wiki/index.php?title=%E9%A6%96%E9%A1%B5" target="_blank" rel="external">http://duinopeak.cn/wiki/index.php?title=%E9%A6%96%E9%A1%B5</a></p>
<p>DuinoPeak商城<br><a href="https://makeshields.taobao.com/" target="_blank" rel="external">https://makeshields.taobao.com/</a></p>
<p>Duinopeak<br><a href="http://www.duinopeak.com/store/" target="_blank" rel="external">http://www.duinopeak.com/store/</a></p>
<p>Seeed Studio! 深圳矽递科技<br>成立于2008年，是一家致力于促进开源硬件发展的服务型企业。我们通过提供模块化的快速开发工具，使设计者能根据创意，简单快速地开发出产品原型。此外，我们还通过提供从研发辅助，采购生产到渠道分销的一站式配套服务，帮助设计者实现从创意到产品的转换。3年以来，我们不断加大技术和研发投入，努力优化供应链和销售渠道，使得企业的服务能力一直处于行业领先状态。此外，为鼓励民族自主创新精神，我们还投资建立了深圳第一家Hackerspace——柴火，努力为设计者的创造和创业打造一个良好环境。坚持不懈的努力为我们赢得了行业尊重和客户信任。目前，我们已经与众多设计者建立了紧密的合作关系，其中包括Google, MICROSOFT, MIT, NASA, MAKEZINE等知名企业和组织。在开源硬件的框架下，合作推出了涉及新媒体艺术、嵌入式平台、物联网、智能家居、便携式仪器等领域的一系列明星产品和方案。基于对行业的深厚理解，以及不断的自我完善，我们正加快步伐，为实现”以促进开源硬件发展来推动创新精神传播”的愿景目标而前进。</p>
<p>淘宝商城<br><a href="https://shop105412212.taobao.com/" target="_blank" rel="external">https://shop105412212.taobao.com/</a></p>
<p>Arduino 是一款便捷灵活、方便上手的开源电子原型平台，包含硬件（各种型号的arduino板）和软件（arduino IDE)。它适用于艺术家、设计师、爱好者和对于“互动”有兴趣的朋友们。Arduino，是一个基于开放原始码的软硬体平台，构建于开放原始码simple I/O介面版，并且具有使用类似Java，C语言的Processing/Wiring开发环境</p>
<p>pcDuino是一种高性能，高性价比的迷你PC的平台，能够运行PC操作系统，如Ubuntu和Android的ICS等。它可以通过内置HDMI接口输出视频到电视或显示器屏幕。 pcDuino专门针对开源社区快速增长的需求，即希望有一个平台可以运行完整的PC操作系统，容易使用的工具链和兼容流行的Arduino开放的生态系统，如Arduino shield和开源项目等。<br>pcDuino的硬件性能指标远超树莓派，性能稳定，做工精良。pcDuino迷你计算机的CPU采用1GHz ARM Cortex A8内核，DRAM为1GB，板载存储达到2GB Flash, 完全兼容Arduino接口。另外，pcDuino 可以从NAND或者从mini-SD卡(TF卡)启动，在NAND Flash内有出厂预装了ubuntu系统，您拿到手即可使用。</p>
<p>Raspberry Pi是一款基于Linux系统的只有一张信用卡大小的单板机计算机。它由英国的树莓派基金会所开发，目的是以低价硬件及自由软件刺激在学校的基本的电脑科学教育。</p>
<p>Pololu是美国第一大机器人零件巨头公司，电子产品制造商和在线零售商。Pololu的主要产品是操控机器人各种运动的小型电子模块。从传感器和运动控制电子产品到电机和车轮来完成机器人的组装。<br><a href="https://www.pololu.com/" target="_blank" rel="external">https://www.pololu.com/</a></p>
<p>香港云雀视维技术有限公司 Skylark FPV Technologies Co., Ltd. 简称云雀视维（Skylark FPV）是业界领先的FPV飞行解决供应商，一直以来，我们基于客户需求持续创新，致力于为客户提供优质、安全、稳定的FPV配套设备和系统完善的解决方案。目前可以提供包含视频叠加(OSD)系统、自动天线跟踪、飞行姿态与控制、高精度抗干扰GPS等十余款系列产品，以及全系统的FPV飞行解决方案</p>
<p>三大主流开源硬件对比：Arduino vs BeagleBone vs Raspberry Pi<br><a href="http://www.csdn.net/article/2013-05-02/2815109-arduinouno-vs-beaglebone-vs-raspberrypi" target="_blank" rel="external">http://www.csdn.net/article/2013-05-02/2815109-arduinouno-vs-beaglebone-vs-raspberrypi</a></p>
<p>MIT 工程硕士毕业的 Limor Fried是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。<br><a href="http://www.leiphone.com/news/201406/ladyada-maker.html" target="_blank" rel="external">http://www.leiphone.com/news/201406/ladyada-maker.html</a></p>
<p>永不消逝的电波——Arduino制作BCD码电波钟<br><a href="http://www.geek-workshop.com/thread-7797-1-1.html" target="_blank" rel="external">http://www.geek-workshop.com/thread-7797-1-1.html</a></p>
<p>3D打印笔作品<br><a href="http://www.3dyaya.com/" target="_blank" rel="external">http://www.3dyaya.com/</a></p>
<p>创客利器——关注3D打印<br><a href="http://segmentfault.com/a/1190000000458980" target="_blank" rel="external">http://segmentfault.com/a/1190000000458980</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SparkFun Electronics&lt;br&gt;&lt;a href=&quot;https://www.sparkfun.com/&quot;&gt;https://www.sparkfun.com/&lt;/a&gt;&lt;br&gt;美国Sparkfun是世界最具盛名的电子零配件供应商，主要面向产品原型开发以及项目设计。电子产品种类相当齐全多大上万种，有许多国内少见的电子产品都可以在这里觅寻到。&lt;/p&gt;
&lt;p&gt;Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;br&gt;&lt;a href=&quot;http://www.adafruit.com/&quot;&gt;http://www.adafruit.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;美国纽约的Adafruit是一家DIY公司，网上对此公司评价为创意无底限。该公司在智能穿戴设备、物联网上有很好的创意与发展。Adafruit的CEO是MIT工程硕士毕业的 Limor Fried，是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。&lt;br&gt;
    
    </summary>
    
    
      <category term="创客" scheme="http://cuiqingwei.github.io/tags/%E5%88%9B%E5%AE%A2/"/>
    
      <category term="开源硬件" scheme="http://cuiqingwei.github.io/tags/%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6/"/>
    
      <category term="链接" scheme="http://cuiqingwei.github.io/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>折叠公路车</title>
    <link href="http://cuiqingwei.github.io/2015/10/03/2015-10-03-%E6%8A%98%E5%8F%A0%E5%85%AC%E8%B7%AF%E8%BD%A6/"/>
    <id>http://cuiqingwei.github.io/2015/10/03/2015-10-03-折叠公路车/</id>
    <published>2015-10-03T00:57:00.000Z</published>
    <updated>2016-09-18T08:58:28.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Ori-Surpaz-CR-1-0"><a href="#Ori-Surpaz-CR-1-0" class="headerlink" title="Ori Surpaz CR 1.0"></a>Ori Surpaz CR 1.0</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg" alt="1"><br><a id="more"></a><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_2.jpg" alt="2"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_3.jpg" alt="3"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_1.jpg" alt="4"></p>
<h4 id="Airnimal-Joey-Explore-Drop"><a href="#Airnimal-Joey-Explore-Drop" class="headerlink" title="Airnimal Joey - Explore Drop"></a>Airnimal Joey - Explore Drop</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=46" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=46</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_46_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_46_1.jpg" alt="2"></p>
<h4 id="Airnimal-Chameleon-Performance-Sport"><a href="#Airnimal-Chameleon-Performance-Sport" class="headerlink" title="Airnimal Chameleon - Performance Sport"></a>Airnimal Chameleon - Performance Sport</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=49" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=49</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_49_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_49_1.jpg" alt="2"></p>
<h4 id="Airnimal-Joey-Elite-Drop"><a href="#Airnimal-Joey-Elite-Drop" class="headerlink" title="Airnimal Joey - Elite Drop"></a>Airnimal Joey - Elite Drop</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=48" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=48</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_48_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_48_1.jpg" alt="2"></p>
<h4 id="Airnimal-Rhino-Road"><a href="#Airnimal-Rhino-Road" class="headerlink" title="Airnimal Rhino - Road"></a>Airnimal Rhino - Road</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=54" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=54</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_54_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_54_1.jpg" alt="2"></p>
<h4 id="Airnimal-Chameleon-Ultra"><a href="#Airnimal-Chameleon-Ultra" class="headerlink" title="Airnimal Chameleon - Ultra"></a>Airnimal Chameleon - Ultra</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=50" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=50</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_50_0.jpg" alt="1"></p>
<h4 id="Airnimal-Chameleon-Ultima"><a href="#Airnimal-Chameleon-Ultima" class="headerlink" title="Airnimal Chameleon - Ultima"></a>Airnimal Chameleon - Ultima</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=51" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=51</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_51_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-Pocket-Rocket-SELECT-2013"><a href="#Bike-Friday-Pocket-Rocket-SELECT-2013" class="headerlink" title="Bike Friday Pocket Rocket SELECT 2013"></a>Bike Friday Pocket Rocket SELECT 2013</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=209" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=209</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_209_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-Slik-Road-Alfine-11-extra-451"><a href="#Bike-Friday-Slik-Road-Alfine-11-extra-451" class="headerlink" title="Bike Friday Slik Road Alfine 11 extra - 451"></a>Bike Friday Slik Road Alfine 11 extra - 451</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=205" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=205</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_205_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-PR-Super-Pro-SRAM-Red-Groupo"><a href="#Bike-Friday-PR-Super-Pro-SRAM-Red-Groupo" class="headerlink" title="Bike Friday PR Super Pro SRAM Red Groupo"></a>Bike Friday PR Super Pro SRAM Red Groupo</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=208" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=208</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_208_0.jpg" alt="1"></p>
<h4 id="Dahon-KC075TT"><a href="#Dahon-KC075TT" class="headerlink" title="Dahon KC075TT"></a>Dahon KC075TT</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=38" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=38</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_38_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_38_1.jpg" alt="2"></p>
<h4 id="Dahon-KAA075TT"><a href="#Dahon-KAA075TT" class="headerlink" title="Dahon KAA075TT"></a>Dahon KAA075TT</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=30" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=30</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_30_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_30_1.jpg" alt="2"></p>
<h4 id="Dahon-PDA006"><a href="#Dahon-PDA006" class="headerlink" title="Dahon PDA006"></a>Dahon PDA006</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=16" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=16</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_16_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_16_1.jpg" alt="2"></p>
<h4 id="Doppelganger-242-Artismo"><a href="#Doppelganger-242-Artismo" class="headerlink" title="Doppelganger 242 Artismo"></a>Doppelganger 242 Artismo</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=146" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=146</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_146_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_146_1.jpg" alt="2"></p>
<h4 id="Doppelganger-217-Miragen"><a href="#Doppelganger-217-Miragen" class="headerlink" title="Doppelganger 217 Miragen"></a>Doppelganger 217 Miragen</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=143" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=143</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_143_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_143_1.jpg" alt="2"></p>
<h4 id="Oyama-SKYLINE-PRO-CR20"><a href="#Oyama-SKYLINE-PRO-CR20" class="headerlink" title="Oyama SKYLINE PRO CR20"></a>Oyama SKYLINE PRO CR20</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=399" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=399</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_399_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RX-5R"><a href="#Oyama-FBI-RX-5R" class="headerlink" title="Oyama FBI RX-5R"></a>Oyama FBI RX-5R</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=181" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=181</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_181_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RX5-2015"><a href="#Oyama-FBI-RX5-2015" class="headerlink" title="Oyama FBI-RX5 (2015)"></a>Oyama FBI-RX5 (2015)</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=629" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=629</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_629_0.jpg" alt="1"></p>
<h4 id="KHS-F20-R451"><a href="#KHS-F20-R451" class="headerlink" title="KHS F20-R451"></a>KHS F20-R451</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=503" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=503</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_503_0.jpg" alt="1"></p>
<h4 id="KHS-P20-RD"><a href="#KHS-P20-RD" class="headerlink" title="KHS P20 - RD"></a>KHS P20 - RD</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=359" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=359</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_359_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-TR3"><a href="#Oyama-FBI-TR3" class="headerlink" title="Oyama FBI-TR3"></a>Oyama FBI-TR3</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=624" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=624</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_624_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RR3"><a href="#Oyama-FBI-RR3" class="headerlink" title="Oyama FBI-RR3"></a>Oyama FBI-RR3</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=622" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=622</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_622_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-TR5"><a href="#Oyama-FBI-TR5" class="headerlink" title="Oyama FBI-TR5"></a>Oyama FBI-TR5</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=623" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=623</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_623_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RR5"><a href="#Oyama-FBI-RR5" class="headerlink" title="Oyama FBI-RR5"></a>Oyama FBI-RR5</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=621" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=621</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_621_0.jpg" alt="1"></p>
<h4 id="Ori-Surpaz-CR-1-0-1"><a href="#Ori-Surpaz-CR-1-0-1" class="headerlink" title="Ori Surpaz CR 1.0"></a>Ori Surpaz CR 1.0</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_2.jpg" alt="2"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_3.jpg" alt="3"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_1.jpg" alt="4"></p>
<h4 id="Tern-VERGE-X30h"><a href="#Tern-VERGE-X30h" class="headerlink" title="Tern VERGE X30h"></a>Tern VERGE X30h</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=87" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=87</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_87_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_87_1.jpg" alt="2"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Ori-Surpaz-CR-1-0&quot;&gt;&lt;a href=&quot;#Ori-Surpaz-CR-1-0&quot; class=&quot;headerlink&quot; title=&quot;Ori Surpaz CR 1.0&quot;&gt;&lt;/a&gt;Ori Surpaz CR 1.0&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://15km.hk/index.php?comCat=bikedetails&amp;amp;bikeId=386&quot;&gt;http://15km.hk/index.php?comCat=bikedetails&amp;amp;bikeId=386&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg&quot; alt=&quot;1&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="骑行" scheme="http://cuiqingwei.github.io/tags/%E9%AA%91%E8%A1%8C/"/>
    
      <category term="折叠公路车" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E5%8F%A0%E5%85%AC%E8%B7%AF%E8%BD%A6/"/>
    
      <category term="自行车" scheme="http://cuiqingwei.github.io/tags/%E8%87%AA%E8%A1%8C%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="http://cuiqingwei.github.io/2015/08/18/2015-08-18-Linux/"/>
    <id>http://cuiqingwei.github.io/2015/08/18/2015-08-18-Linux/</id>
    <published>2015-08-18T06:50:00.000Z</published>
    <updated>2016-09-18T08:58:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>通过8个技巧让你成为一个超强的Linux终端用户</strong> <a href="http://www.geekfan.net/7112/" target="_blank" rel="external">http://www.geekfan.net/7112/</a></p>
<p><strong>Tab</strong> 键自动补全<br>管道符命令　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls | grep really</div></pre></td></tr></table></figure></p>
<p>通配符<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm really*name</div></pre></td></tr></table></figure></p>
<p>输出重定向　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls &gt; file1</div></pre></td></tr></table></figure></p>
<p>命令行历史　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hirstory</div></pre></td></tr></table></figure></p>
<p>波浪符”<strong>~</strong>”代表当前用户的主目录。所以，你可以使用”cd ~”切换到你的主目录，而不用输入”cd /home/name”。<br>这对相对路径同样使用，比如”cd ~/Desktop”会切换到当前用户的桌面目录。<br>与之类似的是，”<strong>.</strong>”代表当前目录，”..”代表父级目录。所有，”cd ..”会跳到父级目录。<br><a id="more"></a><br>后台命令　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firefox &amp;</div></pre></td></tr></table></figure></p>
<p>条件执行　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sleep 5 &amp;&amp; gnome-screenshot 停5秒然后运行gnome的截屏工具</div></pre></td></tr></table></figure></p>
<p><strong>在Linux上安装ack</strong> <a href="http://www.geekfan.net/6881/" target="_blank" rel="external">http://www.geekfan.net/6881/</a></p>
<p><strong>linux 文本查找 grep, ack</strong> <a href="http://ju.outofmemory.cn/entry/26149" target="_blank" rel="external">http://ju.outofmemory.cn/entry/26149</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ wget http://beyondgrep.com/ack-2.12-single-file</div><div class="line">$ sudo mv ack-2.12-single-file /usr/<span class="built_in">local</span>/bin/ack</div><div class="line">$ sudo chmod 0755 /usr/<span class="built_in">local</span>/bin/ack</div></pre></td></tr></table></figure>
<p><strong>怎样从Linux终端管理进程：10个你必须知道的命令</strong> <a href="http://www.geekfan.net/7112/" target="_blank" rel="external">http://www.geekfan.net/7112/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">top、htop、ps、pstree、<span class="built_in">kill</span>、killall、xkill、pgrep</div></pre></td></tr></table></figure>
<p><strong>如何用Linux命令行管理网络：11个你必须知道的命令</strong>    <a href="http://www.geekfan.net/7192/" target="_blank" rel="external">http://www.geekfan.net/7192/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ping -c 4 baidu.com</div><div class="line">tracepath baidu.com</div><div class="line">tracerouter baidu.com</div><div class="line">mtr baidu.com</div><div class="line">whois baidu.com</div><div class="line">ifconfig eth0</div><div class="line">sudo ifdown eth0</div><div class="line">sudo ifup eth0</div><div class="line">sudo dhclient -r</div><div class="line">netstat <span class="_">-s</span></div></pre></td></tr></table></figure>
<p><strong>使用Linux命令行测试网速</strong>    <a href="http://www.geekfan.net/5521/" target="_blank" rel="external">http://www.geekfan.net/5521/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py</div><div class="line">$ chmod a+rx speedtest_cli.py</div><div class="line">$ sudo mv speedtest_cli.py /usr/<span class="built_in">local</span>/bin/speedtest-cli</div><div class="line">$ sudo chown root:root /usr/<span class="built_in">local</span>/bin/speedtest-cli</div><div class="line">$ speedtest-cli</div></pre></td></tr></table></figure>
<p><strong>三张图看遍Linux 性能监控、测试、优化工具</strong> <a href="http://www.geekfan.net/13481/" target="_blank" rel="external">http://www.geekfan.net/13481/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;通过8个技巧让你成为一个超强的Linux终端用户&lt;/strong&gt; &lt;a href=&quot;http://www.geekfan.net/7112/&quot;&gt;http://www.geekfan.net/7112/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tab&lt;/strong&gt; 键自动补全&lt;br&gt;管道符命令　&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ls | grep really&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通配符&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;rm really*name&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出重定向　&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ls &amp;gt; file1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;命令行历史　&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hirstory&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;波浪符”&lt;strong&gt;~&lt;/strong&gt;”代表当前用户的主目录。所以，你可以使用”cd ~”切换到你的主目录，而不用输入”cd /home/name”。&lt;br&gt;这对相对路径同样使用，比如”cd ~/Desktop”会切换到当前用户的桌面目录。&lt;br&gt;与之类似的是，”&lt;strong&gt;.&lt;/strong&gt;”代表当前目录，”..”代表父级目录。所有，”cd ..”会跳到父级目录。&lt;br&gt;
    
    </summary>
    
    
      <category term="总结" scheme="http://cuiqingwei.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="linux" scheme="http://cuiqingwei.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>亚马逊云服务免费一年VPS主机翻墙术</title>
    <link href="http://cuiqingwei.github.io/2015/08/15/2015-08-15-%E4%BA%9A%E9%A9%AC%E9%80%8A%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%85%8D%E8%B4%B9%E4%B8%80%E5%B9%B4VPS%E4%B8%BB%E6%9C%BA%E7%BF%BB%E5%A2%99%E6%9C%AF/"/>
    <id>http://cuiqingwei.github.io/2015/08/15/2015-08-15-亚马逊云服务免费一年VPS主机翻墙术/</id>
    <published>2015-08-14T16:29:00.000Z</published>
    <updated>2016-09-18T08:58:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法"><a href="#Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法" class="headerlink" title="Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法"></a>Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法</h1><p><a href="http://www.freehao123.com/amazon-aws/" target="_blank" rel="external">http://www.freehao123.com/amazon-aws/</a></p>
<h1 id="How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT"><a href="#How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT" class="headerlink" title="How-to : Connect to Amazon EC2 Linux AMI using SecureCRT"></a>How-to : Connect to Amazon EC2 Linux AMI using SecureCRT</h1><p><a href="http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/" target="_blank" rel="external">http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/</a></p>
<h1 id="基于-EC2-Shadowsocks-的翻墙解决方案"><a href="#基于-EC2-Shadowsocks-的翻墙解决方案" class="headerlink" title="基于 EC2 + Shadowsocks 的翻墙解决方案"></a>基于 EC2 + Shadowsocks 的翻墙解决方案</h1><p><a href="http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/" target="_blank" rel="external">http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/</a></p>
<h1 id="烂泥：aws搭建shadowsocks服务器"><a href="#烂泥：aws搭建shadowsocks服务器" class="headerlink" title="烂泥：aws搭建shadowsocks服务器"></a>烂泥：aws搭建shadowsocks服务器</h1><p><a href="http://www.shaoqun.com/a/131549.aspx" target="_blank" rel="external">http://www.shaoqun.com/a/131549.aspx</a><br><a id="more"></a></p>
<h1 id="shadowsocks-windows-客户端"><a href="#shadowsocks-windows-客户端" class="headerlink" title="shadowsocks-windows 客户端"></a>shadowsocks-windows 客户端</h1><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">https://github.com/shadowsocks/shadowsocks-windows/releases</a><br><a href="https://www.shadowsocks.com/client.html" target="_blank" rel="external">https://www.shadowsocks.com/client.html</a></p>
<h1 id="Shadowsocks搭建、优化及客户端设置教程-优化之后youbtube的确秒开"><a href="#Shadowsocks搭建、优化及客户端设置教程-优化之后youbtube的确秒开" class="headerlink" title="Shadowsocks搭建、优化及客户端设置教程 (优化之后youbtube的确秒开)"></a>Shadowsocks搭建、优化及客户端设置教程 (优化之后youbtube的确秒开)</h1><p><a href="https://sinray.wordpress.com/2014/12/16/shadowsocks%E6%90%AD%E5%BB%BA%E3%80%81%E4%BC%98%E5%8C%96%E5%8F%8A%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/" target="_blank" rel="external">https://sinray.wordpress.com/2014/12/16/shadowsocks%E6%90%AD%E5%BB%BA%E3%80%81%E4%BC%98%E5%8C%96%E5%8F%8A%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/</a></p>
<p>—- ？？？ 以下待测试 。。。</p>
<h1 id="EC2怎么搭梯子及优化"><a href="#EC2怎么搭梯子及优化" class="headerlink" title="EC2怎么搭梯子及优化"></a>EC2怎么搭梯子及优化</h1><p><a href="https://www.zxc.so/shadowsocks-ladder.html" target="_blank" rel="external">https://www.zxc.so/shadowsocks-ladder.html</a></p>
<h1 id="利用AWS免费账户搭建PPTP-VPN"><a href="#利用AWS免费账户搭建PPTP-VPN" class="headerlink" title="利用AWS免费账户搭建PPTP VPN"></a>利用AWS免费账户搭建PPTP VPN</h1><p><a href="http://blog.banban.me/blog/2014/06/09/li-yong-awsmian-fei-zhang-hu-da-jian-vpn/" target="_blank" rel="external">http://blog.banban.me/blog/2014/06/09/li-yong-awsmian-fei-zhang-hu-da-jian-vpn/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&quot;&gt;&lt;a href=&quot;#Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&quot; class=&quot;headerlink&quot; title=&quot;Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&quot;&gt;&lt;/a&gt;Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.freehao123.com/amazon-aws/&quot;&gt;http://www.freehao123.com/amazon-aws/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT&quot;&gt;&lt;a href=&quot;#How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT&quot; class=&quot;headerlink&quot; title=&quot;How-to : Connect to Amazon EC2 Linux AMI using SecureCRT&quot;&gt;&lt;/a&gt;How-to : Connect to Amazon EC2 Linux AMI using SecureCRT&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/&quot;&gt;http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;基于-EC2-Shadowsocks-的翻墙解决方案&quot;&gt;&lt;a href=&quot;#基于-EC2-Shadowsocks-的翻墙解决方案&quot; class=&quot;headerlink&quot; title=&quot;基于 EC2 + Shadowsocks 的翻墙解决方案&quot;&gt;&lt;/a&gt;基于 EC2 + Shadowsocks 的翻墙解决方案&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/&quot;&gt;http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;烂泥：aws搭建shadowsocks服务器&quot;&gt;&lt;a href=&quot;#烂泥：aws搭建shadowsocks服务器&quot; class=&quot;headerlink&quot; title=&quot;烂泥：aws搭建shadowsocks服务器&quot;&gt;&lt;/a&gt;烂泥：aws搭建shadowsocks服务器&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.shaoqun.com/a/131549.aspx&quot;&gt;http://www.shaoqun.com/a/131549.aspx&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="aws" scheme="http://cuiqingwei.github.io/tags/aws/"/>
    
      <category term="ec2" scheme="http://cuiqingwei.github.io/tags/ec2/"/>
    
      <category term="shadowsocks" scheme="http://cuiqingwei.github.io/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>常用Wi-Fi网络评测工具</title>
    <link href="http://cuiqingwei.github.io/2015/07/23/2015-07-23-%E5%B8%B8%E7%94%A8Wi-Fi%E7%BD%91%E7%BB%9C%E8%AF%84%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    <id>http://cuiqingwei.github.io/2015/07/23/2015-07-23-常用Wi-Fi网络评测工具/</id>
    <published>2015-07-23T15:33:00.000Z</published>
    <updated>2016-09-18T08:58:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="inSSIDer2"><a href="#inSSIDer2" class="headerlink" title="inSSIDer2"></a>inSSIDer2</h1><p><a href="http://inssider.en.softonic.com/" target="_blank" rel="external">http://inssider.en.softonic.com/</a><br><img src="http://qqadapt.qpic.cn/adapt/0/ee31b0da-ef28-01a2-ae4f-abf40eb6d980/800?pt=0&amp;ek=1&amp;kp=1&amp;sce=0-12-12" alt=""><br><a id="more"></a></p>
<h1 id="WirelessMon"><a href="#WirelessMon" class="headerlink" title="WirelessMon"></a>WirelessMon</h1><p><a href="http://wirelessmon.com/" target="_blank" rel="external">http://wirelessmon.com/</a><br><a href="http://www.greenxiazai.com/soft/8567.html" target="_blank" rel="external">http://www.greenxiazai.com/soft/8567.html</a><br><img src="http://qqadapt.qpic.cn/adapt/0/e75d4e74-0f58-78e4-9fbb-b65754d7c004/800?pt=0&amp;ek=1&amp;kp=1&amp;sce=0-12-12" alt=""></p>
<h1 id="NetIQ-Chariot"><a href="#NetIQ-Chariot" class="headerlink" title="NetIQ Chariot"></a>NetIQ Chariot</h1><p><a href="http://www.piaodown.com/soft/292.htm" target="_blank" rel="external">http://www.piaodown.com/soft/292.htm</a><br><img src="http://qqadapt.qpic.cn/adapt/0/b594ce5f-52eb-4b95-29d1-a7241d055ea2/800?pt=0&amp;ek=1&amp;kp=1&amp;sce=0-12-12" alt=""></p>
<h1 id="IxChariot"><a href="#IxChariot" class="headerlink" title="IxChariot"></a>IxChariot</h1><p><a href="http://www.wandoujia.com/apps/com.ixia.ixchariot" target="_blank" rel="external">http://www.wandoujia.com/apps/com.ixia.ixchariot</a><br><img src="http://qqadapt.qpic.cn/adapt/0/f1824801-7a66-1de5-83e5-c0dec045baa2/800?pt=0&amp;ek=1&amp;kp=1&amp;sce=0-12-12" alt=""></p>
<p><a href="http://www.doc88.com/p-61963991908.html" target="_blank" rel="external">http://www.doc88.com/p-61963991908.html</a><br><a href="http://bbs.zol.com.cn/quanzi/d14_2.html" target="_blank" rel="external">http://bbs.zol.com.cn/quanzi/d14_2.html</a></p>
<h1 id="Omnipeek-抓包软件加D-Link-DWA-160抓包分析"><a href="#Omnipeek-抓包软件加D-Link-DWA-160抓包分析" class="headerlink" title="Omnipeek 抓包软件加D-Link DWA-160抓包分析"></a>Omnipeek 抓包软件加D-Link DWA-160抓包分析</h1><p>Omnipeek软件下载链接<br><a href="http://www.pc0359.cn/downinfo/18889.html" target="_blank" rel="external">http://www.pc0359.cn/downinfo/18889.html</a><br><img src="http://www.pc0359.cn/attachment/soft/2015/0202/161158_97002930.jpg?pt=5&amp;ek=1&amp;kp=1&amp;sce=0-12-12" alt=""></p>
<h1 id="D-Link-DWA-160购买链接"><a href="#D-Link-DWA-160购买链接" class="headerlink" title="D-Link DWA-160购买链接"></a>D-Link DWA-160购买链接</h1><p><a href="http://s.taobao.com/search?ie=utf8&amp;initiative_id=staobaoz_20150714&amp;stats_click=search_radio_all%3A1&amp;js=1&amp;;imgfile=&amp;q=dwa-160&amp;suggest=0_1&amp;_input_charset=utf-8&amp;wq=dwa160&amp;suggest_query=dwa160&amp;source=suggest&amp;sort=sale-desc" target="_blank" rel="external">http://s.taobao.com/search?ie=utf8&amp;initiative_id=staobaoz_20150714&amp;stats_click=search_radio_all%3A1&amp;js=1&amp;;imgfile=&amp;q=dwa-160&amp;suggest=0_1&amp;_input_charset=utf-8&amp;wq=dwa160&amp;suggest_query=dwa160&amp;source=suggest&amp;sort=sale-desc</a><br><img src="http://qqadapt.qpic.cn/adapt/0/8bb3984d-b989-c6e4-675e-95a131784b35/800?pt=0&amp;ek=1&amp;kp=1&amp;sce=0-12-12" alt=""></p>
<h1 id="最新OmniPeek无线驱动详细列表与下载说明"><a href="#最新OmniPeek无线驱动详细列表与下载说明" class="headerlink" title="最新OmniPeek无线驱动详细列表与下载说明"></a>最新OmniPeek无线驱动详细列表与下载说明</h1><p><a href="http://chenjiji.com/post/2721.html" target="_blank" rel="external">http://chenjiji.com/post/2721.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;inSSIDer2&quot;&gt;&lt;a href=&quot;#inSSIDer2&quot; class=&quot;headerlink&quot; title=&quot;inSSIDer2&quot;&gt;&lt;/a&gt;inSSIDer2&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://inssider.en.softonic.com/&quot;&gt;http://inssider.en.softonic.com/&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://qqadapt.qpic.cn/adapt/0/ee31b0da-ef28-01a2-ae4f-abf40eb6d980/800?pt=0&amp;amp;ek=1&amp;amp;kp=1&amp;amp;sce=0-12-12&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="WiFi" scheme="http://cuiqingwei.github.io/tags/WiFi/"/>
    
      <category term="网络评测工具" scheme="http://cuiqingwei.github.io/tags/%E7%BD%91%E7%BB%9C%E8%AF%84%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>有趣的Linux命令行功效</title>
    <link href="http://cuiqingwei.github.io/2015/07/16/2015-07-16-%E6%9C%89%E8%B6%A3%E7%9A%84Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8A%9F%E6%95%88/"/>
    <id>http://cuiqingwei.github.io/2015/07/16/2015-07-16-有趣的Linux命令行功效/</id>
    <published>2015-07-16T01:08:00.000Z</published>
    <updated>2016-09-19T09:50:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-sl-命令"><a href="#1-sl-命令" class="headerlink" title="1.sl 命令"></a>1.sl 命令</h1><p>首先，安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install sl</div></pre></td></tr></table></figure></p>
<p>然后，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sl</div></pre></td></tr></table></figure></p>
<p>我们看到了动画蒸汽机机头从屏幕右边开往左边。这个火车头是用ASCLL字符绘制。<br><a id="more"></a><br>提供特定的选项如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SYNOPSIS</div><div class="line">sl [ -alFe ]</div><div class="line">DESCRIPTION</div><div class="line">sl Displays animations aimed to correct users who accidentally enter sl instead of ls. SL stands <span class="keyword">for</span> Steam Locomotive.</div><div class="line">OPTIONS</div><div class="line"><span class="_">-a</span> An accident seems to happen. You\<span class="string">'ll feel pity for people who cry for help.</span></div><div class="line">-l shows little one.</div><div class="line">-F It flies.</div><div class="line">-e Allow interrupt by Ctrl+C.</div></pre></td></tr></table></figure></p>
<h1 id="2-rev-命令（reverse）"><a href="#2-rev-命令（reverse）" class="headerlink" title="2. rev 命令（reverse）"></a>2. rev 命令（reverse）</h1><p>它会颠倒所输入的字符串。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$rev</span></div></pre></td></tr></table></figure></p>
<p>终端会提示我们通过标准输入提供一个字符串。那么在每行后面我们就可以同时看到输出。<br>比如，我们输入”mylinuxbook”然后按回车。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mylinuxbook</div><div class="line">koobxunilym</div><div class="line">$ cat strings.txt</div><div class="line">MyLinuxBook</div><div class="line">Linux is so much fun!</div><div class="line">Happy Birthday</div><div class="line">$ rev strings.txt</div><div class="line">kooBxuniLyM</div><div class="line">!nuf hcum os si xuniL</div><div class="line">yadhtriB yppaH</div></pre></td></tr></table></figure></p>
<h1 id="3-fortune-命令"><a href="#3-fortune-命令" class="headerlink" title="3. fortune  命令"></a>3. fortune  命令</h1><p>我们运行这个命令的时候随机找了一条谚语或信息。<br>首先要对其进行安装：$sudo apt-get install fortune<br>运行这个命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ fortune</div><div class="line">You have the power to influence all with whom you come <span class="keyword">in</span> contact.</div></pre></td></tr></table></figure></p>
<h1 id="4-figlet-命令"><a href="#4-figlet-命令" class="headerlink" title="4. figlet 命令"></a>4. figlet 命令</h1><p>这个命令会用大写方式把我们输入的字符串显示在标题栏，显示效果由ASCII字符组成。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install figlet</div></pre></td></tr></table></figure></p>
<p>输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ figlet mylinuxbook</div></pre></td></tr></table></figure></p>
<p>你可以试着用”figlet”在脚本标头或源代码中添加标题栏。</p>
<h1 id="5-toilet-命令"><a href="#5-toilet-命令" class="headerlink" title="5.toilet 命令"></a>5.toilet 命令</h1><p>它是个五颜六色的命令。与figlet一样，它会把文本显示称标题栏，但是效果更好。<br>安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install toilet</div></pre></td></tr></table></figure></p>
<p>输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$toilet</span> mylinuxbook</div></pre></td></tr></table></figure></p>
<p>它比figlet命令的效果更有艺术感。<br>不过，它还可以添加颜色。我们可以运行下列命令看到颜色：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$toilet</span> <span class="_">-f</span> mono12 -F metal mylinuxbook</div></pre></td></tr></table></figure></p>
<h1 id="6-cowsay-命令"><a href="#6-cowsay-命令" class="headerlink" title="6. cowsay 命令"></a>6. cowsay 命令</h1><p>它会用ASCII字符描绘牛，羊和许多其他动物。但是不是每个Linux发行版都带有这个命令。<br>使用下面的命令安装此命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install cowsay</div></pre></td></tr></table></figure></p>
<p>现在，运行命令，并在命令中给出一个信息字符串。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cowsay</span> “Linux is fun”</div></pre></td></tr></table></figure></p>
<p>我们会看到了一个有趣的图像<br>基本上，我们会看到一头牛告诉我们所输入的信息。<br>尽管这个命令中只出现了cow，但其实它还可以有羊的效果。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cowsay</span> <span class="_">-f</span> sheep “I too love linux”</div><div class="line">```　</div><div class="line">只需用 <span class="string">'-l 就能看到它能提供的所有动物。输入：</span></div><div class="line">```bash</div><div class="line">$cowsay -l</div></pre></td></tr></table></figure></p>
<p>系统会弹出下列信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Cow files <span class="keyword">in</span> /usr/share/cowsay/cows:</div><div class="line">apt beavis.zen bong bud-frogs bunny calvin cheese cock cower daemon default</div><div class="line">dragon dragon-and-cow duck elephant elephant-in-snake eyes flaming-sheep</div><div class="line">ghostbusters gnu head-in hellokitty kiss kitty koala kosh luke-koala</div><div class="line">mech-and-cow meow milk moofasa moose mutilated pony pony-smaller ren sheep</div><div class="line">skeleton snowman sodomized-sheep stegosaurus stimpy suse three-eyes turkey</div><div class="line">turtle tux unipony unipony-smaller vader vader-koala www</div></pre></td></tr></table></figure></p>
<p>因此，我们可以用 ‘-f’ 输入以上信息中的任何动物。如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cowsay <span class="_">-f</span> milk <span class="string">"Do you want to drink?"</span></div></pre></td></tr></table></figure></p>
<p>为了使之更有趣，你可以让cowsay说出fortune信息，如输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fortune</span> | cowsay</div></pre></td></tr></table></figure></p>
<h1 id="7-cmatrix-命令"><a href="#7-cmatrix-命令" class="headerlink" title="7. cmatrix 命令"></a>7. cmatrix 命令</h1><p>这个命令会在终端生成ASCII字符组成的矩阵风格的动画效果。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install cmatrix</div></pre></td></tr></table></figure></p>
<p>现在运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cmatrix</div></pre></td></tr></table></figure></p>
<p>用”ctrl+c” 结束，生成动画。</p>
<h1 id="8-oneko-命令"><a href="#8-oneko-命令" class="headerlink" title="8. oneko 命令"></a>8. oneko 命令</h1><p>我们都知道”猫和老鼠”的动画，这个命令会让我们想起他们的追逐游戏。<br>有了这行命令，我们可以看到一只猫在追老鼠（鼠标指示器）的效果。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install oneko</div></pre></td></tr></table></figure></p>
<p>运行这个命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ oneko</div></pre></td></tr></table></figure></p>
<p>然后你就可以看到不管鼠标指示器放到哪里，Tom猫都会追着跑。下面是截图，不过不足以显示动态的效果.</p>
<p>即便我们切换应用，猫也不会离开老鼠。它甚至没有局限于终端。<br>想关掉这个的时候，只需在终端里用ctrl+c 结束进程即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-sl-命令&quot;&gt;&lt;a href=&quot;#1-sl-命令&quot; class=&quot;headerlink&quot; title=&quot;1.sl 命令&quot;&gt;&lt;/a&gt;1.sl 命令&lt;/h1&gt;&lt;p&gt;首先，安装&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install sl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后，输入&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到了动画蒸汽机机头从屏幕右边开往左边。这个火车头是用ASCLL字符绘制。&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://cuiqingwei.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT折腾日记</title>
    <link href="http://cuiqingwei.github.io/2015/07/08/2015-07-08-OpenWRT%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/"/>
    <id>http://cuiqingwei.github.io/2015/07/08/2015-07-08-OpenWRT折腾日记/</id>
    <published>2015-07-08T10:00:00.000Z</published>
    <updated>2016-09-18T08:58:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2016-04-23-Openwrt-Yun"><a href="#2016-04-23-Openwrt-Yun" class="headerlink" title="2016-04-23 Openwrt Yun"></a>2016-04-23 Openwrt Yun</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/bash -ex</span></div></pre></td></tr></table></figure>
<h4 id="FEEDS"><a href="#FEEDS" class="headerlink" title="FEEDS"></a>FEEDS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall <span class="_">-a</span></div><div class="line">rm -rf feeds</div><div class="line">./scripts/feeds update <span class="_">-a</span></div><div class="line">./scripts/feeds install <span class="_">-a</span></div><div class="line">./scripts/feeds uninstall erlang freeswitch remotefs libzstream shflags opensips pulseaudio xmlrpc-c rtorrent sox umurmur-polarssl freecwmp-zstream osirisd logtrigger libplist libimobiledevice cmus mxml boost wt etherpuppet php4 aprx n2n pdnsd crtmpserver kissdx openconnect telepathy-python alljoyn</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="CONFIG"><a href="#CONFIG" class="headerlink" title="CONFIG"></a>CONFIG</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rm <span class="_">-f</span> .config</div><div class="line">git checkout .config</div><div class="line">sed <span class="string">'s/=m$/=n/'</span> &lt; .config &gt; .baseonlyconfig</div><div class="line">mv .config .origconfig</div><div class="line">mv .baseonlyconfig .config</div><div class="line">make oldconfig</div></pre></td></tr></table></figure>
<h4 id="BUILDING"><a href="#BUILDING" class="headerlink" title="BUILDING"></a>BUILDING</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">nice -n 10 make -j 2 V=s</div><div class="line">/etc/config/wireless</div><div class="line">config wifi-iface</div><div class="line">	option network <span class="string">'wwan'</span></div><div class="line">	option ssid <span class="string">'MiWiFi'</span></div><div class="line">	option encryption <span class="string">'psk2'</span></div><div class="line">	option device <span class="string">'radio0'</span></div><div class="line">	option mode <span class="string">'sta'</span></div><div class="line">	option bssid <span class="string">'8C:BE:BE:29:FE:56'</span></div><div class="line">	option key <span class="string">'1981021400'</span></div><div class="line">wireless.@wifi-iface[0]=wifi-iface                                              </div><div class="line">wireless.@wifi-iface[0].network=wwan                                            </div><div class="line">wireless.@wifi-iface[0].ssid=MiWiFi                                             </div><div class="line">wireless.@wifi-iface[0].encryption=psk2                                         </div><div class="line">wireless.@wifi-iface[0].device=radio0                                           </div><div class="line">wireless.@wifi-iface[0].mode=sta                                                </div><div class="line">wireless.@wifi-iface[0].bssid=8C:BE:BE:29:FE:56                                 </div><div class="line">wireless.@wifi-iface[0].key=1981021400</div></pre></td></tr></table></figure>
<h2 id="2016-04-11-DraginoYun-Shield"><a href="#2016-04-11-DraginoYun-Shield" class="headerlink" title="2016-04-11 DraginoYun Shield"></a>2016-04-11 DraginoYun Shield</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> src-svn packages https://github.com/arduino/openwrt-packages-yun/trunk &gt;&gt; feed.conf.default</div></pre></td></tr></table></figure>
<h4 id="更新package"><a href="#更新package" class="headerlink" title="更新package"></a>更新package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update <span class="_">-a</span></div></pre></td></tr></table></figure>
<h4 id="安装package"><a href="#安装package" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds install yun-conf</div><div class="line">./scripts/feeds install yun-scripts</div><div class="line">./scripts/feeds install luci-app-arduino-webpanel</div></pre></td></tr></table></figure>
<h4 id="单独编译package"><a href="#单独编译package" class="headerlink" title="单独编译package"></a>单独编译package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">make package/yun-conf/compile</div><div class="line">make package/yun-scripts/compile</div><div class="line">make package/luci-app-arduino-webpanel/compile</div><div class="line">make package/yun-conf/install</div><div class="line">make package/yun-scripts/install</div><div class="line">make package/luci-app-arduino-webpanel/install</div></pre></td></tr></table></figure>
<h2 id="2016-04-08-DraginoYun-Shield"><a href="#2016-04-08-DraginoYun-Shield" class="headerlink" title="2016-04-08 DraginoYun Shield"></a>2016-04-08 DraginoYun Shield</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">svn checkout https://github.com/dragino/openwrt-yun.git dragino-yun</div><div class="line"><span class="built_in">cd</span> dragino-yun/trunk</div><div class="line">./build_image.sh</div><div class="line"><span class="built_in">cd</span> openwrt</div><div class="line">vi feeds.config.default</div></pre></td></tr></table></figure>
<h4 id="断开packages-链接本地dragino-packages"><a href="#断开packages-链接本地dragino-packages" class="headerlink" title="断开packages,链接本地dragino-packages"></a>断开packages,链接本地dragino-packages</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-git dragino https://github.com/dragino/dragino-packages.git</span></div><div class="line">src-link dragino ../../dragino-packages</div></pre></td></tr></table></figure>
<h4 id="卸载package"><a href="#卸载package" class="headerlink" title="卸载package"></a>卸载package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall luci-app-iot-webpanel</div><div class="line">./scripts/feeds uninstall luci-app-sensor</div></pre></td></tr></table></figure>
<h4 id="更新package-1"><a href="#更新package-1" class="headerlink" title="更新package"></a>更新package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update luci-app-iot-webpanel</div></pre></td></tr></table></figure>
<h4 id="安装package-1"><a href="#安装package-1" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds install luci-app-iot-webpanel</div></pre></td></tr></table></figure>
<h4 id="单独编译package-1"><a href="#单独编译package-1" class="headerlink" title="单独编译package"></a>单独编译package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make package/luci-app-iot-webpanel/compile</div><div class="line">make package/luci-app-iot-webpanel/install</div></pre></td></tr></table></figure>
<h4 id="安装package-2"><a href="#安装package-2" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scp bin/ar71xx/packages/[packagename].ipk roo@ip:/tmp</div><div class="line">opkg install /tmp/[packagename].ipk</div></pre></td></tr></table></figure>
<p><a href="http://www.doodle3d.com/help/wiki/installing-updating-packages" target="_blank" rel="external">http://www.doodle3d.com/help/wiki/installing-updating-packages</a><br><a href="https://wiki.openwrt.org/doc/howto/build" target="_blank" rel="external">https://wiki.openwrt.org/doc/howto/build</a></p>
<h2 id="2016-04-05-ArduinoYun-Shield"><a href="#2016-04-05-ArduinoYun-Shield" class="headerlink" title="2016-04-05 ArduinoYun Shield"></a>2016-04-05 ArduinoYun Shield</h2><p><a href="http://www.znck007.com/forum.php?mod=viewthread&amp;tid=22687" target="_blank" rel="external">http://www.znck007.com/forum.php?mod=viewthread&amp;tid=22687</a><br>源<br><a href="https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/" target="_blank" rel="external">https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</a><br><a href="http://downloads.arduino.cc/openwrtyun/1/packages/" target="_blank" rel="external">http://downloads.arduino.cc/openwrtyun/1/packages/</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vi /etc/opkg.conf</div><div class="line">src/gz attitude_adjustment https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</div></pre></td></tr></table></figure></p>
<h4 id="使用putty登陆openwrt输入"><a href="#使用putty登陆openwrt输入" class="headerlink" title="使用putty登陆openwrt输入"></a>使用putty登陆openwrt输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg install kmod-usb-storage block-mount block-hotplug kmod-fs-ext4</div><div class="line">mkfs.ext4 /dev/sda1<span class="comment"># 格式化TF卡，第一次使用须格式化</span></div><div class="line">mkdir -p /mnt/sda1<span class="comment"># 新建一个TF卡目录</span></div><div class="line">mount /dev/sda1 /mnt/sda1<span class="comment"># 将TF卡挂载到/mnt/sda1目录</span></div></pre></td></tr></table></figure>
<h4 id="自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）"><a href="#自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）" class="headerlink" title="自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）"></a>自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/config/fstab</div></pre></td></tr></table></figure>
<h4 id="移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！"><a href="#移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！" class="headerlink" title="移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！"></a>移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">config <span class="string">'mount'</span></div><div class="line">        option <span class="string">'device'</span> <span class="string">'/dev/sda1'</span></div><div class="line">        option <span class="string">'options'</span> <span class="string">'rw,sync'</span></div><div class="line">        option <span class="string">'enabled_fsck'</span> <span class="string">'0'</span></div><div class="line">        option <span class="string">'enabled'</span> <span class="string">'1'</span></div><div class="line">        option <span class="string">'target'</span> <span class="string">'/mnt/sda1'</span></div><div class="line">mkdir -p /mnt/sda1/php<span class="comment"># 新建软件包目录</span></div><div class="line"><span class="built_in">echo</span> dest phpdisk /mnt/sda1/php/ &gt;&gt; /etc/opkg.conf</div><div class="line">opkg --dest phpdisk install php5-fastcgi php5-mod-gd php5-mod-xml php5-mod-ctype php5-mod-session php5-mod-sockets php5-mod-tokenizer php5-mod-mcrypt php5-mod-mbstring php5-mod-pdo php5-mod-curl php5-mod-mysql</div></pre></td></tr></table></figure>
<h4 id="安装一个时区信息软件包，否则系统无法识别时区。"><a href="#安装一个时区信息软件包，否则系统无法识别时区。" class="headerlink" title="安装一个时区信息软件包，否则系统无法识别时区。"></a>安装一个时区信息软件包，否则系统无法识别时区。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install zoneinfo-asia</div></pre></td></tr></table></figure>
<h4 id="建立软连接，不然会找不到对应的库和配置文件："><a href="#建立软连接，不然会找不到对应的库和配置文件：" class="headerlink" title="建立软连接，不然会找不到对应的库和配置文件："></a>建立软连接，不然会找不到对应的库和配置文件：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/etc/php.ini /etc/php.ini</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/etc/php5 /etc/php5</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libpcre.so.0.0.1 /usr/lib/libpcre.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libpcreposix.so.0.0.0 /usr/lib/libpcreposix.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libsqlite.so.0.8.6 /usr/lib/libsqlite.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libsqlite3.so.0.8.6 /usr/lib/libsqlite3.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libxml2.so.2.7.8 /usr/lib/libxml2.so.2</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libz.so.1.2.3 /usr/lib/libz.so</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libuClibc++-0.2.4.so /usr/lib/libuClibc++.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libmysqlclient.so.16 /usr/lib/libmysqlclient.so.16</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/php /usr/lib/php</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/bin/php-cgi /usr/bin/php-cgi</div></pre></td></tr></table></figure>
<h4 id="安装到内存"><a href="#安装到内存" class="headerlink" title="安装到内存"></a>安装到内存</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install php5-fastcgi php5-mod-gd php5-mod-xml php5-mod-ctype php5-mod-session php5-mod-sockets php5-mod-tokenizer php5-mod-mcrypt php5-mod-mbstring php5-mod-pdo php5-mod-curl php5-mod-mysql</div></pre></td></tr></table></figure>
<h4 id="编辑php-ini，方法如下。"><a href="#编辑php-ini，方法如下。" class="headerlink" title="编辑php.ini，方法如下。"></a>编辑php.ini，方法如下。</h4><h4 id="找到下面的字段修改为如下，如果有用”-”注析的就删掉："><a href="#找到下面的字段修改为如下，如果有用”-”注析的就删掉：" class="headerlink" title="找到下面的字段修改为如下，如果有用”;”注析的就删掉："></a>找到下面的字段修改为如下，如果有用”;”注析的就删掉：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">short_open_tag = On</div><div class="line">error_log = /var/<span class="built_in">log</span>/php_errors.log</div><div class="line">doc_root = <span class="string">"/mnt/sda1/www"</span>  修改成sd卡的路径。</div><div class="line">extension=ctype.so</div><div class="line">extension=curl.so</div><div class="line">extension=dom.so</div><div class="line">extension=exif.so</div><div class="line">extension=ftp.so</div><div class="line">extension=gd.so</div><div class="line">extension=gmp.so</div><div class="line">extension=hash.so</div><div class="line">extension=iconv.so</div><div class="line">extension=json.so</div><div class="line">extension=ldap.so</div><div class="line">extension=mbstring.so</div><div class="line">extension=mcrypt.so</div><div class="line">extension=mysql.so</div><div class="line">extension=openssl.so</div><div class="line">extension=pcre.so</div><div class="line">extension=pdo.so</div><div class="line">extension=pdo-mysql.so</div><div class="line">extension=pdo-pgsql.so</div><div class="line">extension=pdo_sqlite.so</div><div class="line">extension=pgsql.so</div><div class="line">extension=session.so</div><div class="line">extension=soap.so</div><div class="line">extension=sockets.so</div><div class="line">extension=sqlite.so</div><div class="line">extension=sqlite3.so</div><div class="line">extension=tokenizer.so</div><div class="line">extension=xml.so</div><div class="line">extension=xmlreader.so</div><div class="line">extension=xmlwriter.so</div><div class="line">date.timezone = Asia/Shanghai</div><div class="line">mysql.default_socket = /var/run/mysqld.sock</div><div class="line">session.auto_start = 1</div></pre></td></tr></table></figure>
<h4 id="和上面一样，打开-etc-config-uhttpd"><a href="#和上面一样，打开-etc-config-uhttpd" class="headerlink" title="和上面一样，打开/etc/config/uhttpd"></a>和上面一样，打开/etc/config/uhttpd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">option home <span class="string">'/mnt/sda1/www'</span>                 <span class="comment">#把/www修改成/mnt/sda1/www为放置网页的目录。</span></div><div class="line">option index_page index.php               	<span class="comment">#添加到后面</span></div><div class="line">list interpreter <span class="string">".php=/usr/bin/php-cgi"</span>   	<span class="comment">#添加到后面</span></div></pre></td></tr></table></figure>
<h4 id="然后重启uhttpd（在putty里输入命令回车）："><a href="#然后重启uhttpd（在putty里输入命令回车）：" class="headerlink" title="然后重启uhttpd（在putty里输入命令回车）："></a>然后重启uhttpd（在putty里输入命令回车）：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/uhttpd restart</div></pre></td></tr></table></figure>
<h4 id="使用putty安装mysql"><a href="#使用putty安装mysql" class="headerlink" title="使用putty安装mysql"></a>使用putty安装mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg install mysql-server</div></pre></td></tr></table></figure>
<h4 id="创建数据库目录"><a href="#创建数据库目录" class="headerlink" title="创建数据库目录"></a>创建数据库目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/sda1/mysql/data/mysql</div><div class="line">mkdir -p /mnt/sda1/mysql/data/tmp</div></pre></td></tr></table></figure>
<h4 id="查找到以下内容并修改如下："><a href="#查找到以下内容并修改如下：" class="headerlink" title="查找到以下内容并修改如下："></a>查找到以下内容并修改如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">datadir = /mnt/sda1/mysql/data/mysql/</div><div class="line">tmpdir  = /mnt/sda1/mysql/data/tmp/</div></pre></td></tr></table></figure>
<h4 id="bind-address-192-168-1-1"><a href="#bind-address-192-168-1-1" class="headerlink" title="bind-address = 192.168.1.1"></a>bind-address = 192.168.1.1</h4><h4 id="初始化建库"><a href="#初始化建库" class="headerlink" title="初始化建库"></a>初始化建库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_install_db --force</div></pre></td></tr></table></figure>
<h4 id="以关闭授权的方式启动mysql"><a href="#以关闭授权的方式启动mysql" class="headerlink" title="以关闭授权的方式启动mysql"></a>以关闭授权的方式启动mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqld --skip-grant &amp;</div></pre></td></tr></table></figure>
<h4 id="进入mysql-修改账号连接权限"><a href="#进入mysql-修改账号连接权限" class="headerlink" title="进入mysql,修改账号连接权限"></a>进入mysql,修改账号连接权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root mysql</div></pre></td></tr></table></figure>
<h4 id="进入mysql以后出现mysql-gt-提示符，再修改账号连接权限："><a href="#进入mysql以后出现mysql-gt-提示符，再修改账号连接权限：" class="headerlink" title="进入mysql以后出现mysql&gt;提示符，再修改账号连接权限："></a>进入mysql以后出现mysql&gt;提示符，再修改账号连接权限：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update user <span class="built_in">set</span> host=<span class="string">'%'</span> <span class="built_in">where</span> user=<span class="string">'root'</span> and host=<span class="string">'localhost'</span>;</div></pre></td></tr></table></figure>
<h4 id="修改数据库密码为edutech"><a href="#修改数据库密码为edutech" class="headerlink" title="修改数据库密码为edutech"></a>修改数据库密码为edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update user <span class="built_in">set</span> password=PASSWORD(<span class="string">'edutech'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</div></pre></td></tr></table></figure>
<h4 id="刷新数据库"><a href="#刷新数据库" class="headerlink" title="刷新数据库"></a>刷新数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flush privileges;</div></pre></td></tr></table></figure>
<h4 id="上面ok了以后，退出mysql"><a href="#上面ok了以后，退出mysql" class="headerlink" title="上面ok了以后，退出mysql"></a>上面ok了以后，退出mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">exit</span>;</div></pre></td></tr></table></figure>
<h4 id="重启mysql，以授权验证方式启动（为了系统安全）"><a href="#重启mysql，以授权验证方式启动（为了系统安全）" class="headerlink" title="重启mysql，以授权验证方式启动（为了系统安全）"></a>重启mysql，以授权验证方式启动（为了系统安全）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">killall mysqld</div></pre></td></tr></table></figure>
<h4 id="设定开机运行"><a href="#设定开机运行" class="headerlink" title="设定开机运行"></a>设定开机运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld <span class="built_in">enable</span></div></pre></td></tr></table></figure>
<h4 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld start</div></pre></td></tr></table></figure>
<h4 id="用Navicat新建数据库"><a href="#用Navicat新建数据库" class="headerlink" title="用Navicat新建数据库"></a>用Navicat新建数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">znckapi</div></pre></td></tr></table></figure>
<h4 id="新建查询"><a href="#新建查询" class="headerlink" title="新建查询"></a>新建查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE IF NOT EXISTS `api_worklist` (</div><div class="line">`id` int(16) unsigned NOT NULL AUTO_INCREMENT,</div><div class="line">`<span class="built_in">type</span>` int(2) NOT NULL COMMENT <span class="string">'1网设2上传3定时'</span>,</div><div class="line">`uid` int(8) NOT NULL,</div><div class="line">`sid` varchar(3) NOT NULL,</div><div class="line">`nid` varchar(3) NOT NULL,</div><div class="line">`data` varchar(32) NOT NULL,</div><div class="line">`note` varchar(64) NOT NULL,</div><div class="line">`status` int(2) NOT NULL COMMENT <span class="string">'1成功2失败3超过次数4超15分'</span>,</div><div class="line">`time` datetime NOT NULL,</div><div class="line">`ip` varchar(16) NOT NULL,</div><div class="line">`num` int(2) NOT NULL,</div><div class="line">PRIMARY KEY(`id`),</div><div class="line">KEY `uid` (`uid`),</div><div class="line">KEY `time` (`time`)</div><div class="line">)ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;</div></pre></td></tr></table></figure>
<h4 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/sda1/python</div><div class="line"><span class="built_in">echo</span> dest pythondisk /mnt/sda1/python/ &gt;&gt; /etc/opkg.conf</div><div class="line">opkg --dest pythondisk install python</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/python/usr/bin/python /usr/bin/python</div><div class="line">opkg --dest pythondisk install pyserial<span class="comment"># 安装串口通讯类</span></div><div class="line">opkg --dest pythondisk install python-mysql<span class="comment"># 安装mysql操作类</span></div></pre></td></tr></table></figure>
<p><a href="http://see.sl088.com/wiki/Opkg" target="_blank" rel="external">http://see.sl088.com/wiki/Opkg</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /mnt/sda1</div><div class="line">wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/pyserial_2.4-1_ar71xx.ipk</div><div class="line">wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/python-mysql_1.2.2-1_ar71xx.ipk</div><div class="line">2016-03-03 DRAGINO Yun Shield</div><div class="line">ssh root@192.168.199.159</div><div class="line">dragino</div><div class="line">root@dragino-7676e6:~<span class="comment"># cd /tmp/</span></div><div class="line">root@dragino-7676e6:/tmp<span class="comment">#</span></div><div class="line">root@dragino-7676e6:/tmp<span class="comment"># wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/luci-i18n-chine</span></div><div class="line">se_0.11.1-1_ar71xx.ipk</div><div class="line">root@dragino-7676e6:/tmp<span class="comment"># opkg install luci-i18n-chinese_0.11.1-1_ar71xx.ipk</span></div></pre></td></tr></table></figure></p>
<h2 id="2016-03-03-luci"><a href="#2016-03-03-luci" class="headerlink" title="2016-03-03 luci"></a>2016-03-03 luci</h2><p><a href="http://www.cnblogs.com/luopeng/p/4678704.html" target="_blank" rel="external">http://www.cnblogs.com/luopeng/p/4678704.html</a></p>
<h2 id="2016-01-22-web摄像头、mjpg-streamer"><a href="#2016-01-22-web摄像头、mjpg-streamer" class="headerlink" title="2016-01-22 web摄像头、mjpg-streamer"></a>2016-01-22 web摄像头、mjpg-streamer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">wget https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/openwrt-ar71xx-generic-tl-wr2543-v1-squashfs-factory.bin</div><div class="line">scp bin/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin root@192.168.199.193:/tmp/</div><div class="line">mtd -r write openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin firmware</div><div class="line">uci show network.lan</div><div class="line">uci <span class="built_in">set</span> network.lan.proto=dhcp</div><div class="line">uci commit</div><div class="line">/etc/init.d/networtk restart</div><div class="line">&gt;&gt; opkg install kmod-video-uvc。</div><div class="line">&gt;&gt; ls /dev，如果有vedio的话，说明驱动安装成功（前提是要把摄像头插上）</div><div class="line">&gt;&gt; opkg install mjpg-streamer</div><div class="line">&gt;&gt; mjpg_streamer -b -i <span class="string">"input_uvc.so /dev/video0 -r 640x480 -yuv"</span> -o <span class="string">"output_http.so -p 8080 -w /web"</span></div><div class="line">http://192.168.199.193:8080/?action=stream（动态视频）</div><div class="line">http://192.168.199.193:8080/?action=snapshot（静态图像）</div></pre></td></tr></table></figure>
<h2 id="2015-08-25-mtk-openwrt-sdk"><a href="#2015-08-25-mtk-openwrt-sdk" class="headerlink" title="2015-08-25 mtk openwrt-sdk"></a>2015-08-25 mtk openwrt-sdk</h2><h4 id="for-mtksdk-openwrt-3-10-14-20141127-30965ec3-tar-bz2"><a href="#for-mtksdk-openwrt-3-10-14-20141127-30965ec3-tar-bz2" class="headerlink" title="for mtksdk-openwrt-3.10.14-20141127-30965ec3.tar.bz2"></a>for mtksdk-openwrt-3.10.14-20141127-30965ec3.tar.bz2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ack -w MediaTek --html</div><div class="line">openwrt-3.10.14_2014/package/ralink/ui/luci-mtk/patches/001-logo.patch</div></pre></td></tr></table></figure>
<h4 id="改logo-MediaTek-gt-Edutech"><a href="#改logo-MediaTek-gt-Edutech" class="headerlink" title="改logo MediaTek-&gt;Edutech"></a>改logo MediaTek-&gt;Edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ralink/ui/luci-mtk/src/modules/base/root/etc/config</div></pre></td></tr></table></figure>
<h4 id="luci-改language"><a href="#luci-改language" class="headerlink" title="luci 改language"></a>luci 改language</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ralink/drivers/mt76x2e/files</div></pre></td></tr></table></figure>
<h4 id="mt7612e-sh-改SSID"><a href="#mt7612e-sh-改SSID" class="headerlink" title="mt7612e.sh 改SSID"></a>mt7612e.sh 改SSID</h4><h4 id="for-mtksdk-openwrt-3-10-14-20150311-d021c937-tar-bz2"><a href="#for-mtksdk-openwrt-3-10-14-20150311-d021c937-tar-bz2" class="headerlink" title="for mtksdk-openwrt-3.10.14-20150311-d021c937.tar.bz2"></a>for mtksdk-openwrt-3.10.14-20150311-d021c937.tar.bz2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/ui/luci-mtk/patches/001-logo.patch</div></pre></td></tr></table></figure>
<h4 id="改logo-MediaTek-gt-Edutech-1"><a href="#改logo-MediaTek-gt-Edutech-1" class="headerlink" title="改logo MediaTek-&gt;Edutech"></a>改logo MediaTek-&gt;Edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/ui/luci-mtk/src/modules/base/root/etc/config</div></pre></td></tr></table></figure>
<h4 id="luci-改language-1"><a href="#luci-改language-1" class="headerlink" title="luci 改language"></a>luci 改language</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/drivers/mt7620/files</div></pre></td></tr></table></figure>
<h4 id="mt7620-sh-改SSID"><a href="#mt7620-sh-改SSID" class="headerlink" title="mt7620.sh 改SSID"></a>mt7620.sh 改SSID</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/drivers/mt76x2e/files</div></pre></td></tr></table></figure>
<h4 id="mt7612e-sh-改SSID-1"><a href="#mt7612e-sh-改SSID-1" class="headerlink" title="mt7612e.sh 改SSID"></a>mt7612e.sh 改SSID</h4><h4 id="更新opkg-config源"><a href="#更新opkg-config源" class="headerlink" title="更新opkg.config源"></a>更新opkg.config源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/openwrt-3.10.14/package/base-files/image-config.in　文件中 173　行</div><div class="line">http://downloads.openwrt.org/barrier_breaker/14.07/ramips/mt7620a/packages</div></pre></td></tr></table></figure>
<h4 id="版本号"><a href="#版本号" class="headerlink" title="版本号"></a>版本号</h4><p>/openwrt-3.10.14/package/ramips/ui/luci-mtk/src/build/mkversion.sh<br>更改　luciname 和 luciversion为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">luciname    = <span class="string">"Edutech LuCI "</span></div><div class="line">luciversion = <span class="string">"0.12"</span></div></pre></td></tr></table></figure></p>
<h4 id="banner"><a href="#banner" class="headerlink" title="banner"></a>banner</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">figlet edutech <span class="_">-f</span> speed.flf -c -w 52</div><div class="line">         _________      _____           ______  </div><div class="line">    ___________  /___  ___  /______________  /_</div><div class="line">    _  _ \  __  /_  / / /  __/  _ \  ___/_  __ \</div><div class="line">    /  __/ /_/ / / /_/ // /_ /  __/ /__ _  / / /</div><div class="line">    \___/\__,_/  \__,_/ \__/ \___/\___/ /_/ /_/</div><div class="line"> -----------------------------------------------------</div><div class="line">             Shanghai Edutech Co.,Ltd</div><div class="line"> -----------------------------------------------------</div></pre></td></tr></table></figure>
<h4 id="profiles-和-固件名"><a href="#profiles-和-固件名" class="headerlink" title="profiles 和　固件名"></a>profiles 和　固件名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14/target/linux/ramips/mt7620/profiles</div><div class="line">MT7620a_MT7612e.mk</div><div class="line">openwrt-3.10.14/target/linux/ramips/image/Makefile</div></pre></td></tr></table></figure>
<h4 id="add-by-cuiqingwei-at-20150828"><a href="#add-by-cuiqingwei-at-20150828" class="headerlink" title="add by cuiqingwei at 20150828"></a>add by cuiqingwei at 20150828</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Image/Build/Profile/MT7620a_MT7612e=$(call BuildFirmware/Default8M/$(1),$(1),mt7612e,MT7620a_MT7612e)</div></pre></td></tr></table></figure>
<h4 id="去除有问题的iw"><a href="#去除有问题的iw" class="headerlink" title="去除有问题的iw"></a>去除有问题的iw</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall iw</div><div class="line">删除openwrt-3.10.14/package/network/utils目录下的iw目录</div></pre></td></tr></table></figure>
<h2 id="2015-08-13-openwrt-yun"><a href="#2015-08-13-openwrt-yun" class="headerlink" title="2015-08-13 openwrt-yun"></a>2015-08-13 openwrt-yun</h2><p>目录openwrt-yun/feeds/packages下arduino文件夹复制<br>到/openwrt/branches/barrier_breaker/package目录下<br>对应源码在openwrt/branches/barrier_breaker/build_dir/target-mips_34kc_uClibc-0.9.33.2/目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div><div class="line">Base System ---&gt;</div><div class="line">&lt;*&gt; yun-conf...................................... Custom Yún configurations            </div><div class="line"> &lt;*&gt; yun-scripts.......................................... Custom Yún scripts</div><div class="line">LuCI ---&gt;</div><div class="line">3. Applications ---&gt;</div><div class="line">&lt;*&gt; luci-app-arduino-webpanel............ simplified wifi configuration panel  </div><div class="line"><span class="built_in">echo</span> <span class="string">"src/gz barrier_breaker http://download.linino.org/dogstick/all-in-one/latest/packages/"</span> &gt;&gt; /etc/opkg.conf</div><div class="line">opkg install rng-tools --force-depends</div><div class="line">opkg install gnupg</div><div class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</div><div class="line">“Not enough random bytes available. Please <span class="keyword">do</span> some other work to give</div><div class="line">　the OS a chance to collect more entropy! (Need 284 more bytes)”</div><div class="line">First make sure you have the following available and have the rights to it:</div><div class="line">ls <span class="_">-l</span> /dev/urandom</div><div class="line"><span class="keyword">then</span> execute rngd against it:</div><div class="line">rngd -r /dev/urandom</div><div class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</div><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure></p>
<p><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a><br>成功！</p>
<h2 id="2015-08-12-arduino-yun"><a href="#2015-08-12-arduino-yun" class="headerlink" title="2015-08-12 arduino-yun"></a>2015-08-12 arduino-yun</h2><p><a href="https://www.snip2code.com/Snippet/38230/Install-Arduino-Yun-%28Linino%29-software-on" target="_blank" rel="external">https://www.snip2code.com/Snippet/38230/Install-Arduino-Yun-%28Linino%29-software-on</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install luci-lib-json luci rng-tools</div></pre></td></tr></table></figure></p>
<h4 id="If-rng-tools-is-not-installable-then-install-it-by-hand-from-e-g-http-download-linino-org-linino-distro-linino-dev-latest-packages-rng-tools-3-2-ar71xx-ipk"><a href="#If-rng-tools-is-not-installable-then-install-it-by-hand-from-e-g-http-download-linino-org-linino-distro-linino-dev-latest-packages-rng-tools-3-2-ar71xx-ipk" class="headerlink" title="If rng-tools is not installable, then install it by hand from e.g., http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk"></a>If rng-tools is not installable, then install it by hand from e.g., <a href="http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk" target="_blank" rel="external">http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk</a></h4><h4 id="Edit-your-etc-opkg-conf-add"><a href="#Edit-your-etc-opkg-conf-add" class="headerlink" title="Edit your /etc/opkg.conf, add"></a>Edit your /etc/opkg.conf, add</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/gz barrier_breaker http://download.linino.org/dogstick/all-in-one/latest/packages/</div></pre></td></tr></table></figure>
<h4 id="Comment-out-your-earlier-src-gz"><a href="#Comment-out-your-earlier-src-gz" class="headerlink" title="Comment out your earlier src/gz"></a>Comment out your earlier src/gz</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg list|grep bridge</div><div class="line">opkg list|grep yun</div><div class="line">opkg install -force-overwrite cpu-mcu-bridge yun-conf yun-scripts luci-app-arduino-webpanel avrdude gnupg temboo spacebrew uSDaemon</div><div class="line">/etc/init.d/avahi-daemon start</div></pre></td></tr></table></figure>
<h4 id="Need-to-edit-in-order-to-change-to-correct-LED"><a href="#Need-to-edit-in-order-to-change-to-correct-LED" class="headerlink" title="Need to edit in order to change to correct LED"></a>Need to edit in order to change to correct LED</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/bin/blink-start</div><div class="line">/usr/bin/blink-stop</div><div class="line">rm /tmp/luci-indexcache</div></pre></td></tr></table></figure>
<h4 id="In-etc-avahi-avahi-daemon-conf-edit"><a href="#In-etc-avahi-avahi-daemon-conf-edit" class="headerlink" title="In /etc/avahi/avahi-daemon.conf edit"></a>In /etc/avahi/avahi-daemon.conf edit</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[server]</div><div class="line"><span class="built_in">enable</span>-dbus=no</div><div class="line">/etc/init.d/avahi-daemon <span class="built_in">enable</span></div><div class="line">/etc/init.d/avahi-daemon start</div></pre></td></tr></table></figure>
<p>SHOULD SHOW<br><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a></p>
<h4 id="NEED-TO-GENERATE-A-GPG-KEY-–-WHY"><a href="#NEED-TO-GENERATE-A-GPG-KEY-–-WHY" class="headerlink" title="NEED TO GENERATE A GPG KEY – WHY???"></a>NEED TO GENERATE A GPG KEY – WHY???</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure>
<h4 id="Works-only-if-rngd-is-there-generates"><a href="#Works-only-if-rngd-is-there-generates" class="headerlink" title="Works only if rngd is there, generates"></a>Works only if rngd is there, generates</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/arduino/arduino_gpg.asc</div><div class="line">/etc/arduino/arduino_gpg.pub</div><div class="line">/etc/arduino/arduino_gpg.sec</div></pre></td></tr></table></figure>
<p>#Apparently Yun uses avrdude linuxgpio, this is suggested by /etc/linino/test_avrdude.sh</p>
<p>#run-avrdude wants to edit sys/class/gpio/gpio21/value which does not exist here</p>
<p>#Also see <a href="http://www.tonylianlong.com/?p=135" target="_blank" rel="external">http://www.tonylianlong.com/?p=135</a></p>
<p>#It has modified files for the Arduino IDE and it has the GPG key and gpg binary</p>
<p>#They have also a modified /usr/bin/run-avrdude script which is pure genius, it changes linuxgpio to serial programming and if that is all that is required to change makes it trivial to hook up different boards via USB as well:</p>
<p>#!/bin/sh</p>
<p>#echo 1 &gt; /sys/class/gpio/gpio21/value</p>
<p>#avrdude -c linuxgpio -C /etc/avrdude.conf -p m32u4 -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xFB:m -Uflash:w:$1:i $2</p>
<p>#echo 0 &gt; /sys/class/gpio/gpio21/value</p>
<p>#echo “$2” &gt; /s2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /dev/ttyACM0</div><div class="line">lsusb|grep 0043</div><div class="line"><span class="keyword">if</span> [ <span class="string">"$?"</span>x == <span class="string">"0"</span>x ];<span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> UNO</div><div class="line">avrdude -V -p m328p -c arduino -b 115200 -P /dev/ttyACM0 -C /etc/avrdude.conf -U flash:w:<span class="variable">$1</span> <span class="variable">$2</span></div><div class="line"><span class="keyword">fi</span></div><div class="line">lsusb|grep 0042</div><div class="line"><span class="keyword">if</span> [ <span class="string">"$?"</span>x == <span class="string">"0"</span>x ];<span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> MEGA</div><div class="line">avrdude -V -C/etc/avrdude.conf -patmega2560 -cstk500v2 -P/dev/ttyACM0 -b115200 -D -Uflash:w:<span class="variable">$1</span> <span class="variable">$2</span>      </div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /dev/ttyACM0</div><div class="line">====</div><div class="line"><span class="comment"># kmod-fs-hfsplus and kmod-nls-utf8 sufficient to mount Mac devices?</span></div><div class="line">====</div><div class="line">For my own reference, these are the packages that come with the YUN according to http://download.linino.org/linino_distro/linino_dev/latest/openwrt-ar71xx-generic-rootfs.tar.gz:</div><div class="line">luci-lib-sys kmod-usb-storage terminfo libuci-lua libc opkg triggerhappy kmod-usb-core libpthread ubus iw kmod-crypto-manager luci-mod-admin-core busybox libubus-lua python-json kmod-crypto-hash libiwinfo-lua swconfig kmod-fs-reiserfs libiwinfo libdbus libcurl libdw kmod-lib-crc-ccitt libgpgme luci-theme-openwrt luci-theme-bootstrap kmod-pppoe kmod-video-core libavahi-client kmod-pppox kmod-ipt-conntrack kmod-lib-crc16 base-files kmod-fs-hfsplus netifd uboot-envtools kmod-usb-ohci dnsmasq usbutils luci-sgi-cgi libblkid ubusd libelf1 kmod-spi-gpio python kmod-i2c-core libgpg-error block-mount kmod-fs-vfat kmod-usb2 firewall luci-app-firewall kmod-fs-hfs temboo luci-lib-ipkg libuci liblua libip4tc avahi-dnsconfd libcyassl libdaemon kmod-ath9k libavahi uci lua kmod-fs-ext4 wpad-mini dbus dropbear kmod-ledtrig-timer curl kmod-nls-utf8 kmod-crypto-aes mtd libstdcpp kmod-crypto-core luci-theme-base libjson-c libgcc libreadline libip6tc luci-proto-ppp libffi libuuid luci-mod-admin-full ppp libubox kmod-leds-gpio libusb-1.0 kmod-gpio-button-hotplug gnupg libjson cpu-mcu-bridge luci-lib-web spacebrew librt libassuan kmod-mac80211 libjson-script swap-utils libblobmsg-json iptables hotplug2 kmod-ipt-nathelper kmod-fs-ntfs kmod-fuse jshn libncurses kmod-ipt-core luci-webpanel-linino kmod-ledtrig-default-on rng-tools libpolarssl kmod-ppp kmod-spi-bitbang avahi-daemon uhttpd-mod-lua python-mini kmod-wdt-ath79 avahi-utils libubus uhttpd libxtables avrdude zlib luci-lib-nixio luci-lib-json luci kmod-spi-tty-ds kmod-ath libexpat kernel libnl-tiny libbz2 blkid libusb luci-proto-core px5g kmod-nls-base luci-i18n-english libgdbm yun-scripts libusb-compat uhttpd-mod-ubus uSDaemon wireless-tools kmod-ath9k-common kmod-crypto-arc4 libopenssl kmod-scsi-core kmod-cfg80211 libavahi-dbus-support luci-lib-core ppp-mod-pppoe kmod-spi-dev kmod-ipt-nat kmod-ledtrig-netdev</div><div class="line">====</div><div class="line">opkg install avrdude --force-depends</div><div class="line">opkg install rng-tools --force-depends</div><div class="line">＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋</div><div class="line">opkg update</div><div class="line">opkg list|grep bridge</div><div class="line">opkg list|grep yun</div><div class="line">opkg install luci</div><div class="line">opkg install -force-overwrite cpu-mcu-bridge yun-conf yun-scripts luci-app-arduino-webpanel gnupg uSDaemon</div><div class="line">opkg install rng-tools avrdude --force-depends</div><div class="line">rm /tmp/luci-indexcache</div><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure></p>
<p><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a></p>
<h2 id="2015-07-24-YunWebUI"><a href="#2015-07-24-YunWebUI" class="headerlink" title="2015-07-24 YunWebUI"></a>2015-07-24 YunWebUI</h2><p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git</div></pre></td></tr></table></figure></p>
<p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>Development: the easy way<br>The easiest way to hack the web panel is to copy on your Yún the files you find in this repo, maintaining the folders structure.<br>For example, file usr/lib/lua/luci/controller/arduino/index.lua will go to /usr/lib/lua/luci/controller/arduino/index.lua on your Yún.<br>Then access the webpanel at <a href="http://arduino.local/" target="_blank" rel="external">http://arduino.local/</a> (where “arduino” is the name of your Yún), properly edit file index.lua and refresh the page to see the changes.<br>Once done, copy the files back to your pc and submit us a pull request, so that everyone can take advantage of the improvements you made.<br>Development: the fast, local but hard way<br>You need a GNU/Linux box and the following tools: subversion, gnupg, lua, make, gcc, wget. On Debian based distros, these are packages subversion, gnupg, lua5.1, liblua5.1-0-dev, build-essential, wget.<br><strong>参考</strong><br><a href="https://github.com/arduino/YunWebUI" target="_blank" rel="external">https://github.com/arduino/YunWebUI</a></p>
<h5 id="ubuntu系统设置"><a href="#ubuntu系统设置" class="headerlink" title="ubuntu系统设置"></a>ubuntu系统设置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/arduino</div><div class="line"><span class="built_in">cd</span> /etc/arduino</div><div class="line">sudo wget https://raw.githubusercontent.com/arduino/openwrt-packages-yun/master/arduino/yun-conf/files/etc/arduino/gpg_gen_key_batch</div><div class="line">sudo gpg --batch --gen-key /etc/arduino/gpg_gen_key_batch</div><div class="line">sudo rm <span class="_">-f</span> /etc/arduino/arduino_gpg.asc</div><div class="line">sudo gpg --no-default-keyring --secret-keyring /etc/arduino/arduino_gpg.sec --keyring /etc/arduino/arduino_gpg.pub --export --armor --output /etc/arduino/arduino_gpg.asc</div><div class="line">sudo chmod 644 /etc/arduino/arduino_gpg.*</div><div class="line">svn co http://svn.luci.subsignal.org/luci/branches/luci-0.11 luci</div><div class="line"><span class="built_in">cd</span> /home/router-dev/iot-gateway</div><div class="line">svn co https://github.com/arduino/YunWebUI/trunk yunWebUI</div></pre></td></tr></table></figure>
<p>进入openwrt目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/feeds</div><div class="line"><span class="built_in">cd</span> luci</div><div class="line">mkdir applications/arduino</div><div class="line">cp applications/myapplication/Makefile applications/arduino</div><div class="line">ln <span class="_">-s</span> /home/router-dev/iot-gateway/yunWebUI/usr/lib/lua/luci applications/arduino/luasrc</div><div class="line">ln <span class="_">-s</span> /home/router-dev/iot-gateway/yunWebUI/www applications/arduino/htdocs</div></pre></td></tr></table></figure></p>
<p>回到openwrt目录/home/router-dev/openwrt/branches/attitude_adjustment/feeds/luci<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make runuhttpd</div><div class="line">http://localhost:8080/cgi-bin/luci/webpanel/</div><div class="line">passwd：admin</div></pre></td></tr></table></figure></p>
<p>#luci-app-arduino-webpanel-1.5.6</p>
<p>#<a href="http://arduino.cc/download.php?f=/luci-app-arduino-webpanel-1.5.6.tar.bz2" target="_blank" rel="external">http://arduino.cc/download.php?f=/luci-app-arduino-webpanel-1.5.6.tar.bz2</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/package</div><div class="line">mkdir arduino</div><div class="line">touch Makefile</div></pre></td></tr></table></figure></p>
<p>复制以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (c) 2014 Arduino LLC. All right reserved.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This is free software, licensed under the GNU General Public License v2.</span></div><div class="line"><span class="comment"># See /LICENSE for more information.</span></div><div class="line"><span class="comment">#</span></div><div class="line">include $(TOPDIR)/rules.mk</div><div class="line">PKG_NAME:=luci-app-arduino-webpanel</div><div class="line">PKG_VERSION:=1.5.6</div><div class="line">PKG_RELEASE:=1</div><div class="line">PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2</div><div class="line">PKG_SOURCE_URL:=http://arduino.cc/download.php?f=/</div><div class="line">PKG_MD5SUM:=fbcadb0b846db24302<span class="built_in">cd</span>4e027bf3927e</div><div class="line">include $(INCLUDE_DIR)/package.mk</div><div class="line">define Package/luci-app-arduino-webpanel</div><div class="line">  SECTION:=luci</div><div class="line">  CATEGORY:=LuCI</div><div class="line">  SUBMENU:=3. Applications</div><div class="line">  TITLE:= simplified wifi configuration panel</div><div class="line">  DEPENDS:=+luci +luci-lib-json +uhttpd-mod-lua +yun-scripts</div><div class="line">endef</div><div class="line">define Package/luci-app-arduino-webpanel/description</div><div class="line">simplified wifi configuration panel</div><div class="line">endef</div><div class="line">define Build/Compile</div><div class="line"><span class="comment"># NOOP</span></div><div class="line">endef</div><div class="line">define Package/luci-app-arduino-webpanel/install</div><div class="line">$(INSTALL_DIR) $(1)/usr/lib/lua/luci/controller/arduino</div><div class="line">$(INSTALL_DIR) $(1)/usr/lib/lua/luci/view/arduino</div><div class="line">$(INSTALL_DIR) $(1)/www/luci-static/resources/arduino</div><div class="line">find $(PKG_BUILD_DIR)/usr/ -name <span class="string">'*.lua'</span> -exec luac <span class="_">-s</span> -o &#123;&#125; &#123;&#125; \;</div><div class="line">$(CP) $(PKG_BUILD_DIR)/usr/* $(1)/usr/</div><div class="line">$(CP) $(PKG_BUILD_DIR)/www/* $(1)/www/</div><div class="line">endef</div><div class="line">$(<span class="built_in">eval</span> $(call BuildPackage,luci-app-arduino-webpanel))</div></pre></td></tr></table></figure></p>
<p>make menuconfig<br>git clone <a href="https://github.com/arduino/openwrt-yun.git" target="_blank" rel="external">https://github.com/arduino/openwrt-yun.git</a></p>
<h1 id="2015-07-22-zigbeegw-luci"><a href="#2015-07-22-zigbeegw-luci" class="headerlink" title="2015-07-22 zigbeegw-luci"></a>2015-07-22 zigbeegw-luci</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># zigbeegw-luci</span></div><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/package</div><div class="line">svn co https://github.com/paradislover/zigbeegw-luci/trunk zigbeegw</div><div class="line">make menuconfig</div><div class="line">LuCI ---&gt;</div><div class="line">    3.Applications ---&gt;</div><div class="line">&lt;*&gt; luci-app-zigbeegw ................ LuCI Support <span class="keyword">for</span> zigbeegw</div><div class="line">Kernel modules ---&gt;</div><div class="line">    USB Support ---&gt;</div><div class="line">&lt;*&gt; kmod-usb-acm</div><div class="line">&lt;*&gt; kmod-usb-serial</div><div class="line">&lt;*&gt;   kmod-usb-cp210x</div><div class="line">&lt;*&gt;   kmod-usb-pl2303</div><div class="line">make package/zigbee/clean</div><div class="line">make package/zigbee/compile</div><div class="line">make package/zibgee/install</div></pre></td></tr></table></figure>
<h2 id="2015-07-10-13-16-21-OpenWRT下远程调试"><a href="#2015-07-10-13-16-21-OpenWRT下远程调试" class="headerlink" title="2015-07-10,13,16,21 OpenWRT下远程调试"></a>2015-07-10,13,16,21 OpenWRT下远程调试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### OpenWRT下远程调试 attitude_adjustment WR703N</span></div><div class="line">``` bash</div><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/attitude_adjustment</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div><div class="line">src-svn luci http://svn.luci.subsignal.org/luci/branches/luci-0.11/contrib/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div><div class="line"><span class="comment">#src-svn luci http://svn.luci.subsignal.org/luci/branches/luci-0.11/contrib/package</span></div></pre></td></tr></table></figure></p>
<p>并增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">      -&gt; [*] Toolchain Options</div><div class="line">   -&gt; [*]Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">-&gt; [*]Build gdb</div><div class="line">Base System –&gt; &lt;*&gt; dropbear        </div><div class="line">           　–&gt; &lt;*&gt; libstdcpp</div><div class="line">Network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line">Utilities –&gt; // 这两个选项会导致wr703n固件编译不出</div><div class="line">&lt;*&gt; gdb</div><div class="line">&lt;*&gt; gdbserver</div></pre></td></tr></table></figure></p>
<p><a href="https://dev.openwrt.org/ticket/18331" target="_blank" rel="external">https://dev.openwrt.org/ticket/18331</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ tar -xjf OpenWrt-ImageBuilder-ar71xx_generic-for-linux-i686.tar.bz2</div><div class="line">$ <span class="built_in">cd</span> OpenWrt-ImageBuilder-ar71xx_generic-for-linux-i686/</div><div class="line">$ make info | grep 703</div><div class="line">TLWR703:</div><div class="line">TP-LINK TL-WR703N</div><div class="line">$ make image PROFILE=TLWR703</div><div class="line">[...]</div><div class="line">$ ls <span class="_">-l</span> bin/ar71xx/</div><div class="line">make image PROFILE=TLWR703 PACKAGES=<span class="string">"luci luci-i18n-chinese libstdcpp vsftpd openssh-sftp-server gdb gdbserver"</span></div></pre></td></tr></table></figure></p>
<h2 id="2015-07-09-OpenWRT下远程调试"><a href="#2015-07-09-OpenWRT下远程调试" class="headerlink" title="2015-07-09 OpenWRT下远程调试"></a>2015-07-09 OpenWRT下远程调试</h2><h4 id="OpenWRT下远程调试-attitude-adjustment-WR703N"><a href="#OpenWRT下远程调试-attitude-adjustment-WR703N" class="headerlink" title="OpenWRT下远程调试 attitude_adjustment WR703N"></a>OpenWRT下远程调试 attitude_adjustment WR703N</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/attitude_adjustment</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div></pre></td></tr></table></figure></p>
<p>并增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make defconfig</div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">      -&gt; [*] Toolchain Options</div><div class="line">   -&gt; [*]Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">-&gt; [*]Build with debug information</div><div class="line">-&gt; [*]Build gdb</div><div class="line">Base System –&gt; &lt;*&gt; dropbear        </div><div class="line">           　–&gt; &lt;*&gt; libstdcpp</div><div class="line">Network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line">Utilities –&gt; &lt;*&gt; gdbserver</div></pre></td></tr></table></figure></p>
<p>结论：　未完全成功！！！</p>
<h2 id="2015-07-08-OpenWRT下远程调试-7620n"><a href="#2015-07-08-OpenWRT下远程调试-7620n" class="headerlink" title="2015-07-08 OpenWRT下远程调试 7620n"></a>2015-07-08 OpenWRT下远程调试 7620n</h2><h4 id="OpenWRT下远程调试-barrier-breaker-7620n"><a href="#OpenWRT下远程调试-barrier-breaker-7620n" class="headerlink" title="OpenWRT下远程调试 barrier_breaker 7620n"></a>OpenWRT下远程调试 barrier_breaker 7620n</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/barrier_breaker</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make defconfig</div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">   -&gt; [*] Toolchain Options</div><div class="line">       -&gt; [*]Build/install fortran compiler</div><div class="line">   //  -&gt; [*]Build with debug information</div><div class="line">       -&gt; [*]Build gdb</div><div class="line">   //→ “gdb”</div><div class="line">   //→ “Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">启动以下五项</div><div class="line">// Global build setting –&gt; Preferred standard C++ library -&gt; libstdc++</div><div class="line">Base System –&gt; &lt;*&gt; dropbear</div><div class="line">            –&gt; &lt;*&gt; libstdcpp</div><div class="line">Development –&gt; &lt;*&gt; gdb</div><div class="line">               &lt;*&gt; gdbserver</div><div class="line">network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line"></div><div class="line">~$ make V=s</div></pre></td></tr></table></figure></p>
<p>结论：　未完全成功！！！</p>
<h2 id="2015-07-07-helloworld"><a href="#2015-07-07-helloworld" class="headerlink" title="2015-07-07 helloworld"></a>2015-07-07 helloworld</h2><p>####　内置　helloworld<br>a).在package目录下创建helloworld目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~$ <span class="built_in">cd</span> package</div><div class="line">~$ mkdir helloworld</div><div class="line">~$ <span class="built_in">cd</span> helloworld</div></pre></td></tr></table></figure></p>
<p>b).建立Makefile<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ touch Makefile</div><div class="line">~$ vim Makefile</div></pre></td></tr></table></figure></p>
<p>Makefile文件模板内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##############################################</span></div><div class="line"><span class="comment"># OpenWrt Makefile for helloworld program</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Most of the variables used here are defined in</span></div><div class="line"><span class="comment"># the include directives below. We just need to</span></div><div class="line"><span class="comment"># specify a basic description of the package,</span></div><div class="line"><span class="comment"># where to build our program, where to find</span></div><div class="line"><span class="comment"># the source files, and where to install the</span></div><div class="line"><span class="comment"># compiled program on the router.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Be very careful of spacing in this file.</span></div><div class="line"><span class="comment"># Indents should be tabs, not spaces, and</span></div><div class="line"><span class="comment"># there should be no trailing whitespace in</span></div><div class="line"><span class="comment"># lines that are not commented.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">##############################################</span></div><div class="line">include $(TOPDIR)/rules.mk</div><div class="line"><span class="comment"># Name and release number of this package</span></div><div class="line">PKG_NAME:=helloworld.qq.com/</div><div class="line">PKG_RELEASE:=1</div><div class="line"><span class="comment"># This specifies the directory where we're going to build the program.</span></div><div class="line"><span class="comment"># The root build directory, $(BUILD_DIR), is by default the build_mipsel</span></div><div class="line"><span class="comment"># directory in your OpenWrt SDK directory</span></div><div class="line">PKG_BUILD_DIR := $(BUILD_DIR)/$(PKG_NAME)</div><div class="line">include $(INCLUDE_DIR)/package.mk</div><div class="line"><span class="comment"># Specify package information for this program.</span></div><div class="line"><span class="comment"># The variables defined here should be self explanatory.</span></div><div class="line"><span class="comment"># If you are running Kamikaze, delete the DESCRIPTION</span></div><div class="line"><span class="comment"># variable below and uncomment the Kamikaze define</span></div><div class="line"><span class="comment"># directive for the description below</span></div><div class="line">define Package/helloworld</div><div class="line">SECTION:=utils</div><div class="line">CATEGORY:=Utilities</div><div class="line">TITLE:=Helloworld -- prints a <span class="built_in">test</span> message</div><div class="line">endef</div><div class="line"><span class="comment"># Uncomment portion below for Kamikaze and delete DESCRIPTION variable above</span></div><div class="line">define Package/helloworld/description</div><div class="line">        If you can<span class="string">'t figure out what this program does, you'</span>re probably</div><div class="line">        brain-dead and need immediate medical attention.</div><div class="line">endef</div><div class="line"><span class="comment"># Specify what needs to be done to prepare for building the package.</span></div><div class="line"><span class="comment"># In our case, we need to copy the source files to the build directory.</span></div><div class="line"><span class="comment"># This is NOT the default.  The default uses the PKG_SOURCE_URL and the</span></div><div class="line"><span class="comment"># PKG_SOURCE which is not defined here to download the source from the web.</span></div><div class="line"><span class="comment"># In order to just build a simple program that we have just written, it is</span></div><div class="line"><span class="comment"># much easier to do it this way.</span></div><div class="line">define Build/Prepare</div><div class="line">mkdir -p $(PKG_BUILD_DIR)</div><div class="line">$(CP) ./src/* $(PKG_BUILD_DIR)/</div><div class="line">endef</div><div class="line"><span class="comment"># We do not need to define Build/Configure or Build/Compile directives</span></div><div class="line"><span class="comment"># The defaults are appropriate for compiling a simple program such as this one</span></div><div class="line"><span class="comment"># Specify where and how to install the program. Since we only have one file,</span></div><div class="line"><span class="comment"># the helloworld executable, install it by copying it to the /bin directory on</span></div><div class="line"><span class="comment"># the router. The $(1) variable represents the root directory on the router running</span></div><div class="line"><span class="comment"># OpenWrt. The $(INSTALL_DIR) variable contains a command to prepare the install</span></div><div class="line"><span class="comment"># directory if it does not already exist.  Likewise $(INSTALL_BIN) contains the</span></div><div class="line"><span class="comment"># command to copy the binary file from its current location (in our case the build</span></div><div class="line"><span class="comment"># directory) to the install directory.</span></div><div class="line">define Package/helloworld/install</div><div class="line">$(INSTALL_DIR) $(1)/bin</div><div class="line">$(INSTALL_BIN) $(PKG_BUILD_DIR)/helloworld $(1)/bin/</div><div class="line">endef</div><div class="line"><span class="comment"># This line executes the necessary commands to compile our program.</span></div><div class="line"><span class="comment"># The above define directives specify all the information needed, but this</span></div><div class="line"><span class="comment"># line calls BuildPackage which in turn actually uses this information to</span></div><div class="line"><span class="comment"># build a package.</span></div><div class="line">$(<span class="built_in">eval</span> $(call BuildPackage,helloworld))</div></pre></td></tr></table></figure></p>
<p>c).创建src目录，并编写helloworld程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ mkdir src</div><div class="line">~$ <span class="built_in">cd</span> src</div></pre></td></tr></table></figure></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/****************</span></div><div class="line">* Helloworld.c</div><div class="line">*****************/</div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"hello world! \n\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编写Makefile文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># build helloworld executable when user executes "make"</span></div><div class="line">helloworld: helloworld.o</div><div class="line">$(CC) $(LDFLAGS) helloworld.o -o helloworld</div><div class="line">helloworld.o: helloworld.c</div><div class="line">$(CC) $(CFLAGS) -c helloworld.c</div><div class="line"><span class="comment"># remove object files and executable when user executes "make clean"</span></div><div class="line">clean:</div><div class="line">rm *.o helloworld</div><div class="line">在这两个文件的目录下，执行make 应该可以生成helloworld的可执行文件。执行helloworld后，能够打印出“hello world!”。 这一步，主要保证我们的源程序是可以正常编译的。</div><div class="line">d).编译</div><div class="line">~$ make menuconfig</div><div class="line">?6?1 Utilities -&gt; Toolchain Options</div><div class="line">→ (*) helloworld</div><div class="line">~$ make V=s</div></pre></td></tr></table></figure></p>
<h2 id="2015-07-06-OpenWRT-Build"><a href="#2015-07-06-OpenWRT-Build" class="headerlink" title="2015-07-06 OpenWRT Build"></a>2015-07-06 OpenWRT Build</h2><p>####　1.下载OpenWRT源码包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ svn checkout svn://svn.openwrt.org/openwrt/trunk</div></pre></td></tr></table></figure></p>
<p>进入源码文件夹：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ <span class="built_in">cd</span> trunk</div></pre></td></tr></table></figure></p>
<p>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git</div></pre></td></tr></table></figure></p>
<p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.12</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div></pre></td></tr></table></figure></p>
<p>下一步是检查编译环境，若可进行编译则生成默认配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ make defconfig</div></pre></td></tr></table></figure></p>
<p>menuconfig是一个基于文本的工具，它处理选择的目标（需要还是不需要）、编译生成软件包（openwrt下是IPKG格式）以及内核选项（编译成模块还是内核）等等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<h4 id="2-增加profile"><a href="#2-增加profile" class="headerlink" title="2. 增加profile"></a>2. 增加profile</h4><p>$ 在../target/linux/ramips/mt7620/profiles 目录增加 wrtnode.mk<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (C) 2015 OpenWrt.org</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This is free software, licensed under the GNU General Public License v2.</span></div><div class="line"><span class="comment"># See /LICENSE for more information.</span></div><div class="line"><span class="comment"># add by : cuiqingwei</span></div><div class="line"><span class="comment">#</span></div><div class="line">define Profile/WRTNODE</div><div class="line"> NAME:=Wrtnode</div><div class="line"> PACKAGES:=\</div><div class="line">kmod-usb-core kmod-usb-dwc2 kmod-usb2 kmod-usb-ohci \</div><div class="line">kmod-mt76</div><div class="line">endef</div><div class="line">define Profile/WRTNODE/Description</div><div class="line"> Support <span class="keyword">for</span> WRTnode Board</div><div class="line">endef</div><div class="line">$(<span class="built_in">eval</span> $(call Profile,WRTNODE))</div></pre></td></tr></table></figure></p>
<p>特别提醒：<br>a).profile文件的格式一定要书写正确。特别是 “\”反斜杠后面，千万不能有空格，否则会导致mt7620a整个subtarget都消失不见。<br>b).注意package之间的依赖关系，如kmod-ac97 kmod-sound-soc-core kmod-sound-mt7620都依赖于kmod-sound-core，那么就应该按照先后顺序依次写出，同样的道理：kmod-ac97 kmod-sound-soc-core应该出现在kmod-sound-mt7620前面。<br>c).必须删除tmp目录，才能让添加的profile生效。<br>最后，就可以在make menuconfig中看到你想要的东西啦。</p>
<h4 id="3-更改kernel-console打印波特率"><a href="#3-更改kernel-console打印波特率" class="headerlink" title="3.更改kernel console打印波特率"></a>3.更改kernel console打印波特率</h4><p>在..target/linux/ramips/dts/WRTNODE.dts中添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chosen &#123;</div><div class="line">bootargs = <span class="string">"console=ttyS0,115200"</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<hr>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h3 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make clean[清楚bin 目录]</div><div class="line">make dirclean[make clean]+[清除交叉编译工具及工具链目录]</div><div class="line">make distclean[清除所有相关的东西，包括下载的软件包，配置文件，feed内容等]</div></pre></td></tr></table></figure>
<h3 id="装-Luci-web-UI"><a href="#装-Luci-web-UI" class="headerlink" title="装 Luci web UI :"></a>装 Luci web UI :</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update packages luci</div><div class="line">./scripts/feeds install <span class="_">-a</span> -p luci</div></pre></td></tr></table></figure>
<h3 id="tftp更新固件"><a href="#tftp更新固件" class="headerlink" title="tftp更新固件"></a>tftp更新固件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tftp 0x80000000 wr703n-f.bin</div><div class="line">tftp 0x80000000 openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin</div><div class="line">erase 0x9f020000 +0x3c0000</div><div class="line">cp.b 0x80000000 0x9f020000 0x3c0000</div><div class="line">bootm 0x9f020000</div></pre></td></tr></table></figure>
<h3 id="scp至路由器更新固件"><a href="#scp至路由器更新固件" class="headerlink" title="scp至路由器更新固件"></a>scp至路由器更新固件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp bin/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin root@192.168.199.175:/tmp/</div><div class="line">mtd -r write openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin firmware</div><div class="line">scp zbGateway.bin root@192.168.199.175:/tmp/</div></pre></td></tr></table></figure>
<h3 id="Network-testing-with-iperf"><a href="#Network-testing-with-iperf" class="headerlink" title="Network-testing with iperf"></a>Network-testing with iperf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ping -c 5 192.168.199.175</div><div class="line">netcat -u <span class="_">-l</span> -p 2000 &gt; /dev/null</div><div class="line">nc -u <span class="_">-l</span> -p 2000 &gt; /dev/null</div><div class="line">dd <span class="keyword">if</span>=/dev/zero bs=1M count=100 | pv -brt | netcat -u 192.168.199.175 2000</div></pre></td></tr></table></figure>
<h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iperf <span class="_">-s</span></div><div class="line">iperf -c 192.168.199.175</div></pre></td></tr></table></figure>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">iperf <span class="_">-s</span> -u</div><div class="line">iperf -c 192.168.199.175 -u</div><div class="line">scp root@192.168.199.175:/etc/opkg.conf /home/router-dev/</div><div class="line">scp /home/router-dev/opkg.conf root@192.168.199.175:/etc/</div><div class="line">scp openwrt-helloworld root@192.168.199.175:/usr/</div><div class="line">root@OpenWrt:/<span class="comment"># gdbserver 192.168.199.175:10000 /usr/openwrt-helloworld</span></div></pre></td></tr></table></figure>
<h3 id="eclipse调试-没有成功"><a href="#eclipse调试-没有成功" class="headerlink" title="eclipse调试[没有成功]"></a>eclipse调试[没有成功]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/staging_dir</div><div class="line">mips-openwrt-linux-</div><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/staging_dir/toolchain-mips_r2_gcc-4.6-linaro_uClibc-0.9.33.2/bin</div><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/build_dir/toolchain-mips_r2_gcc-4.6-linaro_uClibc-0.9.33.2/gdb-linaro-7.2-2011.03-0/gdb/gdb</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/staging_dir</div><div class="line">mipsel-openwrt-linux-</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/staging_dir/toolchain-mipsel_24kec+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/bin</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/build_dir/toolchain-mipsel_24kec+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/gdb-linaro-7.6-2013.05/gdb/gdb</div></pre></td></tr></table></figure>
<p>############################################################<br>??? 问题<br>mipsel-openwrt-linux-g++: warning: environment variable ‘STAGING_DIR’ not defined<br>!!! 解决<br>eclipse菜单Window-&gt;Preferences-&gt;C/C++-&gt;Environmentz增加<br>STAGING_DIR　<br>/home/router-dev/openwrt/trunk-dev/staging_dir<br><a href="http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/" target="_blank" rel="external">http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</a><br>//////////////////////////////////////////////////////////////////////////////////////<br>//////////////////////////////////////////////////////////////////////////////////////<br>将vsftpd编译进openwrt的固件中去</p>
<h1 id="http-chaochaoblog-com-archives-1007"><a href="#http-chaochaoblog-com-archives-1007" class="headerlink" title="http://chaochaoblog.com/archives/1007"></a><a href="http://chaochaoblog.com/archives/1007" target="_blank" rel="external">http://chaochaoblog.com/archives/1007</a></h1><p>首先进去我们已经下载好了源码的目录，如backfire或者其它分支的。然后利用feeds来下载安装vsftpd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update</div><div class="line">~$ ./scripts/feeds install <span class="_">-d</span> m vsftpd</div></pre></td></tr></table></figure></p>
<p>之后你可以到目录/feeds/package/net/下看了，就会发现我们的vsftpd这个源码包都下载下来了。<br>之后回根目录，输入<br>~$ make menuconfig<br>在network –&gt; file trasfer下就可以找到vsftpd了，果断按下y选择编译进固件，当然你也可以选择m那么就只会编译出ipk文件来了。<br>~$ make V=s 编译出bin的固件镜像文件来，刷入flash，然后ssh之后ps查看进程<br>OpenWrt开启sftp，方便传输文件。修改opkg.conf文件</p>
<p>#<a href="http://see.sl088.com/wiki/Openwrt_opkg%E6%BA%90%E8%AE%BE%E7%BD%AE" target="_blank" rel="external">http://see.sl088.com/wiki/Openwrt_opkg%E6%BA%90%E8%AE%BE%E7%BD%AE</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@OpenWrt:~<span class="comment"># vi /etc/opkg.conf</span></div></pre></td></tr></table></figure></p>
<p>为<br>option overlay_root /overlay<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># src/gz chaos_calmer_base http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/packages/base</span></div><div class="line"><span class="comment"># src/gz chaos_calmer_luci http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/packages/luci</span></div><div class="line">src/gz chaos_calmer_packages http://downloads.openwrt.org/chaos_calmer/15.05-rc2/ramips/mt7620/packages/packages</div><div class="line"><span class="comment"># option check_signature 1</span></div></pre></td></tr></table></figure></p>
<p>主要去掉签名check,增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">src/gz chaos_calmer_packages http://downloads.openwrt.org/chaos_calmer/15.05-rc2/ramips/mt7620/packages/packages</div><div class="line">root@OpenWrt:~<span class="comment"># opkg update</span></div><div class="line">root@OpenWrt:~<span class="comment"># opkg install vsftpd openssh-sftp-server</span></div><div class="line">root@OpenWrt:~<span class="comment"># /etc/init.d/vsftpd enable</span></div><div class="line">root@OpenWrt:~<span class="comment"># /etc/init.d/vsftpd start</span></div><div class="line">.....................</div></pre></td></tr></table></figure></p>
<p>#<a href="http://www.cnblogs.com/peteryj/archive/2011/08/23/2151216.html" target="_blank" rel="external">http://www.cnblogs.com/peteryj/archive/2011/08/23/2151216.html</a><br>a).建立调试环境<br>配置编译OpenWRT<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></p>
<p>启动以下两项<br>Advanced configuration options (for developers) –&gt; Toolchain options –&gt; Build gdb<br>Development –&gt; gdbserver<br>b).编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make V=99，如果已经编译过，则make toolchain/install 编译下gdb即可</div></pre></td></tr></table></figure></p>
<p>c).编译待调试程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></p>
<p>启动Advanced configuration options (for developers) –&gt; Build options –&gt; Enable debugging<br>编译程序<br>以snmpd为例 ，使用make package/net-snmp/compile去编译程序，生成带调试信息的snmpd，作为宿主机调试使用。<br>以上就是准备工作。下面简单介绍一下调试过程。<br>d).调试程序<br>启动目标机上的待调试程序<br>首先加载并启动编译好的OpenWRT系统，然后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gdbserver &lt;local_IP&gt;:&lt;port&gt; &lt;program&gt; &lt;args&gt;</div></pre></td></tr></table></figure></p>
<p>启动宿主机gdb<br>(这里要修复一个bug，方法是：cd <openwrtdir>/staging<em>dir/<targetarch>; rmdir lib; ln -s ../toolchain-<targetarch></targetarch></targetarch></em><gccver>/lib lib)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> &lt;openwrtdir&gt;/build_dir/toolchain-&lt;targetarch&gt;_&lt;gccver&gt;/gdb-6.3/gdb</div></pre></td></tr></table></figure></gccver></openwrtdir></p>
<p>./gdb– 启动<br>设置gdb，并启动调试程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">set</span> solib-absolute-prefix &lt;openwrtdir&gt;/staging_dir/&lt;targetarch&gt;</div><div class="line">file &lt;openwrtdir&gt;/build_dir/&lt;targetarch&gt;/&lt;path&gt;/&lt;executable&gt;</div></pre></td></tr></table></figure></p>
<p>连接目标机：target remote <ip>:<port><br>连接成功之后，就可以按正常的gdb调试流程进行调试了。</port></ip></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2016-04-23-Openwrt-Yun&quot;&gt;&lt;a href=&quot;#2016-04-23-Openwrt-Yun&quot; class=&quot;headerlink&quot; title=&quot;2016-04-23 Openwrt Yun&quot;&gt;&lt;/a&gt;2016-04-23 Openwrt Yun&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/bin/bash -ex&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;FEEDS&quot;&gt;&lt;a href=&quot;#FEEDS&quot; class=&quot;headerlink&quot; title=&quot;FEEDS&quot;&gt;&lt;/a&gt;FEEDS&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds uninstall &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;rm -rf feeds&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds update &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds install &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds uninstall erlang freeswitch remotefs libzstream shflags opensips pulseaudio xmlrpc-c rtorrent sox umurmur-polarssl freecwmp-zstream osirisd logtrigger libplist libimobiledevice cmus mxml boost wt etherpuppet php4 aprx n2n pdnsd crtmpserver kissdx openconnect telepathy-python alljoyn&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="OpenWRT" scheme="http://cuiqingwei.github.io/tags/OpenWRT/"/>
    
  </entry>
  
  <entry>
    <title>技术领域的深刻体会、教训</title>
    <link href="http://cuiqingwei.github.io/2015/06/24/2015-06-24-%E6%8A%80%E6%9C%AF%E9%A2%86%E5%9F%9F%E7%9A%84%E6%B7%B1%E5%88%BB%E4%BD%93%E4%BC%9A%E3%80%81%E6%95%99%E8%AE%AD/"/>
    <id>http://cuiqingwei.github.io/2015/06/24/2015-06-24-技术领域的深刻体会、教训/</id>
    <published>2015-06-24T13:22:00.000Z</published>
    <updated>2016-09-18T07:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录之，告诫自己；分享之，愿助他人。</p>
<p>学习一定要，知之为知之，不知为不知，不仅自己不能装逼，也不能向装逼的人讨教，否则只是相互浪费时间而已。</p>
<p>不要和不懂规则且贪婪的人合作，否则他们会反过来诬陷和要挟你。</p>
<p>和学生合作一定要谨慎，他们往往会高估自己的能力。</p>
<p>商业项目，一定要先签合同再做事。</p>
<p>不要用不成熟的技术做开发。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录之，告诫自己；分享之，愿助他人。&lt;/p&gt;
&lt;p&gt;学习一定要，知之为知之，不知为不知，不仅自己不能装逼，也不能向装逼的人讨教，否则只是相互浪费时间而已。&lt;/p&gt;
&lt;p&gt;不要和不懂规则且贪婪的人合作，否则他们会反过来诬陷和要挟你。&lt;/p&gt;
&lt;p&gt;和学生合作一定要谨慎，他们往
    
    </summary>
    
    
      <category term="体会" scheme="http://cuiqingwei.github.io/tags/%E4%BD%93%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>三星平板工厂模式</title>
    <link href="http://cuiqingwei.github.io/2015/06/03/2015-06-03-%E4%B8%89%E6%98%9F%E5%B9%B3%E6%9D%BF%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://cuiqingwei.github.io/2015/06/03/2015-06-03-三星平板工厂模式/</id>
    <published>2015-06-03T09:45:00.000Z</published>
    <updated>2016-09-18T08:58:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>进入应用桌面打开计算器输入 <strong>(+30012012732+</strong> 进入Factory Mode</p>
<p>On android 3.X version <strong>(+32286798378+</strong>           left bracket, plus, 3,2,2,8,6,7,9,8,3,7,8, plus<br>On android 4.X version <strong>(+30012012732+</strong>           left bracket, plus, 3,0,0,1,2,0,1,2,7,3,2, plus<br><a id="more"></a><br>Android 4.X 示例:<br><img src="/img/20150603/1.jpeg" alt=""></p>
<p>工厂模式代码一览（供参考）</p>
<p>*#06#                      – <em>To check IMEI No.</em><br>*#9090#                    – <em>Diagnostic Configuration</em><br>*#1234#                    – <em>to check software version of phone.</em><br>*#272*IMEI#                – <em>Reset User data + Change Sales Code</em><br>*#12580*369#               – <em>to check software and hardware information.</em><br>*#0228#                    – <em>Battery status (ADC, RSSI reading)</em><br>*2767*3855#                – <em>Full factory reset (Don’t dial it does not ask you to confirm unless you have problem)</em><br>*#0*#                      – <em>This Code shows Screen Test Menu (LCD Test Menu) Hidden Menu</em><br>*#7353#                    – <em>Self Test Mode (2nd Hidden Menu)</em></p>
<p>*#34971539#                <em>Camera firmware check/update</em><br>*#2263#                    <em>Service Mode - Baseband selection</em><br>*#9900#                    <em>SysDump</em><br>*#0011#                    <em>Service Mode - Radio parameters</em><br>*#0808#                    <em>USB Settings</em><br>*#2222#                    <em>Service Mode - FTA HW Version</em><br>*#1111#                    <em>Service Mode - FTA SW Version</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;进入应用桌面打开计算器输入 &lt;strong&gt;(+30012012732+&lt;/strong&gt; 进入Factory Mode&lt;/p&gt;
&lt;p&gt;On android 3.X version &lt;strong&gt;(+32286798378+&lt;/strong&gt;           left bracket, plus, 3,2,2,8,6,7,9,8,3,7,8, plus&lt;br&gt;On android 4.X version &lt;strong&gt;(+30012012732+&lt;/strong&gt;           left bracket, plus, 3,0,0,1,2,0,1,2,7,3,2, plus&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="三星平板" scheme="http://cuiqingwei.github.io/tags/%E4%B8%89%E6%98%9F%E5%B9%B3%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>ZigBee射频模块晶振选型</title>
    <link href="http://cuiqingwei.github.io/2015/03/01/2015-03-01-ZigBee%E5%B0%84%E9%A2%91%E6%A8%A1%E5%9D%97%E6%99%B6%E6%8C%AF%E9%80%89%E5%9E%8B/"/>
    <id>http://cuiqingwei.github.io/2015/03/01/2015-03-01-ZigBee射频模块晶振选型/</id>
    <published>2015-02-28T18:17:00.000Z</published>
    <updated>2016-09-19T09:43:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.ti.com/lit/an/swra372c/swra372c.pdf" target="_blank" rel="external">AN100 - Crystal Selection Guide (Rev. C)</a></p>
<h3 id="CC2530"><a href="#CC2530" class="headerlink" title="CC2530"></a>CC2530</h3><p>NX3225SA : Crystal, 32.000MHz, 10/15ppm, 16 pF  ! Temp range -30 - +85 deg C !<br><a href="http://www.ndk.com/cn/products/search/crystal/1188115_1533.html" target="_blank" rel="external">http://www.ndk.com/cn/products/search/crystal/1188115_1533.html</a><br>TSX-3225 : Crystal, 32.000MHz, 16 pF, -10PPM/+10PPM, -40DEGC/+85DEGC, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/at/tsx3225.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/at/tsx3225.html</a><br>MC-306 : Crystal, 32.768 kHz, 12.5pF, 20/50 ppm,SMD package<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/mc306.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/mc306.html</a></p>
<h3 id="CC2538"><a href="#CC2538" class="headerlink" title="CC2538"></a>CC2538</h3><p>FA-128 : CRYSTAL, OSCILATOR, 32MHz, 10pF, -10PPM/+10PPM, -40DEGC/+85DEGC, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/at/fa128.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/at/fa128.html</a><br>FC-12M : CRYSTAL, OSCILATOR, 32.768kHz, -20PPM/ + 20PPM, -40DEGC/ +85DEGC, 12.5pF, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/fc12d12m.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/fc12d12m.html</a><br>ABS05 : 32.768KHZ<br><a href="http://www.abracon.com/Resonators/ABS05.pdf" target="_blank" rel="external">http://www.abracon.com/Resonators/ABS05.pdf</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.ti.com/lit/an/swra372c/swra372c.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AN100 - Crystal Selection Guide (Rev. C)&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="ZigBee" scheme="http://cuiqingwei.github.io/tags/ZigBee/"/>
    
      <category term="晶振" scheme="http://cuiqingwei.github.io/tags/%E6%99%B6%E6%8C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu</title>
    <link href="http://cuiqingwei.github.io/2015/01/13/2015-01-13-Ubuntu/"/>
    <id>http://cuiqingwei.github.io/2015/01/13/2015-01-13-Ubuntu/</id>
    <published>2015-01-13T13:28:00.000Z</published>
    <updated>2016-09-18T08:58:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-常用指令"><a href="#1-常用指令" class="headerlink" title="1.常用指令"></a>1.常用指令</h3><pre><code>版本查看：
      cat /etc/issue
      sudo lsb_release -a
</code></pre><a id="more"></a>
<h3 id="2-环境设置"><a href="#2-环境设置" class="headerlink" title="2.环境设置"></a>2.环境设置</h3><pre><code>zsh
     sudo apt-get install zsh
     https://github.com/robbyrussell/oh-my-zsh
fortune
      sudo apt-get install fortune
      https://github.com/ruanyf/fortunes

 右键添加终端打开
      sudo apt-get install nautilus-open-terminal
      sudo reboot

chrome
      apt-get install chromium chromium-l10n
      cd /tmp
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo apt-get install libxss1
      sudo dpkg -i google-chrome-stable_current_amd64.deb

svn&amp;git
      sudo apt-get install subversion
      sudo apt-get install git

sublime text       
      wget https://download.sublimetext.com/sublime-text_build-3114_amd64.deb
      sudo dpkg -i sublime-text_build-3114_amd64.deb
      key http://www.52pojie.cn/thread-499175-1-1.html
      &quot;update_check&quot;:false
      https://packagecontrol.io/installation          
meld
     sudo apt-get install meld

eclipse
     sudo apt-get install eclipse eclipse-cdt

arduino
     sudo apt-get install arduino

eagle
     wget http://web.cadsoft.de/ftp/eagle/program/7.6/eagle-lin64-7.6.0.run
     sh eagle-lin64-7.6.0.run

hosts
     https://github.com/racaljk/hosts
</code></pre><p><strong>Cannot Set LC_ALL to default locale: No such file or directory</strong><br><a href="http://linoxide.com/linux-how-to/fix-error-locale-cannot-set-lc_all-to-default-locale-no-such-file-or-directory/" target="_blank" rel="external">http://linoxide.com/linux-how-to/fix-error-locale-cannot-set-lc_all-to-default-locale-no-such-file-or-directory/</a></p>
<p>sEx只是调用相关程序，本身并无压缩、解压功能，请注意！<br>sEx请到： <a href="http://sourceforge.net/projects/sex下载！" target="_blank" rel="external">http://sourceforge.net/projects/sex下载！</a><br>解压后请将sEx拷贝到/usr/bin目录（其他由$PATH环境变量指定的目录也可以）：<br>[root@www2 tmp]# cp sEx /usr/bin/</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-常用指令&quot;&gt;&lt;a href=&quot;#1-常用指令&quot; class=&quot;headerlink&quot; title=&quot;1.常用指令&quot;&gt;&lt;/a&gt;1.常用指令&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;版本查看：
      cat /etc/issue
      sudo lsb_release -a
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://cuiqingwei.github.io/tags/ubuntu/"/>
    
      <category term="总结" scheme="http://cuiqingwei.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="linux" scheme="http://cuiqingwei.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MacOS</title>
    <link href="http://cuiqingwei.github.io/2015/01/13/2015-01-13-MacOS/"/>
    <id>http://cuiqingwei.github.io/2015/01/13/2015-01-13-MacOS/</id>
    <published>2015-01-13T13:28:00.000Z</published>
    <updated>2016-09-18T08:58:03.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Mac入门"><a href="#Mac入门" class="headerlink" title="Mac入门"></a>Mac入门</h3><p><a href="http://www.cnblogs.com/TankXiao/archive/2013/01/05/2845413.html" target="_blank" rel="external">http://www.cnblogs.com/TankXiao/archive/2013/01/05/2845413.html</a></p>
<h3 id="1-AppStore"><a href="#1-AppStore" class="headerlink" title="1. AppStore"></a>1. AppStore</h3><p>工作：Evernote、Alfred、Go2Shell、The Unarchiver、CheatSheet、Xcode、SourceTree(Git/Hg)<br>系统：QQ、CleanMyDrive 3<br><a id="more"></a></p>
<h3 id="2-dmg"><a href="#2-dmg" class="headerlink" title="2. dmg"></a>2. dmg</h3><p>Chrome、VMwareFusion、RDC、QQInput、RTX、cornerstone<br>Sublime Text</p>
<h3 id="3-brew"><a href="#3-brew" class="headerlink" title="3. brew"></a>3. brew</h3><p>ruby -e “$(curl -fsSL <a href="https://raw.github.com/Homebrew/homebrew/go/install" target="_blank" rel="external">https://raw.github.com/Homebrew/homebrew/go/install</a>)”<br><a href="http://brew.sh/" target="_blank" rel="external">http://brew.sh/</a></p>
<p>升级更新 brew update<br>cd /usr/local<br>git reset –hard<br>git checkout .<br>sudo chown -R cuiqingwei /usr/local<br>brew update<br><a href="http://www.xitongzhijia.net/xtjc/20141204/31879.html" target="_blank" rel="external">http://www.xitongzhijia.net/xtjc/20141204/31879.html</a></p>
<h3 id="4-MacPorts"><a href="#4-MacPorts" class="headerlink" title="4. MacPorts"></a>4. MacPorts</h3><p><a href="https://www.macports.org/install.php" target="_blank" rel="external">https://www.macports.org/install.php</a><br><a href="http://guide.macports.org/#installing.macports" target="_blank" rel="external">http://guide.macports.org/#installing.macports</a></p>
<h3 id="5-wget"><a href="#5-wget" class="headerlink" title="5. wget"></a>5. wget</h3><p>sudo port install wget</p>
<h3 id="6-zsh"><a href="#6-zsh" class="headerlink" title="6. zsh"></a>6. zsh</h3><p>wget <a href="https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh" target="_blank" rel="external">https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh</a> -O - | sh<br><a href="http://leeiio.me/bash-to-zsh-for-mac/" target="_blank" rel="external">http://leeiio.me/bash-to-zsh-for-mac/</a><br><a href="http://www.sketchup.com/download/all" target="_blank" rel="external">http://www.sketchup.com/download/all</a><br>打开 “终端” 输入： chflags nohidden ~/library/ 即可显示被隐藏的 Library（资源库）!</p>
<h3 id="7-mac-say-唱歌"><a href="#7-mac-say-唱歌" class="headerlink" title="7. mac say 唱歌"></a>7. mac say 唱歌</h3><p>应用程序&gt;实用工具&gt;Terminal 复制和黏贴以下内容，然后回车：</p>
<ul>
<li>spotlight搜索框中输入”终端”或者”terminal”, 找到并打开”终端”这个程序。</li>
<li>在下面引用框里单击三下，cmd+c复制歌词，cmd+v粘贴到终端窗口，回车。</li>
<li>开始听歌了。</li>
</ul>
<h2 id="保-修服-务和支-持期-限（序-列-号）查-询-工-具"><a href="#保-修服-务和支-持期-限（序-列-号）查-询-工-具" class="headerlink" title="保﻿修服﻿务和支﻿持期﻿限（序﻿列﻿号）查﻿询﻿工﻿具"></a>保﻿修服﻿务和支﻿持期﻿限（序﻿列﻿号）查﻿询﻿工﻿具</h2><p><a href="https://checkcoverage.apple.com/cn/zh/" target="_blank" rel="external">https://checkcoverage.apple.com/cn/zh/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Mac入门&quot;&gt;&lt;a href=&quot;#Mac入门&quot; class=&quot;headerlink&quot; title=&quot;Mac入门&quot;&gt;&lt;/a&gt;Mac入门&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2013/01/05/2845413.html&quot;&gt;http://www.cnblogs.com/TankXiao/archive/2013/01/05/2845413.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-AppStore&quot;&gt;&lt;a href=&quot;#1-AppStore&quot; class=&quot;headerlink&quot; title=&quot;1. AppStore&quot;&gt;&lt;/a&gt;1. AppStore&lt;/h3&gt;&lt;p&gt;工作：Evernote、Alfred、Go2Shell、The Unarchiver、CheatSheet、Xcode、SourceTree(Git/Hg)&lt;br&gt;系统：QQ、CleanMyDrive 3&lt;br&gt;
    
    </summary>
    
    
      <category term="MacOS" scheme="http://cuiqingwei.github.io/tags/MacOS/"/>
    
      <category term="总结" scheme="http://cuiqingwei.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>SDK之uClinux、Ralink、Atheros、Realtek、Broadcom</title>
    <link href="http://cuiqingwei.github.io/2014/12/08/2014-12-08-SDK%E4%B9%8BuClinux%E3%80%81Ralink%E3%80%81Atheros%E3%80%81Realtek%E3%80%81Broadcom/"/>
    <id>http://cuiqingwei.github.io/2014/12/08/2014-12-08-SDK之uClinux、Ralink、Atheros、Realtek、Broadcom/</id>
    <published>2014-12-08T15:34:00.000Z</published>
    <updated>2016-09-19T09:27:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>接触的Linux SDK越来越多，整理整理，分享分享，不求系统全面，对您有帮助便足矣<br>文中大部分是与AP/Router SoC解决方案（单芯片WIFI 路由器解决方案）相关的Linux SDK</p>
<h1 id="SDK（Software-Development-Kit）软件开发工具包"><a href="#SDK（Software-Development-Kit）软件开发工具包" class="headerlink" title="SDK（Software Development Kit）软件开发工具包"></a>SDK（Software Development Kit）软件开发工具包</h1><p>一般是一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的开发工具的集合<br>想想，最早接触到的SDK是在Cortex-M3项目开发中，也叫BSP（板级支持包），<br>这种SDK里大部分是芯片资源（硬件平台）的驱动和测试程序，少有软件框架和操作系统的源码<br><a id="more"></a></p>
<h1 id="uClinux"><a href="#uClinux" class="headerlink" title="uClinux"></a>uClinux</h1><p>在用的ATMEL9200和9G25的SDK包就是uClinux的风格，Ralink的Ralink_Ap_SoC_SDK也是uClinux的风格，<br>不用多说，直接上地址：<a href="http://www.uclinux.org/" target="_blank" rel="external">http://www.uclinux.org/</a></p>
<h1 id="Ralink平台"><a href="#Ralink平台" class="headerlink" title="Ralink平台"></a>Ralink平台</h1><p>在用他们的AP/Router SoC方案，比如RT3050/3052，对应SDK的版本是Ralink_Ap_SoC_SDK_3301.tar.bz2，应该是从uClinux基础上修改而来，<br>SDK的下载地址：<a href="http://www.tw-mcse.net/mcic/（重新更新下载地址），http://www.tw-mcse.net/mcic/Ralink_ApSoC_SDK_3301.tar.bz2" target="_blank" rel="external">http://www.tw-mcse.net/mcic/（重新更新下载地址），http://www.tw-mcse.net/mcic/Ralink_ApSoC_SDK_3301.tar.bz2</a><br>华硕的RT-N56U/RT-N65U有在google code上公开源码，地址：<a href="https://code.google.com/p/rt-n56u/" target="_blank" rel="external">https://code.google.com/p/rt-n56u/</a></p>
<h1 id="Atheros平台"><a href="#Atheros平台" class="headerlink" title="Atheros平台"></a>Atheros平台</h1><p>也在用他们的AP/Router SoC方案，比如AR9331/9344，说起Atheros不得不提TP-Link，TP-Link大量使用Atheros的方案，其中TL-WDR4300/4310就是用的AR9344，<br>TP-Link根据GPL协议开放了一些源码，地址：<a href="http://www.tp-link.com/en/support/gpl/" target="_blank" rel="external">http://www.tp-link.com/en/support/gpl/</a><br>比如下载TL-WDR4300的源码包（GPL_2.6.31），是在Atheros官方提供的SDK包（LSDK-9.2.0和LSDK-WLAN-9.2.0）基础上进行了修改，但是没有开放LSDK-WLAN-9.2.0，不过没关系，LSDK-WLAN-9.2.0在CSDN上可以下载，地址：<a href="http://download.csdn.net/detail/nolycjyf/3722308" target="_blank" rel="external">http://download.csdn.net/detail/nolycjyf/3722308</a><br>对于Atheros的WLAN驱动，另插一句，还记得madwifi、ath9k吗，没错，是同族的</p>
<h1 id="Realtek平台"><a href="#Realtek平台" class="headerlink" title="Realtek平台"></a>Realtek平台</h1><p>因为芯片封装上都有一只大螃蟹，所以大家喜欢叫他螃蟹，<br>在sourceforge上找到了它的一个SDK（RTL819x-SDK-v3.2.3），也是AP/Router SoC方案，感兴趣的可以下下来看看，<br>地址：<a href="http://sourceforge.net/projects/rtl819x/?source=directory" target="_blank" rel="external">http://sourceforge.net/projects/rtl819x/?source=directory</a></p>
<h1 id="Broadcom平台"><a href="#Broadcom平台" class="headerlink" title="Broadcom平台"></a>Broadcom平台</h1><p>想换成这个平台，这个平台的SDK资料相对少一点，但还是找到了一点踪迹，<br>华硕的RT-N16有在google code上开放源码，RT-N16用的就是Broadcom的BCM4716<br>地址：<a href="https://code.google.com/p/rt-n16/" target="_blank" rel="external">https://code.google.com/p/rt-n16/</a></p>
<p>遗憾是没有找到任何有关Marvell平台的SDK资料<br>找了这么多SDK源码包拿来干什么？<br>首先学习软件框架，Makefile会告诉你真相<br>然后就是Linux驱动，尤其WLAN/WIFI驱动</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接触的Linux SDK越来越多，整理整理，分享分享，不求系统全面，对您有帮助便足矣&lt;br&gt;文中大部分是与AP/Router SoC解决方案（单芯片WIFI 路由器解决方案）相关的Linux SDK&lt;/p&gt;
&lt;h1 id=&quot;SDK（Software-Development-Kit）软件开发工具包&quot;&gt;&lt;a href=&quot;#SDK（Software-Development-Kit）软件开发工具包&quot; class=&quot;headerlink&quot; title=&quot;SDK（Software Development Kit）软件开发工具包&quot;&gt;&lt;/a&gt;SDK（Software Development Kit）软件开发工具包&lt;/h1&gt;&lt;p&gt;一般是一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的开发工具的集合&lt;br&gt;想想，最早接触到的SDK是在Cortex-M3项目开发中，也叫BSP（板级支持包），&lt;br&gt;这种SDK里大部分是芯片资源（硬件平台）的驱动和测试程序，少有软件框架和操作系统的源码&lt;br&gt;
    
    </summary>
    
    
      <category term="SDK" scheme="http://cuiqingwei.github.io/tags/SDK/"/>
    
      <category term="路由器" scheme="http://cuiqingwei.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>骑行7：滴水湖2014</title>
    <link href="http://cuiqingwei.github.io/2014/06/08/2014-06-08-%E9%AA%91%E8%A1%8C7%EF%BC%9A%E6%BB%B4%E6%B0%B4%E6%B9%962014/"/>
    <id>http://cuiqingwei.github.io/2014/06/08/2014-06-08-骑行7：滴水湖2014/</id>
    <published>2014-06-07T17:14:00.000Z</published>
    <updated>2016-09-18T08:50:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/20130429/head.png" alt=""></p>
<h1 id="具体安排"><a href="#具体安排" class="headerlink" title="具体安排"></a>具体安排</h1><p><img src="/img/20140608/1.png" alt=""><br><strong>【活动时间】</strong>： 2014-06-08，周日<br><strong>【活动目的地】</strong>：滴水湖（南汇嘴观海公园）<br><strong>【集合地点】</strong>：上海闵行龙之梦影城、上海闵行区东川路地铁站<br><a id="more"></a><br><strong>【时间】</strong>：7:00开始汇合，8:50出发<br><strong>【返程解散点】</strong>：上海市闵行区东川路地铁站<br><strong>【返程到达解散点时间】</strong>：大约17点<br><strong>【骑行工具】</strong>：任何车型；任何品牌变速车（请保证车况良好） 非快拆车辆请自带扳手!<br><strong>【骑行线路（去程）】</strong>：<em>集合地点-&gt;沪闵公路à闵浦二桥-&gt;沪杭公路（S103）-&gt;大叶公路（S324）-&gt;东大公路（S324-&gt;滨果公路à临港大道-&gt;环湖西一路-&gt;目的地</em><br><strong>【骑行线路（返程）】</strong>：<em>临港大道-&gt;滨果公路-&gt;东大公路（S324）-&gt;大叶公路（S324）-&gt;沪杭公路（S103）-&gt;闵浦二桥-&gt;沪闵公路-&gt;返程解散点</em><br><strong>【全程单程距离】</strong>：谷歌测算83.3KM<br><strong>【休息段】</strong>：约每20公里休息一次<br><strong>【装备建议】</strong>：头盔必须<br><strong>【活动取消条件】</strong>：活动前一天晚上天气预报为准,如取消活动会在活动出发前2小时短息通知</p>
<p>#汇合安排<br><img src="/img/20140608/2.png" alt=""><br>7:00 徐超，始发<br>7:10 崔庆伟，七宝实验中学<br>7:20严铠锋，万兆家园<br>7:50 林建建、郑乐锋，闵行龙之梦影城十字路口<br>8:25 汪烁华，东川路地铁站(近沪闵路)<br>8:50 孙东亮，大叶公路沪杭公路交叉口(大叶公路右边)</p>
<h1 id="路线规划-链接"><a href="#路线规划-链接" class="headerlink" title="路线规划 链接"></a>路线规划 <a href="https://maps.google.com/maps?saddr=%E4%B8%8A%E6%B5%B7%E5%B8%82%E9%BE%99%E6%9F%8F%E4%B8%AD%E5%AD%A6,+%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E9%97%B5%E8%A1%8C%E5%8C%BA%E5%85%B0%E7%AB%B9%E8%B7%AF8%E5%8F%B7&amp;daddr=%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E5%8C%BA%E9%BE%99%E8%8C%97%E8%B7%AF%E4%B8%83%E5%AE%9D%E5%AE%9E%E9%AA%8C%E4%B8%AD%E5%AD%A6+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E5%8C%BA%E4%B8%83%E8%8E%98%E8%B7%AF%E4%B8%87%E5%85%86%E5%AE%B6%E5%9B%AD+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E9%BE%99%E4%B9%8B%E6%A2%A6%E5%BD%B1%E5%9F%8E+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E5%8C%BA%E4%B8%9C%E5%B7%9D%E8%B7%AF%E5%9C%B0%E9%93%81%E7%AB%99+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E5%A5%89%E8%B4%A4%E5%8C%BA%E6%B2%AA%E6%9D%AD%E5%85%AC%E8%B7%AF%E5%A4%A7%E5%8F%B6%E5%85%AC%E8%B7%AF%E7%AB%99+to:30.970446591026537,121.90078552812338+to:30.967392676524668,121.90163176506758+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E6%B5%A6%E4%B8%9C%E6%96%B0%E5%8C%BA%E7%8E%AF%E6%B9%96%E4%B8%9C%E4%B8%80%E8%B7%AF%E6%BB%B4%E6%B0%B4%E6%B9%96%E6%B0%B4%E4%B8%8A%E8%BF%90%E5%8A%A8%E4%BF%B1%E4%B9%90%E9%83%A8&amp;hl=zh-CN&amp;ie=UTF8&amp;ll=31.035873,121.629639&amp;spn=0.358303,0.676346&amp;sll=30.944489,121.863098&amp;sspn=0.089662,0.169086&amp;geocode=FQ-_2wEditU7ByEyLI6WZ53axCmB1TnsGGSyNTEyLI6WZ53axA%3BFdWB2wEd0SM8ByFWBSfLxRW7Uik5olk8cmSyNTFWBSfLxRW7Ug%3BFT5O2wEd_Ks7ByHFvAkDGVlTXCnplA-rWWGyNTHFvAkDGVlTXA%3BFT-s2gEdcBw8ByG_Y-hjBpiyEylZk1jVS2KyNTG_Y-hjBpiyEw%3BFdFM2QEdBrg8BykDWAWo9YiyNTGPPjgBgOhQPw%3BFdiA2AEd9A09ByHU61Afmx6ZqSkHgOfuVo-yNTHU61Afmx6ZqQ%3BFU6S2AEd8Q5EBynv2OPz1J2tNTFy558lN6oX2w%3BFWCG2AEdPxJEByknvMKF1Z2tNTFU1aQtsGkRiw%3BFXhb1wEdD9lEByF9cKaWFO0zvCm5URr7C3WtNTF9cKaWFO0zvA&amp;oq=%E6%BB%B4%E6%B0%B4%E6%B9%96&amp;dirflg=w&amp;mra=dpe&amp;mrsp=7&amp;sz=13&amp;via=6,7&amp;t=m&amp;z=11" target="_blank" rel="external">链接</a></h1><p><img src="/img/20140608/3.png" alt=""></p>
<h1 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h1><p>该活动为非商业盈利行为，纯属自发参与，凡报名参加者均视为具有完全民事行为能力人，若活动过程中出现意外，该活动组织人有义务帮助，无责任承担，不承担任何赔偿责任。请参与者酌情考虑！<br><img src="/img/20130429/foot.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20140608/4.jpeg" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze90x5L06/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze90x5L06/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/20130429/head.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;具体安排&quot;&gt;&lt;a href=&quot;#具体安排&quot; class=&quot;headerlink&quot; title=&quot;具体安排&quot;&gt;&lt;/a&gt;具体安排&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/20140608/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;【活动时间】&lt;/strong&gt;： 2014-06-08，周日&lt;br&gt;&lt;strong&gt;【活动目的地】&lt;/strong&gt;：滴水湖（南汇嘴观海公园）&lt;br&gt;&lt;strong&gt;【集合地点】&lt;/strong&gt;：上海闵行龙之梦影城、上海闵行区东川路地铁站&lt;br&gt;
    
    </summary>
    
    
      <category term="骑行" scheme="http://cuiqingwei.github.io/tags/%E9%AA%91%E8%A1%8C/"/>
    
      <category term="山地车" scheme="http://cuiqingwei.github.io/tags/%E5%B1%B1%E5%9C%B0%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>骑行6：上海南京路步行街</title>
    <link href="http://cuiqingwei.github.io/2014/05/21/2014-05-21-%E9%AA%91%E8%A1%8C6%EF%BC%9A%E4%B8%8A%E6%B5%B7%E5%8D%97%E4%BA%AC%E8%B7%AF%E6%AD%A5%E8%A1%8C%E8%A1%97/"/>
    <id>http://cuiqingwei.github.io/2014/05/21/2014-05-21-骑行6：上海南京路步行街/</id>
    <published>2014-05-20T16:57:00.000Z</published>
    <updated>2016-09-18T14:58:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/20130429/head.png" alt=""></p>
<h1 id="下班后同事一起夜骑上海南京路步行街，临时决定未策划线路"><a href="#下班后同事一起夜骑上海南京路步行街，临时决定未策划线路" class="headerlink" title="下班后同事一起夜骑上海南京路步行街，临时决定未策划线路"></a>下班后同事一起夜骑上海南京路步行街，临时决定未策划线路</h1><p><img src="/img/20130429/foot.png" alt=""><br><a id="more"></a></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20140521/1.jpeg" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze92cPbM5/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze92cPbM5/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/20130429/head.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;下班后同事一起夜骑上海南京路步行街，临时决定未策划线路&quot;&gt;&lt;a href=&quot;#下班后同事一起夜骑上海南京路步行街，临时决定未策划线路&quot; class=&quot;headerlink&quot; title=&quot;下班后同事一起夜骑上海南京路步行街，临时决定未策划线路&quot;&gt;&lt;/a&gt;下班后同事一起夜骑上海南京路步行街，临时决定未策划线路&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/20130429/foot.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="骑行" scheme="http://cuiqingwei.github.io/tags/%E9%AA%91%E8%A1%8C/"/>
    
      <category term="山地车" scheme="http://cuiqingwei.github.io/tags/%E5%B1%B1%E5%9C%B0%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>网络命令</title>
    <link href="http://cuiqingwei.github.io/2014/04/17/2014-04-17-%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/"/>
    <id>http://cuiqingwei.github.io/2014/04/17/2014-04-17-网络命令/</id>
    <published>2014-04-17T15:34:00.000Z</published>
    <updated>2016-09-19T09:41:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h3><p>这个应该大家都会用的吧，最主要的就是检测目标主机是不是可连通。Ping程序实际就是发送一个ICMP回显请求报文给目的主机，并等待回显的ICMP应答。然后打印出回显的报文。Ping不通一个地址，并不一定表示这个IP不存在或者没有连接在网络上，因为对方主机可能做了限制，比如安装了防火墙，因此Ping不通并不表示不能使用FTP或者TELNET连接。<br><a id="more"></a><br>PING得到的结果包括字节数、反应时间、以及生存时间。Ping程序通过在ICMP报文数据中存放发送请求的时间来计算返回时间。当应答返回时，根据现在时间减去报文中存放的发送时间就得到反应时间了。生存时间（TTL），本来就存放在IP数据报的头部，直接就能够获取。<br>上次和Dancefire说天网防火墙的时候，现在不是天网能识别哪些程序在进行网络连接么，结果试验用Ping的时候，天网就不知道了，呵呵，反正是没有警告。那ICMP木马天网能防么？</p>
<h3 id="TracertS"><a href="#TracertS" class="headerlink" title="TracertS"></a>TracertS</h3><p>一个探测路由的程序，可以让我们看见IP数据报到达目的地经过的路由。<br>Tracert利用ICMP数据报和IP数据报头部中的TTL值。TTL（Time To Live）是一个IP数据报的生存时间，当每个IP数据报经过路由器的时候都回把TTL值减去1或者减去在路由器中停留的时间，但是大多数数据报在路由器中停留的时间都小于1秒种，因此实际上就是在TTL值减去了1。这样，TTL值就相当于一个路由器的计数器。<br>当路由器接收到一个TTL为0或者1的IP数据报的时候，路由器就不再转发这个数据了，而直接丢弃，并且发送一个ICMP“超时”信息给源主机。Tracert程序的关键就是这个回显的ICMP报文的IP报头的信源地址就是这个路由器的IP地址。同时，如果到达了目的主机，我们并不能知道，于是，Tracert还同时发送一个UDP信息给目的主机，并且选择一个很大的值作为UDP的端口，使主机的任何一个应用程序都不使用这个端口。所以，当达到目的主机的时候，UDP模块就产生一个“端口不可到达”的错误，这样就能判断是否是到达目的地了。<br>有说法是利用ping得到的TTL值来判断主机类型，这种办法可以大概地用来判断，有人问为什么一般得到的都不是标准的TTL值。这个就是因为ICMP数据包走的路由器线路的原因，所以，用ping 和 tracert 一起来用更容易判断主机类型（不过并不一定两次走的路线都一样，所以，还是个大概值，不过更接近点，而且主机的默认TTL值是可以改变的）。</p>
<p><strong>ping</strong> 211.95.60.151 -l 1200 -t  (带包ping)<br><strong>tracert</strong> 211.95.60.151</p>
<p><a href="http://ping.eu/" target="_blank" rel="external">http://ping.eu/</a><br><a href="http://www.21andy.com/new/20090427/1168.html" target="_blank" rel="external">http://www.21andy.com/new/20090427/1168.html</a></p>
<p><a href="http://www.speedtest.net/" target="_blank" rel="external">http://www.speedtest.net/</a><br><a href="http://www.ip138.com/" target="_blank" rel="external">http://www.ip138.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Ping&quot;&gt;&lt;a href=&quot;#Ping&quot; class=&quot;headerlink&quot; title=&quot;Ping&quot;&gt;&lt;/a&gt;Ping&lt;/h3&gt;&lt;p&gt;这个应该大家都会用的吧，最主要的就是检测目标主机是不是可连通。Ping程序实际就是发送一个ICMP回显请求报文给目的主机，并等待回显的ICMP应答。然后打印出回显的报文。Ping不通一个地址，并不一定表示这个IP不存在或者没有连接在网络上，因为对方主机可能做了限制，比如安装了防火墙，因此Ping不通并不表示不能使用FTP或者TELNET连接。&lt;br&gt;
    
    </summary>
    
    
      <category term="网络命令" scheme="http://cuiqingwei.github.io/tags/%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
