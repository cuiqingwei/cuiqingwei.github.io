<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iZheteng</title>
  <subtitle>Enjoy work, Enjoy life!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cuiqingwei.github.io/"/>
  <updated>2016-10-09T04:51:46.000Z</updated>
  <id>http://cuiqingwei.github.io/</id>
  
  <author>
    <name>cuiqingwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>OpenWRT经典网站</title>
    <link href="http://cuiqingwei.github.io/2016/10/08/2016-10-08-OpenWRT%E7%BB%8F%E5%85%B8%E7%BD%91%E7%AB%99/"/>
    <id>http://cuiqingwei.github.io/2016/10/08/2016-10-08-OpenWRT经典网站/</id>
    <published>2016-10-08T09:23:37.000Z</published>
    <updated>2016-10-09T04:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h1><p><a href="https://openwrt.org/" target="_blank" rel="external">https://openwrt.org/</a></p>
<ul>
<li>Releases<br><a href="https://downloads.openwrt.org/" target="_blank" rel="external">https://downloads.openwrt.org/</a></li>
<li>环境搭建及下载<br><a href="https://wiki.openwrt.org/doc/howto/buildroot.exigence" target="_blank" rel="external">https://wiki.openwrt.org/doc/howto/buildroot.exigence</a><br><a href="https://wiki.openwrt.org/zh-cn/doc/howto/buildroot.exigence" target="_blank" rel="external">https://wiki.openwrt.org/zh-cn/doc/howto/buildroot.exigence</a></li>
<li>使用说明<br><a href="https://wiki.openwrt.org/doc/howto/build" target="_blank" rel="external">https://wiki.openwrt.org/doc/howto/build</a><br><a href="https://wiki.openwrt.org/zh-cn/doc/howto/build" target="_blank" rel="external">https://wiki.openwrt.org/zh-cn/doc/howto/build</a></li>
<li>硬件支持列表<br><a href="https://wiki.openwrt.org/toh/start" target="_blank" rel="external">https://wiki.openwrt.org/toh/start</a><a id="more"></a>
<h1 id="OpenWRT中文网"><a href="#OpenWRT中文网" class="headerlink" title="OpenWRT中文网"></a>OpenWRT中文网</h1><a href="http://www.openwrt.org.cn/" target="_blank" rel="external">http://www.openwrt.org.cn/</a></li>
</ul>
<ul>
<li>网站提供的常用小工具，下载使用起来比较方方便<br><a href="http://downloads.openwrt.org.cn/software/" target="_blank" rel="external">http://downloads.openwrt.org.cn/software/</a></li>
</ul>
<h1 id="恩山无线论坛OpenWRT专版"><a href="#恩山无线论坛OpenWRT专版" class="headerlink" title="恩山无线论坛OpenWRT专版"></a>恩山无线论坛OpenWRT专版</h1><p><a href="http://www.right.com.cn/forum/forum-72-1.html" target="_blank" rel="external">http://www.right.com.cn/forum/forum-72-1.html</a></p>
<h1 id="openwrt-io"><a href="#openwrt-io" class="headerlink" title="openwrt.io"></a>openwrt.io</h1><p><a href="http://openwrt.io/" target="_blank" rel="external">http://openwrt.io/</a></p>
<ol>
<li>此站完全开源，放在github.com上，大家共同修改，通过travis-ci.org持续集成自动构建部署到七牛云存储上，无需服务器。</li>
<li>网站内容采用markdown，通过mkdocs生成HTML，是一个纯静态的网站。</li>
<li>为提高国内下载速度，OpenWrt SDK、opkg软件源等文件放在七牛云储存国内CDN上。</li>
</ol>
<h1 id="dl下载网"><a href="#dl下载网" class="headerlink" title="dl下载网"></a>dl下载网</h1><p><a href="http://www.openwrtdl.com/" target="_blank" rel="external">http://www.openwrtdl.com/</a><br>在编译OpenWrt最新的trunk时，碰到一个Git源码取不下来（你懂得，被墙了！）<br>该站点作者将openwrt官网上的软件都下载下来了，并在本地建了服务器，然后与共享给大家<br>另外，还有<br><a href="http://193.87.95.148/openwrt/raspi/trunk/dl/" target="_blank" rel="external">http://193.87.95.148/openwrt/raspi/trunk/dl/</a><br><strong>当你make过程出现Download failed或是404 Not Found时，到这些网站Ctrl+F找到你需要的，wget到dl目录即可继续make</strong></p>
<h1 id="夢想家"><a href="#夢想家" class="headerlink" title="夢想家"></a>夢想家</h1><p><a href="https://datahunter.org/wrt" target="_blank" rel="external">https://datahunter.org/wrt</a></p>
<h1 id="森亮号航海见识"><a href="#森亮号航海见识" class="headerlink" title="森亮号航海见识"></a>森亮号航海见识</h1><p><a href="http://see.sl088.com/wiki/%E5%88%86%E7%B1%BB:Openwrt%E7%BC%96%E8%AF%91" target="_blank" rel="external">http://see.sl088.com/wiki/%E5%88%86%E7%B1%BB:Openwrt%E7%BC%96%E8%AF%91</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;官方网站&quot;&gt;&lt;a href=&quot;#官方网站&quot; class=&quot;headerlink&quot; title=&quot;官方网站&quot;&gt;&lt;/a&gt;官方网站&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://openwrt.org/&quot;&gt;https://openwrt.org/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Releases&lt;br&gt;&lt;a href=&quot;https://downloads.openwrt.org/&quot;&gt;https://downloads.openwrt.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;环境搭建及下载&lt;br&gt;&lt;a href=&quot;https://wiki.openwrt.org/doc/howto/buildroot.exigence&quot;&gt;https://wiki.openwrt.org/doc/howto/buildroot.exigence&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://wiki.openwrt.org/zh-cn/doc/howto/buildroot.exigence&quot;&gt;https://wiki.openwrt.org/zh-cn/doc/howto/buildroot.exigence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用说明&lt;br&gt;&lt;a href=&quot;https://wiki.openwrt.org/doc/howto/build&quot;&gt;https://wiki.openwrt.org/doc/howto/build&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://wiki.openwrt.org/zh-cn/doc/howto/build&quot;&gt;https://wiki.openwrt.org/zh-cn/doc/howto/build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;硬件支持列表&lt;br&gt;&lt;a href=&quot;https://wiki.openwrt.org/toh/start&quot;&gt;https://wiki.openwrt.org/toh/start&lt;/a&gt;
    
    </summary>
    
    
      <category term="OpenWRT" scheme="http://cuiqingwei.github.io/tags/OpenWRT/"/>
    
      <category term="开源硬件" scheme="http://cuiqingwei.github.io/tags/%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6/"/>
    
      <category term="经典网站" scheme="http://cuiqingwei.github.io/tags/%E7%BB%8F%E5%85%B8%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT开源硬件汇总</title>
    <link href="http://cuiqingwei.github.io/2016/10/08/2016-10-08-OpenWRT%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6%E6%B1%87%E6%80%BB/"/>
    <id>http://cuiqingwei.github.io/2016/10/08/2016-10-08-OpenWRT开源硬件汇总/</id>
    <published>2016-10-08T09:23:37.000Z</published>
    <updated>2016-10-08T12:15:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Arduino-Yun"><a href="#Arduino-Yun" class="headerlink" title="Arduino Yún"></a>Arduino Yún</h1><p><a href="https://www.arduino.cc/en/Main/ArduinoBoardYun" target="_blank" rel="external">https://www.arduino.cc/en/Main/ArduinoBoardYun</a><br>cpu: Atheros AR9331 @400MHZ (含ATmega32U4)<br>ram:  64MB DDR2<br>flash: 16MB<br>wifi: 150Mbit Wi-Fi 1T1R 2.4 GHz</p>
<h1 id="LinkIt-Smart-7688-Duo"><a href="#LinkIt-Smart-7688-Duo" class="headerlink" title="LinkIt Smart 7688 Duo"></a>LinkIt Smart 7688 Duo</h1><p><a href="https://www.seeedstudio.com/LinkIt-Smart-7688-Duo-p-2574.html" target="_blank" rel="external">https://www.seeedstudio.com/LinkIt-Smart-7688-Duo-p-2574.html</a><br>cpu: MT7688 @580MHZ (含ATmega32U4)<br>ram:  128MB DDR2<br>flash: 32MB<br><a id="more"></a></p>
<h1 id="IntoRobot-Atom"><a href="#IntoRobot-Atom" class="headerlink" title="IntoRobot Atom"></a>IntoRobot Atom</h1><p><a href="http://shop.intorobot.com/index.php?route=product/product&amp;product_id=43" target="_blank" rel="external">http://shop.intorobot.com/index.php?route=product/product&amp;product_id=43</a><br>cpu: MT7620N @580MHZ (含STM32F103)<br>ram:  512Mbit DDR2<br>flash: 128Mbit</p>
<h1 id="WRTnode"><a href="#WRTnode" class="headerlink" title="WRTnode"></a>WRTnode</h1><p><a href="http://www.wrtnode.cc/index.html" target="_blank" rel="external">http://www.wrtnode.cc/index.html</a><br>-WRTnode1<br>cpu: MT7620N @580MHZ<br>ram:  512Mbit DDR2<br>flash: 128Mbit<br>wifi: 300Mbit Wi-Fi 2T2R 802.11n 2.4 GHz<br>-WRTnode2R<br>cpu: MT7688AN @580MHZ (含STM32F103)<br>ram:  256MB DDR2<br>flash: 32MB<br>-WRTnode2P<br>cpu: MT7628 @580MHZ<br>ram:  128MB DDR2<br>flash: 16MB<br>-WRTnodeHI<br>cpu: ARM Cortex A7 @600MHZ 支持Neon加速，集成FPU<br>ram:  512MB DDR3<br>flash: 32MB</p>
<h1 id="MMZ558"><a href="#MMZ558" class="headerlink" title="MMZ558"></a>MMZ558</h1><p><a href="http://www.compex.com.sg/product/mmz558/" target="_blank" rel="external">http://www.compex.com.sg/product/mmz558/</a><br>cpu:   QCA9558 @700MHZ<br>ram:  128MB DDR2<br>flash: 16MB</p>
<h1 id="WPJ428"><a href="#WPJ428" class="headerlink" title="WPJ428"></a>WPJ428</h1><p><a href="http://www.compex.com.sg/product/wpj428/" target="_blank" rel="external">http://www.compex.com.sg/product/wpj428/</a><br>cpu:   IPQ4028 ARM V7 @710MHZ<br>ram:  256MB DDR2<br>flash: 16MB<br>NAND flasn: 128MB</p>
<h1 id="AmazingBOX"><a href="#AmazingBOX" class="headerlink" title="AmazingBOX"></a>AmazingBOX</h1><p><a href="http://www.a-box.com.cn/product.php" target="_blank" rel="external">http://www.a-box.com.cn/product.php</a><br>cpu:   Marvell Armada370 @1.2GHZ 含FPU，双流水线技术<br>ram:  1GB DDR3<br>flash: 1GB</p>
<h1 id="RTNAS-V3"><a href="#RTNAS-V3" class="headerlink" title="RTNAS V3"></a>RTNAS V3</h1><p><a href="http://www.openwrt.org.cn/bbs/thread-15472-1-1.html" target="_blank" rel="external">http://www.openwrt.org.cn/bbs/thread-15472-1-1.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Arduino-Yun&quot;&gt;&lt;a href=&quot;#Arduino-Yun&quot; class=&quot;headerlink&quot; title=&quot;Arduino Yún&quot;&gt;&lt;/a&gt;Arduino Yún&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.arduino.cc/en/Main/ArduinoBoardYun&quot;&gt;https://www.arduino.cc/en/Main/ArduinoBoardYun&lt;/a&gt;&lt;br&gt;cpu: Atheros AR9331 @400MHZ (含ATmega32U4)&lt;br&gt;ram:  64MB DDR2&lt;br&gt;flash: 16MB&lt;br&gt;wifi: 150Mbit Wi-Fi 1T1R 2.4 GHz&lt;/p&gt;
&lt;h1 id=&quot;LinkIt-Smart-7688-Duo&quot;&gt;&lt;a href=&quot;#LinkIt-Smart-7688-Duo&quot; class=&quot;headerlink&quot; title=&quot;LinkIt Smart 7688 Duo&quot;&gt;&lt;/a&gt;LinkIt Smart 7688 Duo&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.seeedstudio.com/LinkIt-Smart-7688-Duo-p-2574.html&quot;&gt;https://www.seeedstudio.com/LinkIt-Smart-7688-Duo-p-2574.html&lt;/a&gt;&lt;br&gt;cpu: MT7688 @580MHZ (含ATmega32U4)&lt;br&gt;ram:  128MB DDR2&lt;br&gt;flash: 32MB&lt;br&gt;
    
    </summary>
    
    
      <category term="OpenWRT" scheme="http://cuiqingwei.github.io/tags/OpenWRT/"/>
    
      <category term="开源硬件" scheme="http://cuiqingwei.github.io/tags/%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>IoT知识点汇总</title>
    <link href="http://cuiqingwei.github.io/2016/05/13/2016-05-13-IoT%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
    <id>http://cuiqingwei.github.io/2016/05/13/2016-05-13-IoT知识点汇总/</id>
    <published>2016-05-13T09:23:37.000Z</published>
    <updated>2016-09-21T13:46:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IoT-Struct"><a href="#IoT-Struct" class="headerlink" title="IoT Struct"></a>IoT Struct</h2><p><div align="center"><br><img src="/img/20160513/struct.jpg" alt="IoT Struct"><br></div><br><a id="more"></a></p>
<h2 id="IoT-Protocol"><a href="#IoT-Protocol" class="headerlink" title="IoT Protocol"></a>IoT Protocol</h2><table>
<thead>
<tr>
<th>Protocol</th>
<th>CoAP</th>
<th>XMPP</th>
<th>RESTful HTTP</th>
<th>MQTT</th>
</tr>
</thead>
<tbody>
<tr>
<td>Transport</td>
<td>UDP</td>
<td>TCP</td>
<td>TCP</td>
<td>TCP</td>
</tr>
<tr>
<td>Messaging</td>
<td>Request/Response</td>
<td>Publish/Subscribe Request/Response</td>
<td>Request/Response</td>
<td>Publish/Subscribe Request/Response</td>
</tr>
<tr>
<td>2G, 3G, 4G Suitability (1000s nodes)</td>
<td>Excellent</td>
<td>Excellent</td>
<td>Excellent</td>
<td>Excellent</td>
</tr>
<tr>
<td>LLN Suitability (1000s nodes)</td>
<td>Excellent</td>
<td>Fair</td>
<td>Fair</td>
<td>Fair</td>
</tr>
<tr>
<td>Compute Resources</td>
<td>10Ks RAM/Flash</td>
<td>10Ks RAM/Flash</td>
<td>10Ks RAM/Flash</td>
<td>10Ks RAM/Flash</td>
</tr>
<tr>
<td>Success Storied</td>
<td>Utility Field Area Networks</td>
<td>Remote management of consumer white goods</td>
<td>Smart Energy Profile 2 (premise energy management/home services)</td>
<td>Extending enterprise messaging into IoT applications</td>
</tr>
</tbody>
</table>
<h3 id="XMPP"><a href="#XMPP" class="headerlink" title="XMPP"></a>XMPP</h3><p>XMPP是一种基于标准通用标记语言的子集XML的协议，它继承了在XML环境中灵活的发展性。因此，基于XMPP的应用具有超强的可扩展性。经过扩展以后的XMPP可以通过发送扩展的信息来处理用户的需求，以及在XMPP的顶端建立如内容发布系统和基于地址的服务等应用程 序。而且，XMPP包含了针对服务器端的软件协议，使之能与另一个进行通话，这使得开发者更容易建立客户应用程序或给一个配好系统添加功能。</p>
<h3 id="MQTT"><a href="#MQTT" class="headerlink" title="MQTT"></a>MQTT</h3><p><div align="center"><br><img src="/img/20160513/MQTT.png" alt="mqtt"><br></div><br>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。</p>
<h3 id="CoAP"><a href="#CoAP" class="headerlink" title="CoAP"></a>CoAP</h3><p><div align="center"><br><img src="/img/20160513/coap.jpg" alt="coap"><br></div><br>CoAP是受限制的应用协议(Constrained Application Protocol)的代名词。在最近几年的时间中，专家们预测会有更多的设备相互连接，而这些设备的数量将远超人类的数量。在这种大背景下，物联网和M2M技术应运而生。虽然对人而言，连接入互联网显得方便容易，但是对于那些微型设备而言接入互联网非常困难。在当前由PC机组成的世界，信息交换是通过TCP和应用层协议HTTP实现的。但是对于小型设备而言，实现TCP和HTTP协议显然是一个过分的要求。为了让小设备可以接入互联网，CoAP协议被设计出来。CoAP是一种应用层协议，它运行于UDP协议之上而不是像HTTP那样运行于TCP之上。CoAP协议非常的小巧，最小的数据包仅为4字节。</p>
<h3 id="RESTful-HTTP"><a href="#RESTful-HTTP" class="headerlink" title="RESTful HTTP"></a>RESTful HTTP</h3><p>REST 指的是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计就是 RESTful。</p>
<p>Web 应用程序最重要的 REST 原则是，客户端和服务器之间的交互在请求之间是无状态的。从客户端到服务器的每个请求都必须包含理解请求所必需的信息。如果服务器在请求之间的任何时间点重启，客户端不会得到通知。此外，无状态请求可以由任何可用服务器回答，这十分适合云计算之类的环境。客户端可以缓存数据以改进性能。</p>
<h3 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h3><p><div align="center"><br><img src="/img/20160513/thread.jpg" alt="thread"><br></div><br>Thread是一种基于简化版IPv6的网状网络协议，该协议由行业领先的多家技术公司联合开发，旨在实现家庭中各种产品间的互联，以及与互联网和云的连接。Thread易于安装、高度安全，并且可扩展到数百台设备。Thread基于低成本、低功耗的802.15.4芯片组开发。目前正在使用的大量产品，只需一次简单的软件升级，便可支持Thread。</p>
<h2 id="相关通讯技术"><a href="#相关通讯技术" class="headerlink" title="相关通讯技术"></a>相关通讯技术</h2><h3 id="Z-Wave"><a href="#Z-Wave" class="headerlink" title="Z-Wave"></a>Z-Wave</h3><blockquote>
<p>Z-Wave是一种新兴的基于射频的、低成本、低功耗、高可靠、适于网络的短距离无线通信技术。工作频带为908.42MHz(美国)~868.42MHz(欧洲)，采用FSK(BFSK/GFSK)调制方式，数据传输速率为9.6 kbps，信号的有效覆盖范围在室内是30m，室外可超过100m，适合于窄带宽应用场合。随着通信距离的增大，设备的复杂度、功耗以及系统成本都在增加，相对于现有的各种无线通信技术，Z-Wave技术将是最低功耗和最低成本的技术，有力地推动着低速率无线个人区域网。</p>
</blockquote>
<h3 id="Zigbee"><a href="#Zigbee" class="headerlink" title="Zigbee"></a>Zigbee</h3><blockquote>
<p>ZigBee是基于IEEE802.15.4标准的低功耗局域网协议。根据国际标准规定，ZigBee技术是一种短距离、低功耗的无线通信技术。这一名称（又称紫蜂协议）来源于蜜蜂的八字舞，由于蜜蜂(bee)是靠飞翔和“嗡嗡”(zig)地抖动翅膀的“舞蹈”来与同伴传递花粉所在方位信息，也就是说蜜蜂依靠这样的方式构成了群体中的通信网络。其特点是近距离、低复杂度、自组织、低功耗、低数据速率。主要适合用于自动控制和远程控制领域，可以嵌入各种设备。简而言之，ZigBee就是一种便宜的，低功耗的近距离无线组网通讯技术。</p>
</blockquote>
<h3 id="6LoWPAN"><a href="#6LoWPAN" class="headerlink" title="6LoWPAN"></a>6LoWPAN</h3><blockquote>
<p>IETF 6LoWPAN取得的突破是得到一种非常紧凑、高效的IP实现，消除了以前造成各种专门标准和专有协议的因素。这在工业协议（BACNet、LonWorks、通用工业协议和监控与数据采集）领域具有特别的价值。这些协议最初开发是为了提供特殊的行业特有的总线和链路(从控制器区域网总线到AC电源线)上的互操作性。</p>
</blockquote>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><blockquote>
<p>UDP协议的全称是用户数据报协议，在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。在OSI模型中，在第四层——传输层，处于IP协议的上一层。UDP有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。UDP用来支持那些需要在计算机之间传输数据的网络应用。包括网络视频会议系统在内的众多的客户/服务器模式的网络应用都需要使用UDP协议。UDP协议从问世至今已经被使用了很多年，虽然其最初的光彩已经被一些类似协议所掩盖，但是即使是在今天UDP仍然不失为一项非常实用和可行的网络传输层协议。</p>
</blockquote>
<h3 id="uIP"><a href="#uIP" class="headerlink" title="uIP"></a>uIP</h3><blockquote>
<p>uIP 由瑞典计算机科学学院(网络嵌入式系统小组)的Adam Dunkels 开发。其源代码由C 语言编写，并完全公开。</p>
<p>uIP 协议栈去掉了完整的 TCP/IP 中不常用的功能，简化了通讯流程，但保留了网络通信必须使用的协议，设计重点放在了<br>IP/TCP/ICMP/UDP/ARP 这些网络层和传输层协议上，保证了其代码的通用性和结构的稳定性。</p>
</blockquote>
<h3 id="DTLS"><a href="#DTLS" class="headerlink" title="DTLS"></a>DTLS</h3><blockquote>
<p>DTLS(Datagram Transport Layer Security)即数据包传输层安全性协议。TLS不能用来保证UDP上传输的数据的安全，因此Datagram TLS试图在现存的TLS协议架构上提出扩展，使之支持UDP，即成为TLS的一个支持数据报传输的版本。DTLS 1.0基于TLS 1.1, DTLS 1.2基于TLS 1.2。</p>
</blockquote>
<h3 id="NFC"><a href="#NFC" class="headerlink" title="NFC"></a>NFC</h3><blockquote>
<p>NFC近场通信技术是由非接触式射频识别（RFID）及互联互通技术整合演变而来，在单一芯片上结合感应式读卡器、感应式卡片和点对点的功能，能在短距离内与兼容设备进行识别和数据交换。工作频率为13.56MHz.但是使用这种手机支付方案的用户必须更换特制的手机。目前这项技术在日韩被广泛应用。手机用户凭着配置了支付功能的手机就可以行遍全国：他们的手机可以用作机场登机验证、大厦的门禁钥匙、交通一卡通、信用卡、支付卡等等。</p>
</blockquote>
<h3 id="WiFi"><a href="#WiFi" class="headerlink" title="WiFi"></a>WiFi</h3><blockquote>
<p>Wi-Fi是一种可以将个人电脑、手持设备（如pad、手机）等终端以无线方式互相连接的技术，事实上它是一个高频无线电信号。无线保真是一个无线网络通信技术的品牌，由Wi-Fi联盟所持有。目的是改善基于IEEE 802.11标准的无线网路产品之间的互通性。有人把使用IEEE 802.11系列协议的局域网就称为无线保真。甚至把无线保真等同于无线网际网路（Wi-Fi是WLAN的重要组成部分）</p>
</blockquote>
<h3 id="Websocket"><a href="#Websocket" class="headerlink" title="Websocket"></a>Websocket</h3><blockquote>
<p>WebSocket protocol 是HTML5一种新的协议。它是实现了浏览器与服务器全双工通信(full-duplex)。</p>
</blockquote>
<h3 id="SOAP"><a href="#SOAP" class="headerlink" title="SOAP"></a>SOAP</h3><blockquote>
<p>简单对象访问协议是交换数据的一种协议规范，是一种轻量的、简单的、基于XML（标准通用标记语言下的一个子集）的协议，它被设计成在WEB上交换结构化的和固化的信息。</p>
</blockquote>
<h2 id="物联网相关平台"><a href="#物联网相关平台" class="headerlink" title="物联网相关平台"></a>物联网相关平台</h2><h3 id="Yeelink"><a href="#Yeelink" class="headerlink" title="Yeelink"></a>Yeelink</h3><p>主页: <a href="http://www.yeelink.net/" target="_blank" rel="external">http://www.yeelink.net/</a></p>
<h3 id="SiteWhere"><a href="#SiteWhere" class="headerlink" title="SiteWhere"></a>SiteWhere</h3><blockquote>
<p>The Open Platform for the Internet of Things ™</p>
<p>这个项目提供了一个完整的平台，来管理物联网设备、收集数据并用外部系统进行数据整合。SiteWhere发行版本可以下载或在亚马逊云中使用。它还集成了多个大数据工具，包括MongoDB和ApacheHBase。</p>
</blockquote>
<p>主页: <a href="http://www.sitewhere.org/" target="_blank" rel="external">http://www.sitewhere.org/</a></p>
<h3 id="DeviceHive"><a href="#DeviceHive" class="headerlink" title="DeviceHive"></a>DeviceHive</h3><blockquote>
<p>该项目提供一个支持连接设备到物联网的机器对机器通信框架。它包括支持创建网络易于使用基于web的管理软件、应用安全规则和监控设备。该网站提供内置有DeviceHub的样本项目，而且它也有一个“游乐场”部分，允许用户使用DeviceHub在线去看它是如何工作的。</p>
</blockquote>
<p>主页: <a href="http://www.devicehive.com/" target="_blank" rel="external">http://www.devicehive.com/</a></p>
<h3 id="Devicehub-net"><a href="#Devicehub-net" class="headerlink" title="Devicehub.net"></a>Devicehub.net</h3><blockquote>
<p>Devicehub.net描述自己为“物联网的开源支柱”。它是一个基于云的服务，存储物联网相关的数据，提供数据的可视化并允许用户在网页上控制物联网设备。开发者使用该服务创建跟踪健康信息的应用程序，监视孩子的位置，自动化家电，跟踪车辆数据，监测天气等等。</p>
<p>主页: <a href="http://devicehub.net/" target="_blank" rel="external">http://devicehub.net/</a></p>
</blockquote>
<h3 id="IoT-Toolkit"><a href="#IoT-Toolkit" class="headerlink" title="IoT Toolkit"></a>IoT Toolkit</h3><blockquote>
<p>这个项目背后的组织正使用各种工具工作，来集成多个物联网相关的传感器网络和协议。虽然主要的项目时一个智能对象应用程序，但该组织也工作在一个HTTP对Coap的情景下，一个带有嵌入式软件代理的应用程序框架等等。在硅谷，他们也发起了一个“遇见”组织，面向对物联网开发有情趣的人。</p>
</blockquote>
<p>主页: <a href="http://iot-toolkit.com/" target="_blank" rel="external">http://iot-toolkit.com/</a></p>
<h3 id="Mango-芒果"><a href="#Mango-芒果" class="headerlink" title="Mango(芒果)"></a>Mango(芒果)</h3><blockquote>
<p>“芒果”自称是“世界上最流行的开源的机器对机器软件”。基于网络的它支持多个平台。它的主要功能包括支持多协议和数据库、元点、用户自定义事件、导入/导出等等。</p>
</blockquote>
<h3 id="Nimbits"><a href="#Nimbits" class="headerlink" title="Nimbits"></a>Nimbits</h3><blockquote>
<p>Nimbits可以存储和处理特定的数据类型，数据可以是时间标记的或地理标记的。作为服务的公用平台是可用的，或者你也可以下载这个软件并部署它到谷歌应用引擎、或亚马逊EC2上的J2EE服务器上、或一个树莓派上。它支持多种编程语言，包括Arduino、JavaScript、HTML或Nimbits.io Java库。</p>
</blockquote>
<h3 id="OpenRemote"><a href="#OpenRemote" class="headerlink" title="OpenRemote"></a>OpenRemote</h3><blockquote>
<p>OpenRemote为基于家居的爱好者、集成商、分销商和制造商提供了四种不同的集成工具。它支持十几种不同的现有协议，允许用户创建几乎任何类型的智能设备（他们能够想到和使用任何支持java的设备来控制它）。该平台是开源的，但在设计和产品开发过程中，该公司也出售各种支持、电子书等工具来进行帮助。</p>
</blockquote>
<h3 id="ThingSpeak"><a href="#ThingSpeak" class="headerlink" title="ThingSpeak"></a>ThingSpeak</h3><blockquote>
<p>ThingSpeak可以处理HTTP请求，并存储和处理数据。这个开放数据平台的主要功能包括开放应用程序、实时数据收集、地理位置数据、数据处理和可视化、设备状态信息和插件。它可以集成多个硬件和软件平台，包括Arduino、树莓派、ioBridge/RealTime.io、Electic lmp、移动和网络应用、社会网络和MATLAB数据分析。除了开源版本，还提供托管服务。</p>
</blockquote>
<h2 id="物联网相关嵌入式操作系统"><a href="#物联网相关嵌入式操作系统" class="headerlink" title="物联网相关嵌入式操作系统"></a>物联网相关嵌入式操作系统</h2><blockquote>
<p>实时系统（Real-time operating system,RTOS）的正确性不仅依赖系统计算的逻辑结果，还依赖于产生这个结果的时间。实时系统能够在指定或者确定的时间内完成系统功能和外部或内部、同步或异步时间做出响应的系统。因此实时系统应该在事先先定义的时间范围内识别和处理离散事件的能力；系统能够处理和储存控制系统所需要的大量数据。</p>
</blockquote>
<h3 id="Contiki"><a href="#Contiki" class="headerlink" title="Contiki"></a>Contiki</h3><p><strong>相关支持</strong>: <code>CoAP</code>,<code>TCP/IP网络支持</code>,<code>RPL路由</code>,<code>6Lowpan 报文压缩</code>,<code>Rime无线协议栈</code></p>
<blockquote>
<p>Contiki是一个适用于有内存的嵌入式系统的开源的、高可移植的、支持网络的多任务操作系统。包括一个多任务核心、TCP/IP 堆栈、程序集以及低能耗的无线通讯堆栈。Contiki 采用 C 语言开发的非常小型的嵌入式操作系统，运行只需要几K的内存。</p>
</blockquote>
<p>Contiki 是一个小型的，开源的，极易移植的多任务电脑操作系统。它专门设计以适用于一系列的内存受限的网络系统，包括从8位电脑到微型控制器的嵌入系统。它的名字来自于托尔·海尔达尔的康提基号。</p>
<p>Contiki只需几kilobyte的代码和几百字节的内存就能提供多任务环境和内建TCP/IP支持。</p>
<h3 id="LwIP"><a href="#LwIP" class="headerlink" title="LwIP"></a>LwIP</h3><blockquote>
<p>LwIP是Light Weight (轻型)IP协议，有无操作系统的支持都可以运行。LwIP实现的重点是在保持TCP协议主要功能的基础上减少对RAM 的占用，它只需十几KB的RAM和40K左右的ROM就可以运行，这使LwIP协议栈适合在低端的嵌入式系统中使用。</p>
<p>lwIP协议栈主要关注的是怎么样减少内存的使用和代码的大小，这样就可以让lwIP适用于资源有限的小型平台例如嵌入式系统。为了简化处理过程和内存要求，lwIP对API进行了裁减，可以不需要复制一些数据。</p>
</blockquote>
<h3 id="FreeRTOS"><a href="#FreeRTOS" class="headerlink" title="FreeRTOS"></a>FreeRTOS</h3><blockquote>
<p>FreeRTOS是一个迷你操作系统内核的小型嵌入式系统。作为一个轻量级的操作系统，功能包括：任务管理、时间管理、信号量、消息队列、内存管理、记录功能等，可基本满足较小系统的需要。</p>
<p>由于RTOS需占用一定的系统资源(尤其是RAM资源)，只有μC/OS-II、embOS、salvo、FreeRTOS等少数实时操作系统能在小RAM单片机上运行。相对μC/OS-II、embOS等商业操作系统，FreeRTOS操作系统是完全免费的操作系统，具有源码公开、可移植、可裁减、调度策略灵活的特点，可以方便地移植到各种单片机上运行，其最新版本为8.0.0版。</p>
</blockquote>
<h3 id="mbed-OS"><a href="#mbed-OS" class="headerlink" title="mbed OS"></a>mbed OS</h3><p><div align="center"><br><img src="/img/20160513/mbedos.png" alt="mbed OS"><br></div><br><strong>相关支持</strong>: <code>BLE</code>,<code>Celluar</code>,<code>WIFI</code>,<code>Zigbee</code>,<code>6LoWPAN</code></p>
<blockquote>
<p>一款基于ARM Cortex-M处理器的设备所设计的免费操作系统，配有安全、通讯和设备管理模块，支持低功率智能蓝牙标准、2G、3G与CDMA通信技术、Thread、Wi-Fi、802.15.4/6LoWPAN、TLS/DTLS、CoAP、HTTP、MQTT以及轻量级的M2M。而只需32-64kbRAM和256 kb闪存的配置，适合在小设备上运行。</p>
<p>mbed™ OS is an operating system for IoT devices and is especially well-suited to run in energy constrained environments. The OS includes the connectivity, security and device management functionalities required in every IoT device.</p>
</blockquote>
<ul>
<li>Connectivity protocol stack support for Bluetooth® low energy, Cellular, Ethernet, Thread, Wi-fi®,  Zigbee IP, Zigbee NAN, 6LoWPAN</li>
<li>Automation of power management</li>
<li>Software asset protection and secure firmware updates for device security &amp; management</li>
<li>Supports a wide range of ARM Cortex-M based hardware platforms from major MCU vendors</li>
<li>Support for OMA Lightweight M2M protocol for device management</li>
<li>Updatable and secure devices at the edge capable of additional processing and functionality</li>
<li>Banking-class end-to-end IP security across the communication channels through TLS &amp; DTLS</li>
<li>Future proof designs by supporting all the key open standards for connectivity and device management</li>
</ul>
<h3 id="emOS"><a href="#emOS" class="headerlink" title="emOS"></a>emOS</h3><blockquote>
<p>embOS是一个优先级控制的多任务系统，是专门为各种微控制器应用于实时系统应用的嵌入式操作系统．是一个具有最小RAM和ROM占用的、高速的、多功能的高性能工具。</p>
<p>贯穿embOS的整个开发过程，微控制器有限的资源一直是开发者所顾忌的。五年来，该RTOS的内部结构已经被优化为不同客户的不同应用中，以满足工业需要。对不同微控制器的完全源码，使开发者很方便用实时操作系统构建实时程序。embOS是高度模块化的，只有需要的函数才被调用，占用的ROM非常小。 最小的内存占用：1kb ROM,30字节 RAM;由于提供源码文件，你可以用embOS灵活定制系统以满足实际需求。<br>任务之间可以通过旗语、邮箱和事件安全便利地通讯。</p>
</blockquote>
<h3 id="Salvo"><a href="#Salvo" class="headerlink" title="Salvo"></a>Salvo</h3><blockquote>
<p>Salvo™ is the first Real-Time Operating System (RTOS) designed expressly for very-low-cost embedded systems with severely limited program and data memory. With Salvo, you can quickly create low-cost, smart and sophisticated embedded products. Pumpkin™ has currently certified Salvo for use with:</p>
</blockquote>
<h3 id="μC-OS-II"><a href="#μC-OS-II" class="headerlink" title="μC/OS-II"></a>μC/OS-II</h3><blockquote>
<p>uC/OS II(Micro Control Operation System Two) 是一个可以基于ROM运行的、可裁减的、抢占式、实时多任务内核，具有高度可移植性，特别适合于微处理器和控制器，是和很多商业操作系统性能相当的实时操作系统(RTOS)。</p>
<p>为了提供最好的移植性能，uC/OS II最大程度上使用ANSI C语言进行开发，并且已经移植到近40多种处理器体系上，涵盖了从8位到64位各种CPU(包括DSP)。 uC/OS II可以简单的视为一个多任务调度器，在这个任务调度器之上完善并添加了和多任务操作系统相关的系统服务，如信号量、邮箱等。其主要特点有公开源代码，代码结构清晰、明了，注释详尽，组织有条理，可移植性好，可裁剪，可固化。内核属于抢占式，最多可以管理60个任务。从1992年开始，由于高度可靠性、移植性和安全性，uC/OS II已经广泛使用在从照相机到航空电子产品的各种应用中。</p>
</blockquote>
<h3 id="TinyOS"><a href="#TinyOS" class="headerlink" title="TinyOS"></a>TinyOS</h3><p>协议支持: <code>CoAP</code></p>
<p><a href="http://tinyos.stanford.edu/tinyos-wiki/index.php/CoAP_-13" target="_blank" rel="external">TinyCoAP</a></p>
<blockquote>
<p>TinyOS是UC Berkeley（加州大学伯克利分校）开发的开放源代码操作系统，专为嵌入式无线传感网络设计，操作系统基于构件（component-based）的架构使得快速的更新成为可能，而这又减小了受传感网络存储器限制的代码长度。</p>
<p>TinyOS的构件包括网络协议、分布式服务器、传感器驱动及数据识别工具。其良好的电源管理源于事件驱动执行模型，该模型也允许时序安排具有灵活性。TinyOS已被应用于多个平台和感应板中。</p>
</blockquote>
<h3 id="MQX"><a href="#MQX" class="headerlink" title="MQX"></a>MQX</h3><blockquote>
<p>Freescale MQX™ RTOS a full-featured complimentary real-time operating system including the MQX™ Kernel, TCP/IP stack (RTCS), embedded MS-DOS file system (MFS), USB host/device stack, and more. The MQX™ multitasking kernel provides pre-emptive scheduling, fast interrupt response, extensive inter-process communication and synchronization facilities. MQX RTOS includes its own peripheral drivers.</p>
</blockquote>
<h3 id="QNX"><a href="#QNX" class="headerlink" title="QNX"></a>QNX</h3><blockquote>
<p>QNX是由加拿大QSSL公司（QNX Software System Ltd.）开发的分布式实时操作系统。该操作系统既能运行于以Intel X86、Pentium等CPU为核心硬件环境下，也能运行于以PowerPC、MIPS等CPU为核心的硬件环境。QNX操作系统符合POSIX基本标准和实时标准，使其应用可以方便的进行移植。</p>
</blockquote>
<h3 id="openWRT"><a href="#openWRT" class="headerlink" title="openWRT"></a>openWRT</h3><blockquote>
<p>OpenWrt 可以被描述为一个嵌入式的 Linux 发行版，（主流路由器固件有 dd-wrt,tomato,openwrt三类）而不是试图建立一个单一的、静态的系统。OpenWrt的包管理提供了一个完全可写的文件系统，从应用程序供应商提供的选择和配置，并允许您自定义的设备，以适应任何应用程序。</p>
<p>对于开发人员，OpenWrt 是使用框架来构建应用程序，而无需建立一个完整的固件来支持；对于用户来说，这意味着其拥有完全定制的能力，可以用前所未有的方式使用该设备。</p>
</blockquote>
<h3 id="RIOT"><a href="#RIOT" class="headerlink" title="RIOT"></a>RIOT</h3><p>项目首页: <a href="http://riot-os.org/" target="_blank" rel="external">http://riot-os.org/</a><br>平台: <code>MSP430</code>, <code>ARM7</code>, <code>Cortex-M0</code>, <code>Cortex-M3</code>,<code>Cortex-M4</code>,<code>x86</code></p>
<blockquote>
<p>RIOT自称为“友好的物联网操作系统”。RIOT是FeuerWhere项目的分支，首次亮相在2013年。它的目的是既开发者友好又资源友好。它支持多种架构，包括MSP430、ARM7、Cortex-M0、Cortex-M3、Cortex-M4和标准的x86电脑。</p>
</blockquote>
<h1 id="物联网相关库"><a href="#物联网相关库" class="headerlink" title="物联网相关库"></a>物联网相关库</h1><h2 id="CoAP协议"><a href="#CoAP协议" class="headerlink" title="CoAP协议"></a>CoAP协议</h2><h3 id="libcoap"><a href="#libcoap" class="headerlink" title="libcoap"></a>libcoap</h3><p>语言: <code>C</code></p>
<p>主页: <a href="http://sourceforge.net/projects/libcoap/" target="_blank" rel="external">http://sourceforge.net/projects/libcoap/</a></p>
<blockquote>
<p>Lightweight application-protocol for devices that are constrained their resources such as computing power, RF range, memory, bandwith, or network packet sizes. This protocol, CoAP, is developed in the IETF working group “CoRE”, <a href="http://6lowapp.net" target="_blank" rel="external">http://6lowapp.net</a>.</p>
</blockquote>
<h3 id="jCoAP"><a href="#jCoAP" class="headerlink" title="jCoAP"></a>jCoAP</h3><p>语言: <code>Java</code></p>
<p>主页: <a href="https://code.google.com/p/jcoap/" target="_blank" rel="external">https://code.google.com/p/jcoap/</a></p>
<blockquote>
<p>jCoAP is a Java Library implementing the Constrained Application Protocol (CoAP)</p>
</blockquote>
<h3 id="Node-CoAP"><a href="#Node-CoAP" class="headerlink" title="Node-CoAP"></a>Node-CoAP</h3><p>语言: <code>Javascript</code> (Nodejs)</p>
<p>主页: <a href="https://github.com/mcollina/node-coap" target="_blank" rel="external">https://github.com/mcollina/node-coap</a></p>
<blockquote>
<p>node-coap is a client and server library for CoAP modelled after the http module.</p>
</blockquote>
<h3 id="coap"><a href="#coap" class="headerlink" title="coap"></a>coap</h3><p>语言: <code>Python</code></p>
<p>主页: <a href="https://github.com/openwsn-berkeley/coap" target="_blank" rel="external">https://github.com/openwsn-berkeley/coap</a></p>
<blockquote>
<p>A CoAP Python library</p>
<p>This package implements the Constrained Application Protocol (CoAP) developed by the IETF CORE working group.</p>
</blockquote>
<h3 id="Californium-Cf-CoAP"><a href="#Californium-Cf-CoAP" class="headerlink" title="Californium (Cf) CoAP"></a>Californium (Cf) CoAP</h3><p>语言: <code>Java</code></p>
<p>主页: <a href="https://github.com/mkovatsc/Californium" target="_blank" rel="external">https://github.com/mkovatsc/Californium</a></p>
<blockquote>
<p>Californium (Cf) is an open source implementation of the Constrained Application Protocol (CoAP). It is written in Java and targets unconstrained environments such as back-end service infrastructures (e.g., proxies, resource directories, or management services) and less constrained environments such as embedded devices running Linux (e.g., smart home controllers or vehicle sensors). Californium (Cf) has been running code for the IETF standardization of CoAP and was recently reimplemented to straighten changed design decisions, but also to improve its performance with focus on scalability. The new implementation was successfully tested at the ETSI CoAP#3 and OMA LWM2M Plugtests in November 2013.</p>
</blockquote>
<h2 id="REST"><a href="#REST" class="headerlink" title="REST"></a>REST</h2><h3 id="cJSON"><a href="#cJSON" class="headerlink" title="cJSON"></a>cJSON</h3><p>语言: <code>C</code></p>
<p>主页: <a href="http://sourceforge.net/projects/cjson/" target="_blank" rel="external">http://sourceforge.net/projects/cjson/</a></p>
<blockquote>
<p>JSON(JavaScriptObject Notation)是一种轻量级的数据交换格式。它基于JavaScript的一个子集。JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯。这些特性使JSON成为理想的数据交换语言。易于人阅读和编写，同时也易于机器解析和生成。</p>
</blockquote>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="cURL"><a href="#cURL" class="headerlink" title="cURL"></a>cURL</h3><p>语言: <code>C</code></p>
<p>主页: <a href="http://curl.haxx.se/" target="_blank" rel="external">http://curl.haxx.se/</a></p>
<blockquote>
<p>curl是利用URL语法在命令行方式下工作的开源文件传输工具。它被广泛应用在Unix、多种Linux发行版中，并且有DOS和Win32、Win64下的移植版本。</p>
</blockquote>
<h3 id="HiveMQ"><a href="#HiveMQ" class="headerlink" title="HiveMQ"></a>HiveMQ</h3><p>语言: <code>Java</code></p>
<p>主页: <a href="http://www.hivemq.com/" target="_blank" rel="external">http://www.hivemq.com/</a></p>
<blockquote>
<p>HiveMQ 是一个企业级的 MQTT 代理，主要用于企业和新兴的机器到机器M2M通讯和内部传输，最大程度的满足可伸缩性、易管理和安全特性。提供免费的个人版。HiveMQ 提供了开源的插件开发包。</p>
</blockquote>
<h2 id="物联网书籍"><a href="#物联网书籍" class="headerlink" title="物联网书籍"></a>物联网书籍</h2><table>
<thead>
<tr>
<th>书名</th>
<th>作者</th>
<th>日期</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.packtpub.com/application-development/learning-internet-things" target="_blank" rel="external">Learning Internet of Things</a></td>
<td>Peter Waher</td>
<td>2015.02</td>
<td>Book &amp; Ebook</td>
<td></td>
</tr>
<tr>
<td><a href="http://designiot.phodal.com" target="_blank" rel="external">一步步搭建物联网系统</a></td>
<td>Phodal Fengda &amp; Fortware</td>
<td>2014.11</td>
<td>电子书</td>
<td>-</td>
</tr>
<tr>
<td>[Learning Internet of Things]</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<h2 id="物联网相关书籍"><a href="#物联网相关书籍" class="headerlink" title="物联网相关书籍"></a>物联网相关书籍</h2><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><table>
<thead>
<tr>
<th>书名</th>
<th>作者</th>
<th>日期</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td> RESTful Web APIs</td>
<td>Leonard Richardson &amp; Mike Amundsen</td>
<td>2014.06</td>
<td>-</td>
</tr>
<tr>
<td> REST实战</td>
<td>韦伯 &amp; 帕拉斯泰迪斯</td>
<td>2011.09.</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><table>
<thead>
<tr>
<th>书名</th>
<th>作者</th>
<th>日期</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td> Arduino从基础到实践</td>
<td>Michael McRoberts</td>
<td>2013.03</td>
<td>-</td>
</tr>
<tr>
<td> Arduino Cookbook</td>
<td>Michael Margolis</td>
<td>2011.04</td>
<td>-</td>
</tr>
<tr>
<td> Raspberry Pi用户指南</td>
<td>Eben Upton</td>
<td>2013.08</td>
<td>-</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;IoT-Struct&quot;&gt;&lt;a href=&quot;#IoT-Struct&quot; class=&quot;headerlink&quot; title=&quot;IoT Struct&quot;&gt;&lt;/a&gt;IoT Struct&lt;/h2&gt;&lt;p&gt;&lt;div align = &quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/20160513/struct.jpg&quot; alt=&quot;IoT Struct&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="IoT" scheme="http://cuiqingwei.github.io/tags/IoT/"/>
    
  </entry>
  
  <entry>
    <title>网站设计的最简主义</title>
    <link href="http://cuiqingwei.github.io/2016/05/12/2016-05-12-%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%9C%80%E7%AE%80%E4%B8%BB%E4%B9%89/"/>
    <id>http://cuiqingwei.github.io/2016/05/12/2016-05-12-网站设计的最简主义/</id>
    <published>2016-05-12T09:23:37.000Z</published>
    <updated>2016-09-15T13:00:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前在阮一峰的网络日志看到《网站设计的最简主义》，文中写到：</p>
<p>昨天，我看到了一个网站 (<a href="http://www.plaintxt.org" target="_blank" rel="external"><u>http://www.plaintxt.org</u></a>)，提倡最简主义（<strong>Minimalism</strong>）的设计，这也正是我的想法。我因此感到十分惊喜。所谓”最简主义”设计，就是说网页上没有不相关的内容与装饰，美工基本就是白底黑字，尽量少用图片和复杂的排版，给人一种非常简单朴素的感觉。</p>
<p><strong>Plaintxt.org</strong>的站长<strong>Scott</strong>说，他信奉”最简主义”设计，因为<strong>2000</strong>年下半年他去尼泊尔当志愿者。在那里，他只能用<strong>24.4K</strong>的<strong>Modem</strong>上网，这意味着一幅<strong>120K</strong>的图片，都要花将近1分钟才能看到。他在尼泊尔待了3年，再回到美国以后，彻底改变了对网站设计的看法，从此走上了宣传”最简主义”的道路。<br><a id="more"></a><br>至于我为什么喜欢”最简主义”，除了因为我喜欢简洁的东西以外，还因为我觉得将页面最简化，可以使访问者集中注意力，关注主要的内容。（顺便说一句，在读书上，我也喜欢”最简主义”的文字，就是说没有不相关的废话。）我认为，”最简主义”有利于节省访问者的时间，体现了对访问者的尊重，最终也有利于网站的成功。Google就是”最简主义”的一个典型，首页上就是只有一个长长的搜索框。</p>
<p>另外，在Plaintxt.org的首页上，Scott还说了一句很棒的话。他说：<strong>“我不是程序员，也不是设计师，我只是碰巧有一些想法和一台电脑。”（I am not a designer nor a coder. I’m just a guy with a point-of-view and a computer.）</strong>我很喜欢这句话，它也是我的心声。</p>
<p>赞同<em>最简主义</em>，因此，本人主页追求简洁朴素！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在阮一峰的网络日志看到《网站设计的最简主义》，文中写到：&lt;/p&gt;
&lt;p&gt;昨天，我看到了一个网站 (&lt;a href=&quot;http://www.plaintxt.org&quot;&gt;&lt;u&gt;http://www.plaintxt.org&lt;/u&gt;&lt;/a&gt;)，提倡最简主义（&lt;strong&gt;Minimalism&lt;/strong&gt;）的设计，这也正是我的想法。我因此感到十分惊喜。所谓”最简主义”设计，就是说网页上没有不相关的内容与装饰，美工基本就是白底黑字，尽量少用图片和复杂的排版，给人一种非常简单朴素的感觉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Plaintxt.org&lt;/strong&gt;的站长&lt;strong&gt;Scott&lt;/strong&gt;说，他信奉”最简主义”设计，因为&lt;strong&gt;2000&lt;/strong&gt;年下半年他去尼泊尔当志愿者。在那里，他只能用&lt;strong&gt;24.4K&lt;/strong&gt;的&lt;strong&gt;Modem&lt;/strong&gt;上网，这意味着一幅&lt;strong&gt;120K&lt;/strong&gt;的图片，都要花将近1分钟才能看到。他在尼泊尔待了3年，再回到美国以后，彻底改变了对网站设计的看法，从此走上了宣传”最简主义”的道路。&lt;br&gt;
    
    </summary>
    
    
      <category term="网站设计" scheme="http://cuiqingwei.github.io/tags/%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="最简主义" scheme="http://cuiqingwei.github.io/tags/%E6%9C%80%E7%AE%80%E4%B8%BB%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>MEAN</title>
    <link href="http://cuiqingwei.github.io/2016/03/09/2016-03-09-MEAN/"/>
    <id>http://cuiqingwei.github.io/2016/03/09/2016-03-09-MEAN/</id>
    <published>2016-03-09T13:34:00.000Z</published>
    <updated>2016-10-09T12:52:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 2002 年的一本著作中，David Weinberger 将发展迅速的 Web 内容描述成一个 <a href="http://www.smallpieces.com/?cm_mc_uid=46082469799714742187112&amp;cm_mc_sid_50200000=1474507563" target="_blank" rel="external">小块松散组合（Small Pieces Loosely Joined）</a>。这个比喻让我印象深刻，因为大家一般很容易认为 Web 是一个巨大的技术堆栈。实际上，您访问的每个网站都是库、语言与 Web 框架的一种独特组合。<br><a href="http://www.ibm.com/developerworks/web/tutorials/wa-lamp/wa-lamp.html" target="_blank" rel="external">LAMP堆栈</a> 是早期表现突出的开源 Web 技术集合之一：它使用 Linux® 作为操作系统，使用 Apache 作为 Web 服务器，使用 MySQL 作为数据库，并使用 Perl（或者 Python 和 PHP）作为生成基于 HTML Web 页面的编程语言。这些技术的出现并非为了一起联合工作。它们是独立的项目，由多位雄心勃勃的软件工程师前赴后继地整合在一起。自那以后，我们就见证了 Web 堆栈的大爆发。每一种现代编程语言似乎都有一个（或两个）对应的 Web 框架，可将各种混杂的技术预先组装在一起，快速而又轻松地创建一个新的网站。<br><a id="more"></a><br>MEAN 堆栈是 Web 社区中赢得大量关注和令人兴奋的一种新兴堆栈：<a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a>、<a href="http://expressjs.com/" target="_blank" rel="external">Express</a>、<a href="https://angularjs.org/" target="_blank" rel="external">AngularJS</a> 和 <a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>。MEAN 堆栈代表着一种完全现代的 Web 开发方法：一种语言运行在应用程序的所有层次上，从客户端到服务器，再到持久层。本系列文章演示了一个 MEAN Web 开发项目的端到端开发情况，但这种开发并不仅限于简单的语法。本文将通过作者的亲身实践向您深入浅出地介绍了该堆栈的组件技术，包括安装与设置。参见 <a href="http://www.ibm.com/developerworks/apps/download/index.jsp?contentid=987843&amp;filename=wa-mean1src.zip&amp;method=http&amp;locale=zh_CN" target="_blank" rel="external">下载</a> 部分，以便获取示例代码。</p>
<h1 id="从-LAMP-到-MEAN"><a href="#从-LAMP-到-MEAN" class="headerlink" title="从 LAMP 到 MEAN"></a>从 LAMP 到 MEAN</h1><p>MEAN 不仅仅是一次首字母缩写的简单重新安排与技术升级。将基础平台从操作系统 (Linux) 转变为 JavaScript 运行时 (Node.js) 让操作系统变得独立：Node.js 在 Windows® 与 OS X 上的运行情况和在 Linux 上一样优秀。<br>Node.js 同样取代了 LAMP 堆栈中的 Apache。但 Node.js 远远不止是一种简单的 Web 服务器。事实上，用户不会将完成后的应用程序部署到单机的 Web 服务器上；相反，Web 服务器已经包含在应用程序中，并已在 MEAN 堆栈中自动安装。结果，部署过程得到了极大简化，因为所需的 Web 服务器版本已经与余下的运行时依赖关系一起得到了明确定义。</p>
<p>从传统数据库（如 MySQL）到 NoSQL，再到无架构的、以文档为导向的持久存储（如 MongoDB），这些代表着持久化策略发生了根本性的转变。用户花费在编写 SQL 上的时间将会减少，将会有更多的时间编写 JavaScript 中的映射/化简功能。用户还能省掉大量的转换逻辑，因为 MongoDB 可以在本地运行 <a href="http://en.wikipedia.org/wiki/Json" target="_blank" rel="external">JavaScript Object Notation (JSON)</a>。因此，编写 <a href="http://en.wikipedia.org/wiki/REST" target="_blank" rel="external">RESTful Web</a> 服务变得前所未有的容易。</p>
<p>但从 LAMP 到 MEAN 的最大转变在于从传统的服务器端页面生成变为客户端 <a href="http://en.wikipedia.org/wiki/Single_page_application" target="_blank" rel="external">单页面应用程序 (SPA)</a>。借助 Express 仍然可以处理服务器端的路由与页面生成，但目前的重点在客户端视图上，而 AngularJS 可以实现这一点。这种变化并不仅仅是将 <a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank" rel="external">模型-视图-控制器 (MVC)</a> 工件从服务器转移到客户端。用户还要尝试从习惯的同步方式转而使用基本由事件驱动的、实质上为异步的方式。或许最重要的一点是，您将从以页面为中心的应用程序视图转到面向组件的视图。</p>
<p>MEAN 堆栈并非以移动为中心，AngularJS 在桌面电脑、笔记本电脑、智能手机、平板电脑和甚至是智能电视上的运行效果都一样，但它不会把移动设备当作二等公民对待。而且测试事后不再是问题：借助世界级的测试框架，比如 <a href="http://visionmedia.github.io/mocha/" target="_blank" rel="external">MochaJS</a>、<a href="http://jasmine.github.io/" target="_blank" rel="external">JasmineJS</a> 和 <a href="http://karma-runner.github.io/" target="_blank" rel="external">KarmaJS</a>，您可以为自己的 MEAN 应用程序编写深入而又全面的测试套件。</p>
<p>准备好获得 MEAN 了吗？</p>
<hr>
<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><p>您需要安装 Node.js，以便在本系列中的示例应用程序上工作，如果尚未安装它，那就立刻开始安装吧。<br>如果使用 UNIX® 风格的操作系统（Linux、Mac OS X 等），我推荐使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="external">Node Version Manager (NVM)</a>。（否则，在 <a href="http://nodejs.org/" target="_blank" rel="external">Node.js 主页</a>上单击 Install，下载适合您操作系统的安装程序，然后接受默认选项即可。）借助 NVM，您可以轻松下载 Node.js，并从命令行切换各种版本。这可以帮助您从一个版本的 Node.js 无缝转移到下一版本，就像我从一个客户项目转到下一个客户项目一样。<br>NVM 安装完毕后，请输入命令 nvm ls-remote 查看哪些 Node.js 版本可用于安装，如清单 1 中所示。<br>清单 1. 使用 NVM 列出可用的 Node.js 版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ nvm ls-remote</div><div class="line">v0.10.20</div><div class="line">v0.10.21</div><div class="line">v0.10.22</div><div class="line">v0.10.23</div><div class="line">v0.10.24</div><div class="line">v0.10.25</div><div class="line">v0.10.26</div><div class="line">v0.10.27</div><div class="line">v0.10.28</div></pre></td></tr></table></figure></p>
<p>输入 nvm ls 命令可以显示本地已经安装的 Node.js 版本，以及目前正在使用中的版本。<br>在撰写本文之际，Node 网站推荐 v0.10.28 是最新的稳定版本。输入 nvm install v0.10.28 命令在本地安装它。<br>安装 Node.js 后（通过 NVM 或平台特定的安装程序均可），可以输入 node –version 命令来确认当前使用的版本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ node --version</div><div class="line">v0.10.28</div></pre></td></tr></table></figure></p>
<h1 id="什么是-Node-js？"><a href="#什么是-Node-js？" class="headerlink" title="什么是 Node.js？"></a>什么是 Node.js？</h1><p>Node.js 是一种 headless JavaScript 运行时。它与运行在 Google Chrome 内的 JavaScript 引擎（名叫 V8）是一样的，但使用 Node.js 可以从命令行（而非浏览器）运行 JavaScript。</p>
<p>我曾嘲笑过有些学生从命令行运行 JavaScript 的主意：“如果没有要控制的 HTML，那 JavaScript 还有什么好处呢？” JavaScript 是在浏览器（Netscape Navigator 2.0）中来到这个世界的，因此那些反对者的短视和天真是可以原谅的。<br>事实上，JavaScript 编程语言并未针对文档对象模型 (DOM) 操作或形成 Ajax 请求提供本地功能。该浏览器提供了 DOM API，可以方便用户使用 JavaScript 来完成这类工作，但在浏览器之外的地方，JavaScript 不具备这些功能。<br>下面给出了一个例子。在浏览器中打开一个 JavaScript 控制台（参见 访问浏览器的开发人员工具）。输入 navigator.appName。获得响应后，请输入 navigator.appVersion。得到的结果类似于图 1 中所示。<br>图 1. 在 Web 浏览器中使用 JavaScript navigator 对象<br><img src="/img/20160309/1.png" alt="图1"><br>在图 1 中，Netscape 是对 navigator.appName 的响应，而对 navigator.appVersion 的响应则是经验丰富的 Web 开发人员已经熟知但爱恨不一的、神秘的开发人员代理字符串。在图 1 中（截自 OS X 上的 Chrome 浏览器），该字符串是 5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36。<br>现在，我们要创建一个名为 test.js 的文件。在文件中输入同样的命令，并将每个命令包含在 console.log() 调用中：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(navigator.appName);</div><div class="line"><span class="built_in">console</span>.log(navigator.appVersion);</div></pre></td></tr></table></figure></p>
<p>保存文件并输入 node test.js 来运行它，如清单 2 中所示。<br>清单 2. 查看 Node.js 中的 navigator is not defined 错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ node test.js</div><div class="line">/test.js:1</div><div class="line">ion (exports, require, module, __filename, __dirname) &#123; console.log (navigator.ReferenceError: navigator is not defined</div><div class="line">    at Object.&lt;anonymous&gt; (/test.js:1:75)</div><div class="line">    at Module._compile (module.js:456:26)</div><div class="line">    at Object.Module._extensions..js (module.js:474:10)</div><div class="line">    at Module.load (module.js:356:32)</div><div class="line">    at Function.Module._load (module.js:312:12)</div><div class="line">    at Function.Module.runMain (module.js:497:10)</div><div class="line">    at startup (node.js:119:16)</div><div class="line">    at node.js:902:3</div></pre></td></tr></table></figure></p>
<p>正如您看到的那样，navigator 在浏览器中可用，但在 Node.js 中不可用。（不好意思，让您的第一个 Node.js 脚本失败了，但我想确保让您相信，在浏览器中运行 JavaScript 与在 Node.js 中运行它是不同的。）<br>根据堆栈跟踪的情况，正确的 Module 没有得到加载。（Modules 是在浏览器中运行 JavaScript 与在 Node.js 中运行它之间的另一主要区别。我们将立刻讲述 Modules 的更多相关内容。）为了从 Node.js 获得类似的信息，请将 test.js 的内容修改为：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(process.versions)</div><div class="line"><span class="built_in">console</span>.log(process.arch)</div><div class="line"><span class="built_in">console</span>.log(process.platform)</div></pre></td></tr></table></figure></p>
<p>再次输入 node test.js，可以看到类似于清单 3 中的输出。<br>清单 3. 在 Node.js 中使用过程模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ node test.js</div><div class="line">&#123; http_parser: <span class="string">'2.7.0'</span>,</div><div class="line">  node: <span class="string">'4.5.0'</span>,</div><div class="line">  v8: <span class="string">'4.5.103.37'</span>,</div><div class="line">  uv: <span class="string">'1.9.1'</span>,</div><div class="line">  zlib: <span class="string">'1.2.8'</span>,</div><div class="line">  ares: <span class="string">'1.10.1-DEV'</span>,</div><div class="line">  icu: <span class="string">'56.1'</span>,</div><div class="line">  modules: <span class="string">'46'</span>,</div><div class="line">  openssl: <span class="string">'1.0.2h'</span> &#125;</div><div class="line">x64</div><div class="line">darwin</div></pre></td></tr></table></figure></p>
<p>在 Node.js 中成功运行第一个脚本之后，我们将接触下一个主要概念：模块。</p>
<hr>
<h1 id="什么是模块？"><a href="#什么是模块？" class="headerlink" title="什么是模块？"></a>什么是模块？</h1><p>可以在 JavaScript 中创建单一功能的函数，但与在 Java、Ruby 或 Perl 中不同，无法将多个函数打包到一个能够导入导出的内聚模块或 ”包“ 中。当然，使用 \<script\> 元素可以包含任意 JavaScript 源代码文件，但这种历史悠久的方法在两个关键方面缺少正确的模块声明。<br>首先，使用 \<script\> 元素包含的任意 JavaScript 将被加载到全局命名空间中。使用模块可以导入的函数被封装在一个局部命名的变量中。其次，同时更为关键的是，可以使用模块显式地声明依赖关系，而使用 \<script\> 元素则做不到这一点。结果，导入 Module A 时也会同时导入依赖的 Modules B 和 C。当应用程序变得复杂时，传递依赖关系管理很快将成为一种关键需求。</script\></script\></script\></p>
<p>模块是用户衷心期盼的下一 JavaScript 主要版本 (ECMAScript 6) 的功能，但直到该版本被广泛接受之前，Node.js 目前使用的是它自己基于 <a href="http://en.wikipedia.org/wiki/CommonJS" target="_blank" rel="external">CommonJS</a> 规范的模块版本。<br>使用 require 关键字可以在脚本中包含 CommonJS 模块。例如，清单 4 是对 Node.js 主页上的 Hello World 脚本稍微进行修改后的版本。创建一个名为 example.js 的文件，并将清单 4 中的代码复制到其中。</p>
<p>清单 4. Node.js 中的 Hello World<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">var</span> port = <span class="number">9090</span>;</div><div class="line">http.createServer(responseHandler).listen(port);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'Server running at http://127.0.0.1:'</span> + port + <span class="string">'/'</span>);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">responseHandler</span>(<span class="params">req, res</span>)</span>&#123;</div><div class="line">  res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/html'</span>&#125;);</div><div class="line">  res.end(<span class="string">'&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello World&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输入 node example.js 命令运行新的 Web 服务器，然后在 Web 浏览器中访问 <a href="http://127.0.0.1:9090。" target="_blank" rel="external">http://127.0.0.1:9090。</a><br>看一看清单 4 中的头两行。您很可能写过几百次（或几千次）像 var port = 9090; 这样的简单语句。这条语句定义了一个名为 port 的变量，并将数字 9090 赋值给它。第一行 (var http = require(‘http’);) 用于导入一个 CommonJS 模块。它引入 http 模块并将它指派给一个局部变量。 and assigns it to a local variable. All of the corresponding modules that http 依赖的所有对应模块也同时被 require 语句导入。<br>example.js 后面的代码行：<br>创建一个新的 HTTP 服务器。<br>指定一个函数来处理响应。<br>开始监听指定端口上进入的 HTTP 请求。<br>这样通过寥寥几行 JavaScript 代码，就可以在 Node.js 中创建了一个简单的 Web 服务器。在本系列随后的文章中您会看到，Express 将这个简单的例子被扩展用于处理更为复杂的路由，同时还将提供静态与动态生成的资源。<br>http 模块是 Node.js 安装的标准组件之一。其他标准的 Node.js 模块还支持文件 I/O，读取来自用户的命令行输入，处理底层的 TCP 和 UDP 请求等等。访问 Node.js 文档的 <a href="http://nodejs.org/api/modules.html" target="_blank" rel="external">Modules</a> 部分，查看标准模块的完整列表并了解它们的功能。<br>尽管模块列表内容十分丰富，但与可用的第三方模块列表相比，仍然是小巫见大巫。要访问它们，您需要熟悉另一个命令行实用工具：NPM。</p>
<hr>
<h1 id="什么是-NPM？"><a href="#什么是-NPM？" class="headerlink" title="什么是 NPM？"></a>什么是 NPM？</h1><p>NPM 是 Node Packaged Modules 的简写。要查看包含超过 75,000 个公用第三方 Node 模块的清单，请访问 NPM 网站。在网站上搜索 yo 模块。图 2 显示了搜索结果。<br>图 2. yo 模块的详细情况<br><img src="/img/20160309/2.png" alt="图2"><br>结果页面简要介绍了该模块（搭建 Yeoman 项目的 CLI 工具），并显示它在过去一天、一周和一月内被下载的次数、编写该模块的作者、它依赖于哪些其他的模块（如果存在）等内容。最重要的是，结果页面给出了安装该模块的命令行语法。<br>要从命令行获取关于 yo 模块的类似信息，请输入 npm info yo 命令。（如果您还不知道模块的官方名称，可以输入 npm search yo 来搜索名称中包含字符串 yo 的所有模块。）npm info 命令显示模块的 package.json 文件的内容。<br>了解 package.json<br>每个 Node.js 模块都必须关联一个格式良好的 package.json 文件，因此，熟悉此文件的内容是值得的。清单 5、清单 6 和清单 7 分三部分显示了 yo 模块的 <a href="https://www.npmjs.org/doc/json.html" target="_blank" rel="external">package.json</a> 文件的内容。<br>如清单 5 中所示，第一个元素通常是 name、description 和一个可用 versions 的 JSON 数组。<br>清单 5. package.json，第 1 部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ npm info yo</div><div class="line">&#123; name: <span class="string">'yo'</span>,</div><div class="line">  description: <span class="string">'CLI tool for scaffolding out Yeoman projects'</span>,</div><div class="line">  <span class="string">'dist-tags'</span>: &#123; latest: <span class="string">'1.1.2'</span> &#125;,</div><div class="line">  versions:</div><div class="line">   [</div><div class="line">     <span class="string">'1.0.0'</span>,</div><div class="line">     <span class="string">'1.1.0'</span>,</div><div class="line">     <span class="string">'1.1.1'</span>,</div><div class="line">     <span class="string">'1.1.2'</span> ],</div></pre></td></tr></table></figure></p>
<p>要安装一个模块的最新版本，请输入 npm install package 命令。输入 npm install package@version 可以安装一个特定的版本。<br>如清单 6 中所示，接下来将显示作者、维护者和可以直接查找源文件的 GitHub 库。<br>清单 6. package.json，第 2 部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">author: <span class="string">'Chrome Developer Relations'</span>,</div><div class="line">repository:</div><div class="line"> &#123; <span class="built_in">type</span>: <span class="string">'git'</span>,</div><div class="line">   url: <span class="string">'git://github.com/yeoman/yo'</span> &#125;,</div><div class="line">homepage: <span class="string">'http://yeoman.io'</span>,</div><div class="line">keywords:</div><div class="line"> [ <span class="string">'front-end'</span>,</div><div class="line">   <span class="string">'development'</span>,</div><div class="line">   <span class="string">'dev'</span>,</div><div class="line">   <span class="string">'build'</span>,</div><div class="line">   <span class="string">'web'</span>,</div><div class="line">   <span class="string">'tool'</span>,</div><div class="line">   <span class="string">'cli'</span>,</div><div class="line">   <span class="string">'scaffold'</span>,</div><div class="line">   <span class="string">'stack'</span> ],</div></pre></td></tr></table></figure></p>
<p>在这个例子中，还可以看到一个指向项目主页的链接和一个相关关键字的 JSON 数组。并非所有 package.json 文件中都会出现所有这些字段，但用户很少会抱怨与一个项目相关的元数据太多。<br>最后，清单 7 中列出了附有显式版本号的依赖关系。这些版本号符合主版本.次版本.补丁版本的常用模式，被称为 <a href="http://semver.org/" target="_blank" rel="external">SemVer</a>（语义版本控制）。<br>清单 7. package.json，第 3 部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">engines: &#123; node: <span class="string">'&gt;=0.8.0'</span>, npm: <span class="string">'&gt;=1.2.10'</span> &#125;,</div><div class="line">dependencies:</div><div class="line"> &#123; <span class="string">'yeoman-generator'</span>: <span class="string">'~0.16.0'</span>,</div><div class="line">   nopt: <span class="string">'~2.1.1'</span>,</div><div class="line">   lodash: <span class="string">'~2.4.1'</span>,</div><div class="line">   <span class="string">'update-notifier'</span>: <span class="string">'~0.1.3'</span>,</div><div class="line">   insight: <span class="string">'~0.3.0'</span>,</div><div class="line">   <span class="string">'sudo-block'</span>: <span class="string">'~0.3.0'</span>,</div><div class="line">   async: <span class="string">'~0.2.9'</span>,</div><div class="line">   open: <span class="string">'0.0.4'</span>,</div><div class="line">   chalk: <span class="string">'~0.4.0'</span>,</div><div class="line">   findup: <span class="string">'~0.1.3'</span>,</div><div class="line">   shelljs: <span class="string">'~0.2.6'</span> &#125;,</div><div class="line">peerDependencies:</div><div class="line"> &#123; <span class="string">'grunt-cli'</span>: <span class="string">'~0.1.7'</span>,</div><div class="line">   bower: <span class="string">'&gt;=0.9.0'</span> &#125;,</div><div class="line">devDependencies:</div><div class="line"> &#123; grunt: <span class="string">'~0.4.2'</span>,</div><div class="line">   mockery: <span class="string">'~1.4.0'</span>,</div><div class="line">   <span class="string">'grunt-contrib-jshint'</span>: <span class="string">'~0.8.0'</span>,</div><div class="line">   <span class="string">'grunt-contrib-watch'</span>: <span class="string">'~0.5.3'</span>,</div><div class="line">   <span class="string">'grunt-mocha-test'</span>: <span class="string">'~0.8.1'</span> &#125;,</div></pre></td></tr></table></figure></p>
<p>这个 package.json 文件表明，它必须安装在 0.8.0 或更高版本的 Node.js 实例上。如果试图使用 npm install 命令安装一个不受支持的版本，那么安装将会失败。</p>
<p>除了平台要求之外，这个 package.json 文件还提供几个依赖关系列表：</p>
<ul>
<li>dependencies 部分列出了运行时的依赖关系。</li>
<li>devDependencies 部分列出了开发过程中需要的模块。</li>
<li>peerDependencies 部分支持作者定义项目之间的 ”对等“ 关系。这种功能通常用于指定基础项目与其插件之间的关系，但在这个例子中，它指出了包含 Yeoman 项目与 Yo 的其他两个项目（Grunt 与 Bower）。<br>如果在不指定模块名的情况下输入 npm install 命令，那么 npm 会访问当前目录中的 package.json 文件，并安装我刚刚讨论过的三部分内容中列出的所有依赖关系。<br>安装一个能正常工作的 MEAN 堆栈，下一步是安装 Yeoman 与相应的 Yeoman-MEAN 生成器。</li>
</ul>
<hr>
<p>安装 Yeoman<br>作为一名 Java 开发人员，我无法想象在没有诸如 Ant 或 Maven 这样的编译系统的情况下如何启动一个新项目。类似地，Groovy 和 Grails 开发人员依靠的是 Gant（Ant 的一种 Groovy 实现）或 Gradle。这些工具可以搭建起一个新的目录结构，动态下载依赖关系，并准备好将项目发布。<br>在纯粹的 Web 开发环境中，Yeoman 可以满足这种需要。Yeoman 是三种 Node.js 工具的集合，包括用于搭建的纯 JavaScript 工具 Yo，管理客户端依赖关系的 Bower，以及准备项目发布的 Grunt。通过分析 清单 7 可以得出这样的结论：安装 Yo 时也会安装它对等的 Grunt 和 Bower，这要感谢 package.json 中的 peerDependencies 部分。<br>通常，输入 npm install yo –save 命令可以安装 yo 模块并更新 package.json 文件中的 dependencies 部分。（npm install yo –save-dev 用于更新 devDependencies 部分。）但这三个对等的 Yeoman 模块算不上是特定于项目的模块，它们是命令行实用工具，而非运行时依赖关系。要全局安装一个 NPM 包，需要在 install 命令后增加一个 -g 标志。<br>在系统上安装 Yeoman：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g yo</div></pre></td></tr></table></figure></p>
<p>在完成包安装后，输入 yo –version 命令来验证它已经在运行中。<br>Yeoman 与基础架构的所有余下部分都准备就绪后，便可以开始安装 MEAN 堆栈了。</p>
<h1 id="安装-MeanJS"><a href="#安装-MeanJS" class="headerlink" title="安装 MeanJS"></a>安装 MeanJS</h1><p>您可以手动安装 MEAN 堆栈的每一部分，但需要十分小心。谢天谢地，Yeoman 通过其 generators（生成器） 提供了一种更轻松的安装方式。<br>Yeoman 生成器就是引导一个新 Web 项目更轻松的方式。该生成器提供了基础包及其所有依赖关系。此外，它通常还会包含一个工作的编译脚本及其所有相关插件。通常，该生成器还包含一个示例应用程序，包括测试在内。<br>Yeoman 团队构建和维护了几个 “官方的” Yeoman 生成器。社区驱动的 Yeoman 生成器（超过 800 个）远远超过官方生成器的数量。<br>您将用于引导第一个 MEAN 应用程序的社区生成器被称为 MEAN.JS，这也在意料之中。<br>在 MEAN.JS 主页上，单击 Yo Generator 菜单选项或者直接访问 Generator 页面，图 3 中显示了其中的一部分。<br><img src="/img/20160309/3.png" alt="图3"><br>该页面上的说明指出要首先 Yeoman，这一点您已经完成。下一步是全局安装 MEAN.JS 生成器：<br>生成器准备就绪后，便可以开始创建您的第一个 MEAN 应用程序了。创建一个名为 test 的目录，使用 cd 命令进入它，然后输入 yo meanjs 命令生成应用程序。回答最后两个问题，如清单 8 中所示。（您可以为开始四个问题提供自己的答案。）<br>清单 8. 使用 MEAN.JS Yeoman generator<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ mkdir <span class="built_in">test</span></div><div class="line">$ <span class="built_in">cd</span> <span class="built_in">test</span></div><div class="line">$ yo meanjs</div><div class="line">You are using the official MEAN.JS generator.</div><div class="line">[?] What would you like to call your application?</div><div class="line">Test</div><div class="line">[?] How would you describe your application?</div><div class="line">Full-Stack JavaScript with MongoDB, Express, AngularJS, and Node.js</div><div class="line">[?] How would you describe your application <span class="keyword">in</span> comma separated key words?</div><div class="line">MongoDB, Express, AngularJS, Node.js</div><div class="line">[?] What is your company/author name?</div><div class="line">Scott Davis</div><div class="line">[?] Would you like to generate the article example CRUD module?</div><div class="line">Yes</div><div class="line">[?] Which AngularJS modules would you like to include?</div><div class="line">ngCookies, ngAnimate, ngTouch, ngSanitize</div></pre></td></tr></table></figure></p>
<p>在回答最后一个问题后，您会看到一系列行为，这是 NPM 在下载所有服务器端的依赖关系（包括 Express）。NPM 完成后，Bower 将下载所有客户端的依赖关系（包括 AngularJS、Bootstrap 和 jQuery）。<br>至此，您已经安装了 EAN 堆栈（Express、AngularJS 和 Node.js) — 目前只缺少 M (MongoDB)。如果现在输入 grunt 命令，在没有安装 MongoDB 的情况下启动应用程序，您会看到类似于清单 9 中的一条错误消息。<br>清单 9. 试图在没有 MongoDB 的情况下启动 MeanJS<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">events.js:72</div><div class="line">        throw er; // Unhandled <span class="string">'error'</span> event</div><div class="line">              ^</div><div class="line">Error: failed to connect to [localhost:27017]</div><div class="line">    at null.&lt;anonymous&gt;</div><div class="line">(/<span class="built_in">test</span>/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/server.js:546:74)</div><div class="line"></div><div class="line">[nodemon] app crashed - waiting <span class="keyword">for</span> file changes before starting...</div></pre></td></tr></table></figure></p>
<p>如果启动应用程序时看到这条错误消息，请按下 Ctrl+C 键停止应用程序。<br>为了使用新的 MEAN 应用程序，现在需要安装 MongoDB。</p>
<hr>
<h1 id="安装-MongoDB"><a href="#安装-MongoDB" class="headerlink" title="安装 MongoDB"></a>安装 MongoDB</h1><p>MongoDB 是一种 NoSQL 持久性存储。它不是使用 JavaScript 编写的，也不是 NPM 包。必须单独安装它才能完成 MEAN 堆栈的安装。<br>访问 <a href="http://www.mongodb.org/" target="_blank" rel="external">MongoDB 主页</a>，下载平台特定的安装程序，并在安装 MongoDB 时接受所有默认选项。<br>安装完成时，输入 mongod 命令启动 MongoDB 守护程序。<br>MeanJS Yeoman 生成器已经安装了一个名为 <a href="http://mongoosejs.com/" target="_blank" rel="external">Mongoose</a> 的 MongoDB 客户端模块，您可以检查 package.json 文件来确认这一点。我将在后续的文章中详细介绍 MongoDB 和 Mongoose。<br>安装并运行 MongoDB 后，最终您可以运行您的 MEAN 应用程序并观察使用效果了。</p>
<hr>
<h1 id="运行-MEAN-应用程序"><a href="#运行-MEAN-应用程序" class="headerlink" title="运行 MEAN 应用程序"></a>运行 MEAN 应用程序</h1><p>要启动新安装的 MEAN 应用程序，在运行 MeanJS Yeoman 生成器之前，一定要位于您创建的 test 目录中。在输入 grunt 命令时，输出内容应该如清单 10 中所示。<br>清单 10. 启动 MEAN.JS 应用程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ grunt</div><div class="line">Running <span class="string">"jshint:all"</span> (jshint) task</div><div class="line">&gt;&gt; 46 files lint free.</div><div class="line">Running <span class="string">"csslint:all"</span> (csslint) task</div><div class="line">&gt;&gt; 2 files lint free.</div><div class="line">Running <span class="string">"concurrent:default"</span> (concurrent) task</div><div class="line">Running <span class="string">"watch"</span> task</div><div class="line">Waiting...</div><div class="line">Running <span class="string">"nodemon:dev"</span> (nodemon) task</div><div class="line">[nodemon] v1.0.20</div><div class="line">[nodemon] to restart at any time, enter `rs`</div><div class="line">[nodemon] watching: app/views/**/*.* gruntfile.js server.js config/**/*.js app/**/*.js</div><div class="line">[nodemon] starting `node --debug server.js`</div><div class="line">debugger listening on port 5858</div><div class="line"> NODE_ENV is not defined! Using default development environment</div><div class="line">MEAN.JS application started on port 3000</div></pre></td></tr></table></figure></p>
<p><a href="https://www.npmjs.org/package/jshint" target="_blank" rel="external">jshint</a> 和 <a href="https://www.npmjs.org/package/csslint" target="_blank" rel="external">csslint</a> 模块（均由生成器进行安装）可以确保源代码在句法和语体上是正确的。<a href="https://www.npmjs.org/package/nodemon" target="_blank" rel="external">nodemon</a> 包监控文件系统中的代码修改情况，并在检测到有的情况下自动重启服务器，当开发人员需要快速而频繁地修改代码基础时，这可以极大地提高他们的效率。（nodemon 包只在开发阶段运行，要监测生产环境的变化，必须重新部署应用程序并重启 Node.js。）<br>按照控制台输出的提示，访问 <a href="http://localhost:3000" target="_blank" rel="external">http://localhost:3000</a> 并运行您的新 MEAN 应用程序。<br>图 4 显示了 MEAN.JS 示例应用程序的主页。<br>图 4. MEAN.JS 示例应用程序的主页<br><img src="/img/20160309/4.png" alt="图4"><br>在菜单栏中单击 Signup 创建一个新的用户账号。现在填写 Sign-up 页面上的所有字段（如图 5 中所示），然后单击 Sign up。在后续的指南中，您可以通过 Facebook、Twitter 等启用 OAuth 登录<br>图 5. MEAN.JS 示例应用程序的 Sign-up 页面<br><img src="/img/20160309/5.png" alt="图5"><br>现在，您的本地 MongoDB 实例中已经保存了一组用户证书，您可以开始撰写新的文章了。单击 Articles 菜单选项（当您登录之后才会显示出来），并创建一些示例文章。图 6 显示了 Articles 页面。<br>图 6. MeanJS 的文章页面<br><img src="/img/20160309/6.png" alt="图6"><br>您已经创建了自己的第一个 MEAN 应用程序。欢迎加入！</p>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>在这篇指南中，您完成相当多的内容。安装 Node.js 并编写了第一个 Node.js 脚本。学习了模块并使用 NPM 安装了几个第三方模块。安装 Yeoman 并将它作为可靠的 Web 开发平台，其中包含一个搭建实用工具 (Yo)，一个编译脚本 (Grunt)，以及一个管理客户端依赖关系的实用工具 (Bower)。安装 MeanJS Yeoman 生成器，并使用它来创建第一个 MEAN 应用程序。安装 MongoDB 与 Node.js 客户端库 Mongoose。最后运行您的首个 MEAN 应用程序。<br>下一次，我们会详细了解示例应用程序的源代码，从而了解 MEAN 太阳系中的所有四颗行星 （MongoDB、Express、AngularJS 和 Node.js）是如何相互作用的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 2002 年的一本著作中，David Weinberger 将发展迅速的 Web 内容描述成一个 &lt;a href=&quot;http://www.smallpieces.com/?cm_mc_uid=46082469799714742187112&amp;amp;cm_mc_sid_50200000=1474507563&quot;&gt;小块松散组合（Small Pieces Loosely Joined）&lt;/a&gt;。这个比喻让我印象深刻，因为大家一般很容易认为 Web 是一个巨大的技术堆栈。实际上，您访问的每个网站都是库、语言与 Web 框架的一种独特组合。&lt;br&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/web/tutorials/wa-lamp/wa-lamp.html&quot;&gt;LAMP堆栈&lt;/a&gt; 是早期表现突出的开源 Web 技术集合之一：它使用 Linux® 作为操作系统，使用 Apache 作为 Web 服务器，使用 MySQL 作为数据库，并使用 Perl（或者 Python 和 PHP）作为生成基于 HTML Web 页面的编程语言。这些技术的出现并非为了一起联合工作。它们是独立的项目，由多位雄心勃勃的软件工程师前赴后继地整合在一起。自那以后，我们就见证了 Web 堆栈的大爆发。每一种现代编程语言似乎都有一个（或两个）对应的 Web 框架，可将各种混杂的技术预先组装在一起，快速而又轻松地创建一个新的网站。&lt;br&gt;
    
    </summary>
    
    
      <category term="MEAN" scheme="http://cuiqingwei.github.io/tags/MEAN/"/>
    
      <category term="Node.js" scheme="http://cuiqingwei.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>eMaker.Space</title>
    <link href="http://cuiqingwei.github.io/2016/03/08/2016-03-08-eMaker-Space/"/>
    <id>http://cuiqingwei.github.io/2016/03/08/2016-03-08-eMaker-Space/</id>
    <published>2016-03-08T13:34:00.000Z</published>
    <updated>2016-09-18T08:58:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wiki"><a href="#wiki" class="headerlink" title="wiki"></a>wiki</h1><p><a href="http://www.seeedstudio.com/wiki/Main_Page" target="_blank" rel="external">http://www.seeedstudio.com/wiki/Main_Page</a><br><a href="https://wiki.microduino.cc/index.php" target="_blank" rel="external">https://wiki.microduino.cc/index.php</a><br><a href="http://wiki.dfrobot.com.cn/index.php" target="_blank" rel="external">http://wiki.dfrobot.com.cn/index.php</a><br><a href="http://www.alsrobot.cn/wiki/" target="_blank" rel="external">http://www.alsrobot.cn/wiki/</a><br><a href="http://duinopeak.com/wiki/index.php" target="_blank" rel="external">http://duinopeak.com/wiki/index.php</a><br><a id="more"></a></p>
<h1 id="Open-Source-Hardware"><a href="#Open-Source-Hardware" class="headerlink" title="Open Source Hardware"></a>Open Source Hardware</h1><p><a href="http://www.oshwa.org/open-source-hardware-logo/" target="_blank" rel="external">http://www.oshwa.org/open-source-hardware-logo/</a><br><a href="http://kb.open.eefocus.com/index.php" target="_blank" rel="external">http://kb.open.eefocus.com/index.php</a></p>
<h1 id="Duino"><a href="#Duino" class="headerlink" title="Duino"></a>Duino</h1><p><a href="https://www.arduino.cc/" target="_blank" rel="external">https://www.arduino.cc/</a><br><a href="http://www.drduino.com/" target="_blank" rel="external">http://www.drduino.com/</a><br><a href="https://www.microduino.cn/" target="_blank" rel="external">https://www.microduino.cn/</a><br><a href="http://www.duino-robotics.com/" target="_blank" rel="external">http://www.duino-robotics.com/</a><br><a href="http://www.86duino.com/" target="_blank" rel="external">http://www.86duino.com/</a><br><a href="http://www.rfduino.com/" target="_blank" rel="external">http://www.rfduino.com/</a><br><a href="http://www.netduino.com/" target="_blank" rel="external">http://www.netduino.com/</a><br><a href="http://wtfduino.calumk.com/" target="_blank" rel="external">http://wtfduino.calumk.com/</a><br><a href="https://easyeda.com/seeedstudio/Xadow_Duino-M5d71jdvp" target="_blank" rel="external">https://easyeda.com/seeedstudio/Xadow_Duino-M5d71jdvp</a><br><a href="http://rasp.io/" target="_blank" rel="external">http://rasp.io/</a><br><a href="http://www.motoduino.com/" target="_blank" rel="external">http://www.motoduino.com/</a><br><a href="http://cubieboard.org/" target="_blank" rel="external">http://cubieboard.org/</a><br><a href="http://www.techbang.com/posts/42412-maker" target="_blank" rel="external">http://www.techbang.com/posts/42412-maker</a><br><a href="http://wiki.iteadstudio.com/Product" target="_blank" rel="external">http://wiki.iteadstudio.com/Product</a></p>
<h1 id="Raspberry"><a href="#Raspberry" class="headerlink" title="Raspberry"></a>Raspberry</h1><p><a href="https://www.cooking-hacks.com/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge/" target="_blank" rel="external">https://www.cooking-hacks.com/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge/</a></p>
<h1 id="Sparkfun"><a href="#Sparkfun" class="headerlink" title="Sparkfun"></a>Sparkfun</h1><p><a href="https://www.sparkfun.com/products/13111" target="_blank" rel="external">https://www.sparkfun.com/products/13111</a><br><a href="https://www.sparkfun.com/products/11511" target="_blank" rel="external">https://www.sparkfun.com/products/11511</a><br><a href="https://www.sparkfun.com/products/11683" target="_blank" rel="external">https://www.sparkfun.com/products/11683</a></p>
<h1 id="blockly"><a href="#blockly" class="headerlink" title="blockly"></a>blockly</h1><p><a href="https://developers.google.com/blockly/" target="_blank" rel="external">https://developers.google.com/blockly/</a><br><a href="https://blockly-demo.appspot.com/static/demos/index.html" target="_blank" rel="external">https://blockly-demo.appspot.com/static/demos/index.html</a><br><a href="https://blockly-games.appspot.com/?lang=zh-hans" target="_blank" rel="external">https://blockly-games.appspot.com/?lang=zh-hans</a><br><a href="https://studio.code.org/" target="_blank" rel="external">https://studio.code.org/</a></p>
<h1 id="Ardublock"><a href="#Ardublock" class="headerlink" title="Ardublock"></a>Ardublock</h1><p><a href="https://sourceforge.net/projects/ardublock/" target="_blank" rel="external">https://sourceforge.net/projects/ardublock/</a><br><a href="http://blog.ardublock.com/zh/category/tutorial/" target="_blank" rel="external">http://blog.ardublock.com/zh/category/tutorial/</a><br><a href="https://learn.sparkfun.com/resources/59" target="_blank" rel="external">https://learn.sparkfun.com/resources/59</a><br><a href="https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/ardublock" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/ardublock</a></p>
<h1 id="Mixly米思齐"><a href="#Mixly米思齐" class="headerlink" title="Mixly米思齐"></a>Mixly米思齐</h1><p><a href="http://mixly.cn/" target="_blank" rel="external">http://mixly.cn/</a></p>
<h1 id="MIT-App-Inventor-2"><a href="#MIT-App-Inventor-2" class="headerlink" title="MIT App Inventor 2"></a>MIT App Inventor 2</h1><p><a href="http://app.gzjkw.net/" target="_blank" rel="external">http://app.gzjkw.net/</a><br><a href="http://blog.cavedu.com/programming-language/appinventor/appinventorandarduinowithbluetooth/" target="_blank" rel="external">http://blog.cavedu.com/programming-language/appinventor/appinventorandarduinowithbluetooth/</a><br><a href="http://appinventor.pevest.com/?page_id=10" target="_blank" rel="external">http://appinventor.pevest.com/?page_id=10</a><br><a href="https://sites.google.com/site/jingprogram/app" target="_blank" rel="external">https://sites.google.com/site/jingprogram/app</a></p>
<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><p><a href="http://www.sketchup.com/" target="_blank" rel="external">http://www.sketchup.com/</a><br><a href="http://www.123dapp.com/design" target="_blank" rel="external">http://www.123dapp.com/design</a><br><a href="https://scratch.mit.edu/" target="_blank" rel="external">https://scratch.mit.edu/</a><br><a href="http://s4a.cat/" target="_blank" rel="external">http://s4a.cat/</a><br><a href="http://www.arduino.cc/" target="_blank" rel="external">http://www.arduino.cc/</a><br><a href="http://www.arduino.org.cn/" target="_blank" rel="external">http://www.arduino.org.cn/</a><br><a href="https://en.wikipedia.org/wiki/Arduino" target="_blank" rel="external">https://en.wikipedia.org/wiki/Arduino</a><br><a href="http://i.youku.com/u/UNDYwMzEyOTk2" target="_blank" rel="external">http://i.youku.com/u/UNDYwMzEyOTk2</a><br><a href="http://www.makerlab.tw/resources/" target="_blank" rel="external">http://www.makerlab.tw/resources/</a></p>
<h1 id="3D-Modeling-and-Printing-：3D建模和打印"><a href="#3D-Modeling-and-Printing-：3D建模和打印" class="headerlink" title="3D Modeling and Printing ：3D建模和打印"></a>3D Modeling and Printing ：3D建模和打印</h1><p><a href="http://the3doodler.com/" target="_blank" rel="external">http://the3doodler.com/</a><br><a href="https://www.ultimaker.com/" target="_blank" rel="external">https://www.ultimaker.com/</a><br><a href="http://www.makerbot.com/" target="_blank" rel="external">http://www.makerbot.com/</a><br><a href="http://www.sketchup.com/" target="_blank" rel="external">http://www.sketchup.com/</a><br><a href="https://www.tinkercad.com/" target="_blank" rel="external">https://www.tinkercad.com/</a></p>
<h1 id="Circuits：电路"><a href="#Circuits：电路" class="headerlink" title="Circuits：电路"></a>Circuits：电路</h1><p><a href="http://snapcircuits.net.tw/" target="_blank" rel="external">http://snapcircuits.net.tw/</a><br><a href="http://courseweb.stthomas.edu/apthomas/SquishyCircuits/buildingCircuits.htm" target="_blank" rel="external">http://courseweb.stthomas.edu/apthomas/SquishyCircuits/buildingCircuits.htm</a><br><a href="http://littlebits.cc/" target="_blank" rel="external">http://littlebits.cc/</a><br><a href="http://wiki.funmetas.com/index.php?title=%E9%A6%96%E9%A1%B5" target="_blank" rel="external">http://wiki.funmetas.com/index.php?title=%E9%A6%96%E9%A1%B5</a><br><a href="http://www.makeymakey.com/" target="_blank" rel="external">http://www.makeymakey.com/</a></p>
<h1 id="Programming-Coding：程序设计-编程"><a href="#Programming-Coding：程序设计-编程" class="headerlink" title="Programming/Coding：程序设计/编程"></a>Programming/Coding：程序设计/编程</h1><p><a href="https://blockly-games.appspot.com/" target="_blank" rel="external">https://blockly-games.appspot.com/</a><br><a href="https://scratch.mit.edu/" target="_blank" rel="external">https://scratch.mit.edu/</a><br><a href="http://www.arduino.cc/" target="_blank" rel="external">http://www.arduino.cc/</a><br><a href="https://www.raspberrypi.org/" target="_blank" rel="external">https://www.raspberrypi.org/</a></p>
<h1 id="Robotics：机器人"><a href="#Robotics：机器人" class="headerlink" title="Robotics：机器人"></a>Robotics：机器人</h1><p><a href="http://www.lego.com/zh-cn/mindstorms/?domainredir=mindstorms.lego.com" target="_blank" rel="external">http://www.lego.com/zh-cn/mindstorms/?domainredir=mindstorms.lego.com</a><br><a href="http://www.firstinspires.org/robotics/frc" target="_blank" rel="external">http://www.firstinspires.org/robotics/frc</a><br><a href="http://www.arduino.org.cn/products/kits/6-arduino-kits/arduino-starter-kit" target="_blank" rel="external">http://www.arduino.org.cn/products/kits/6-arduino-kits/arduino-starter-kit</a><br><a href="http://mobilerobotkit.com/robot-kits.html" target="_blank" rel="external">http://mobilerobotkit.com/robot-kits.html</a></p>
<h1 id="Tools-amp-Materials-工具及耗材"><a href="#Tools-amp-Materials-工具及耗材" class="headerlink" title="Tools &amp; Materials : 工具及耗材"></a>Tools &amp; Materials : 工具及耗材</h1><ul>
<li>Woodworking：木工</li>
<li>Metalworking：金工</li>
<li>Laser Cutting：激光切割</li>
<li>CNC Cutting： 数控切割</li>
</ul>
<h1 id="MakerSpae"><a href="#MakerSpae" class="headerlink" title="MakerSpae"></a>MakerSpae</h1><p><a href="http://www.makezine.com.tw/makerspace.html" target="_blank" rel="external">http://www.makezine.com.tw/makerspace.html</a><br><a href="http://www.fablabtaiwan.org.tw/" target="_blank" rel="external">http://www.fablabtaiwan.org.tw/</a><br><a href="http://www.fablabtaipei.org/2510520497303403537320633.html" target="_blank" rel="external">http://www.fablabtaipei.org/2510520497303403537320633.html</a><br><a href="http://www.weschool.tw/26377217382012335373206332403720855.html" target="_blank" rel="external">http://www.weschool.tw/26377217382012335373206332403720855.html</a></p>
<h1 id="国内创客空间"><a href="#国内创客空间" class="headerlink" title="国内创客空间"></a>国内创客空间</h1><p><a href="http://www.chaihuo.org/products/list" target="_blank" rel="external">http://www.chaihuo.org/products/list</a><br><a href="http://xinchejian.com/?lang=zh" target="_blank" rel="external">http://xinchejian.com/?lang=zh</a><br><a href="http://www.bjmakerspace.com/" target="_blank" rel="external">http://www.bjmakerspace.com/</a></p>
<h1 id="Digital-Sandbox"><a href="#Digital-Sandbox" class="headerlink" title="Digital Sandbox"></a>Digital Sandbox</h1><p><a href="https://www.sparkfun.com/products/12651" target="_blank" rel="external">https://www.sparkfun.com/products/12651</a><br><a href="http://b2b.hc360.com/supplyself/348068096.html" target="_blank" rel="external">http://b2b.hc360.com/supplyself/348068096.html</a><br><a href="https://learn.sparkfun.com/tutorials/digital-sandbox-experiment-guide/setting-up-arduino-and-ardublock" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/digital-sandbox-experiment-guide/setting-up-arduino-and-ardublock</a><br><a href="http://classes.engr.oregonstate.edu/eecs/fall2015/cs160-501/labs/lab_01.pdf" target="_blank" rel="external">http://classes.engr.oregonstate.edu/eecs/fall2015/cs160-501/labs/lab_01.pdf</a><br><a href="https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/codebender" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/codebender</a></p>
<h1 id="创客空间里面都有那些设备"><a href="#创客空间里面都有那些设备" class="headerlink" title="创客空间里面都有那些设备"></a>创客空间里面都有那些设备</h1><p><a href="http://www.zhishihao.com/xue/show/155996" target="_blank" rel="external">http://www.zhishihao.com/xue/show/155996</a></p>
<h1 id="趣味电子"><a href="#趣味电子" class="headerlink" title="趣味电子"></a>趣味电子</h1><ul>
<li><strong>Back in Time木质时光倒流时钟</strong><br><a href="https://item.taobao.com/item.htm?spm=a1z10.5-c.w4002-11172345288.31.fQeFq4&amp;id=45557720848" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=a1z10.5-c.w4002-11172345288.31.fQeFq4&amp;id=45557720848</a></li>
<li><strong>基于Arduino设计的简易宠物喂食机</strong><br><a href="http://bbs.intorobot.com/thread-683-1-1.html" target="_blank" rel="external">http://bbs.intorobot.com/thread-683-1-1.html</a></li>
<li><strong>3D打印全自动宠物喂食器</strong><br><a href="http://bbs.intorobot.com/thread-684-1-1.html" target="_blank" rel="external">http://bbs.intorobot.com/thread-684-1-1.html</a></li>
<li><strong>Plotclock小贱钟</strong><br><a href="http://www.arduino.cn/thread-6049-1-1.html" target="_blank" rel="external">http://www.arduino.cn/thread-6049-1-1.html</a><br><a href="http://jjrobots.com/projects-2/" target="_blank" rel="external">http://jjrobots.com/projects-2/</a></li>
</ul>
<h1 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h1><p><a href="http://robert.cireddu.free.fr/" target="_blank" rel="external">http://robert.cireddu.free.fr/</a><br><a href="http://pedagogie.ac-toulouse.fr/lp-baylet-valence-agen/" target="_blank" rel="external">http://pedagogie.ac-toulouse.fr/lp-baylet-valence-agen/</a></p>
<h1 id="STEM"><a href="#STEM" class="headerlink" title="STEM"></a>STEM</h1><p><a href="http://www.creativelearningsystems.com/" target="_blank" rel="external">http://www.creativelearningsystems.com/</a></p>
<h1 id="走进3D"><a href="#走进3D" class="headerlink" title="走进3D"></a>走进3D</h1><p><a href="http://k12.leiphone.com/article/201601/Nnf0kNrFwit3zZBV.html" target="_blank" rel="external">http://k12.leiphone.com/article/201601/Nnf0kNrFwit3zZBV.html</a><br><a href="http://www.e-works.net.cn/report/2015stratasys3d/2015stratasys3d.html" target="_blank" rel="external">http://www.e-works.net.cn/report/2015stratasys3d/2015stratasys3d.html</a></p>
<h1 id="配套"><a href="#配套" class="headerlink" title="配套"></a>配套</h1><p><strong>洞洞板</strong><br><a href="https://item.taobao.com/item.htm?spm=2013.1.20141001.1.QOwtaJ&amp;id=35618674019&amp;;scm=1007.10115.22552.100200300000000&amp;pvid=3a6eaed6-f152-4ad3-a716-ed9d05874607" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=2013.1.20141001.1.QOwtaJ&amp;id=35618674019&amp;;scm=1007.10115.22552.100200300000000&amp;pvid=3a6eaed6-f152-4ad3-a716-ed9d05874607</a></p>
<h1 id="想做创客？这些关于开源硬件的知识你不得不知"><a href="#想做创客？这些关于开源硬件的知识你不得不知" class="headerlink" title="想做创客？这些关于开源硬件的知识你不得不知"></a>想做创客？这些关于开源硬件的知识你不得不知</h1><p><a href="http://www.csdn.net/article/2014-06-30/2820457/2" target="_blank" rel="external">http://www.csdn.net/article/2014-06-30/2820457/2</a></p>
<h1 id="DIY示波器"><a href="#DIY示波器" class="headerlink" title="DIY示波器"></a>DIY示波器</h1><p><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.HxgqLG&amp;id=43507787334&amp;ns=1&amp;abbucket=20#detail" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=a230r.1.14.16.HxgqLG&amp;id=43507787334&amp;ns=1&amp;abbucket=20#detail</a><br><a href="http://www.jyetech.com/index.php" target="_blank" rel="external">http://www.jyetech.com/index.php</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;wiki&quot;&gt;&lt;a href=&quot;#wiki&quot; class=&quot;headerlink&quot; title=&quot;wiki&quot;&gt;&lt;/a&gt;wiki&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.seeedstudio.com/wiki/Main_Page&quot;&gt;http://www.seeedstudio.com/wiki/Main_Page&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://wiki.microduino.cc/index.php&quot;&gt;https://wiki.microduino.cc/index.php&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://wiki.dfrobot.com.cn/index.php&quot;&gt;http://wiki.dfrobot.com.cn/index.php&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.alsrobot.cn/wiki/&quot;&gt;http://www.alsrobot.cn/wiki/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://duinopeak.com/wiki/index.php&quot;&gt;http://duinopeak.com/wiki/index.php&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="创客" scheme="http://cuiqingwei.github.io/tags/%E5%88%9B%E5%AE%A2/"/>
    
      <category term="开源硬件" scheme="http://cuiqingwei.github.io/tags/%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6/"/>
    
      <category term="链接" scheme="http://cuiqingwei.github.io/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>创客硬件</title>
    <link href="http://cuiqingwei.github.io/2015/11/18/2015-11-18-%E5%88%9B%E5%AE%A2%E7%A1%AC%E4%BB%B6/"/>
    <id>http://cuiqingwei.github.io/2015/11/18/2015-11-18-创客硬件/</id>
    <published>2015-11-17T16:26:00.000Z</published>
    <updated>2016-09-18T08:58:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>SparkFun Electronics<br><a href="https://www.sparkfun.com/" target="_blank" rel="external">https://www.sparkfun.com/</a><br>美国Sparkfun是世界最具盛名的电子零配件供应商，主要面向产品原型开发以及项目设计。电子产品种类相当齐全多大上万种，有许多国内少见的电子产品都可以在这里觅寻到。</p>
<p>Adafruit Industries, Unique &amp; fun DIY electronics and kits<br><a href="http://www.adafruit.com/" target="_blank" rel="external">http://www.adafruit.com/</a></p>
<p>美国纽约的Adafruit是一家DIY公司，网上对此公司评价为创意无底限。该公司在智能穿戴设备、物联网上有很好的创意与发展。Adafruit的CEO是MIT工程硕士毕业的 Limor Fried，是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。<br><a id="more"></a><br>哈尔滨奥松机器人<br><a href="http://www.alsrobot.cn/index.php" target="_blank" rel="external">http://www.alsrobot.cn/index.php</a></p>
<p>dfrobot - DF创客社区-分享创造的喜悦<br><a href="http://www.dfrobot.com.cn/" target="_blank" rel="external">http://www.dfrobot.com.cn/</a></p>
<p>DFRobot-开源硬件和机器人<br><a href="http://www.dfrobot.cn/" target="_blank" rel="external">http://www.dfrobot.cn/</a></p>
<p>DFRobot 官方旗舰<br><a href="https://dfrobot.taobao.com/" target="_blank" rel="external">https://dfrobot.taobao.com/</a></p>
<p>DUINOPEAK-开源硬件社区-创客基地 | 将想法变为现实<br><a href="http://duinopeak.cn/wiki/index.php?title=%E9%A6%96%E9%A1%B5" target="_blank" rel="external">http://duinopeak.cn/wiki/index.php?title=%E9%A6%96%E9%A1%B5</a></p>
<p>DuinoPeak商城<br><a href="https://makeshields.taobao.com/" target="_blank" rel="external">https://makeshields.taobao.com/</a></p>
<p>Duinopeak<br><a href="http://www.duinopeak.com/store/" target="_blank" rel="external">http://www.duinopeak.com/store/</a></p>
<p>Seeed Studio! 深圳矽递科技<br>成立于2008年，是一家致力于促进开源硬件发展的服务型企业。我们通过提供模块化的快速开发工具，使设计者能根据创意，简单快速地开发出产品原型。此外，我们还通过提供从研发辅助，采购生产到渠道分销的一站式配套服务，帮助设计者实现从创意到产品的转换。3年以来，我们不断加大技术和研发投入，努力优化供应链和销售渠道，使得企业的服务能力一直处于行业领先状态。此外，为鼓励民族自主创新精神，我们还投资建立了深圳第一家Hackerspace——柴火，努力为设计者的创造和创业打造一个良好环境。坚持不懈的努力为我们赢得了行业尊重和客户信任。目前，我们已经与众多设计者建立了紧密的合作关系，其中包括Google, MICROSOFT, MIT, NASA, MAKEZINE等知名企业和组织。在开源硬件的框架下，合作推出了涉及新媒体艺术、嵌入式平台、物联网、智能家居、便携式仪器等领域的一系列明星产品和方案。基于对行业的深厚理解，以及不断的自我完善，我们正加快步伐，为实现”以促进开源硬件发展来推动创新精神传播”的愿景目标而前进。</p>
<p>淘宝商城<br><a href="https://shop105412212.taobao.com/" target="_blank" rel="external">https://shop105412212.taobao.com/</a></p>
<p>Arduino 是一款便捷灵活、方便上手的开源电子原型平台，包含硬件（各种型号的arduino板）和软件（arduino IDE)。它适用于艺术家、设计师、爱好者和对于“互动”有兴趣的朋友们。Arduino，是一个基于开放原始码的软硬体平台，构建于开放原始码simple I/O介面版，并且具有使用类似Java，C语言的Processing/Wiring开发环境</p>
<p>pcDuino是一种高性能，高性价比的迷你PC的平台，能够运行PC操作系统，如Ubuntu和Android的ICS等。它可以通过内置HDMI接口输出视频到电视或显示器屏幕。 pcDuino专门针对开源社区快速增长的需求，即希望有一个平台可以运行完整的PC操作系统，容易使用的工具链和兼容流行的Arduino开放的生态系统，如Arduino shield和开源项目等。<br>pcDuino的硬件性能指标远超树莓派，性能稳定，做工精良。pcDuino迷你计算机的CPU采用1GHz ARM Cortex A8内核，DRAM为1GB，板载存储达到2GB Flash, 完全兼容Arduino接口。另外，pcDuino 可以从NAND或者从mini-SD卡(TF卡)启动，在NAND Flash内有出厂预装了ubuntu系统，您拿到手即可使用。</p>
<p>Raspberry Pi是一款基于Linux系统的只有一张信用卡大小的单板机计算机。它由英国的树莓派基金会所开发，目的是以低价硬件及自由软件刺激在学校的基本的电脑科学教育。</p>
<p>Pololu是美国第一大机器人零件巨头公司，电子产品制造商和在线零售商。Pololu的主要产品是操控机器人各种运动的小型电子模块。从传感器和运动控制电子产品到电机和车轮来完成机器人的组装。<br><a href="https://www.pololu.com/" target="_blank" rel="external">https://www.pololu.com/</a></p>
<p>香港云雀视维技术有限公司 Skylark FPV Technologies Co., Ltd. 简称云雀视维（Skylark FPV）是业界领先的FPV飞行解决供应商，一直以来，我们基于客户需求持续创新，致力于为客户提供优质、安全、稳定的FPV配套设备和系统完善的解决方案。目前可以提供包含视频叠加(OSD)系统、自动天线跟踪、飞行姿态与控制、高精度抗干扰GPS等十余款系列产品，以及全系统的FPV飞行解决方案</p>
<p>三大主流开源硬件对比：Arduino vs BeagleBone vs Raspberry Pi<br><a href="http://www.csdn.net/article/2013-05-02/2815109-arduinouno-vs-beaglebone-vs-raspberrypi" target="_blank" rel="external">http://www.csdn.net/article/2013-05-02/2815109-arduinouno-vs-beaglebone-vs-raspberrypi</a></p>
<p>MIT 工程硕士毕业的 Limor Fried是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。<br><a href="http://www.leiphone.com/news/201406/ladyada-maker.html" target="_blank" rel="external">http://www.leiphone.com/news/201406/ladyada-maker.html</a></p>
<p>永不消逝的电波——Arduino制作BCD码电波钟<br><a href="http://www.geek-workshop.com/thread-7797-1-1.html" target="_blank" rel="external">http://www.geek-workshop.com/thread-7797-1-1.html</a></p>
<p>3D打印笔作品<br><a href="http://www.3dyaya.com/" target="_blank" rel="external">http://www.3dyaya.com/</a></p>
<p>创客利器——关注3D打印<br><a href="http://segmentfault.com/a/1190000000458980" target="_blank" rel="external">http://segmentfault.com/a/1190000000458980</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SparkFun Electronics&lt;br&gt;&lt;a href=&quot;https://www.sparkfun.com/&quot;&gt;https://www.sparkfun.com/&lt;/a&gt;&lt;br&gt;美国Sparkfun是世界最具盛名的电子零配件供应商，主要面向产品原型开发以及项目设计。电子产品种类相当齐全多大上万种，有许多国内少见的电子产品都可以在这里觅寻到。&lt;/p&gt;
&lt;p&gt;Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;br&gt;&lt;a href=&quot;http://www.adafruit.com/&quot;&gt;http://www.adafruit.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;美国纽约的Adafruit是一家DIY公司，网上对此公司评价为创意无底限。该公司在智能穿戴设备、物联网上有很好的创意与发展。Adafruit的CEO是MIT工程硕士毕业的 Limor Fried，是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。&lt;br&gt;
    
    </summary>
    
    
      <category term="创客" scheme="http://cuiqingwei.github.io/tags/%E5%88%9B%E5%AE%A2/"/>
    
      <category term="开源硬件" scheme="http://cuiqingwei.github.io/tags/%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6/"/>
    
      <category term="链接" scheme="http://cuiqingwei.github.io/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>折叠公路车</title>
    <link href="http://cuiqingwei.github.io/2015/10/03/2015-10-03-%E6%8A%98%E5%8F%A0%E5%85%AC%E8%B7%AF%E8%BD%A6/"/>
    <id>http://cuiqingwei.github.io/2015/10/03/2015-10-03-折叠公路车/</id>
    <published>2015-10-03T00:57:00.000Z</published>
    <updated>2016-09-18T08:58:28.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Ori-Surpaz-CR-1-0"><a href="#Ori-Surpaz-CR-1-0" class="headerlink" title="Ori Surpaz CR 1.0"></a>Ori Surpaz CR 1.0</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg" alt="1"><br><a id="more"></a><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_2.jpg" alt="2"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_3.jpg" alt="3"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_1.jpg" alt="4"></p>
<h4 id="Airnimal-Joey-Explore-Drop"><a href="#Airnimal-Joey-Explore-Drop" class="headerlink" title="Airnimal Joey - Explore Drop"></a>Airnimal Joey - Explore Drop</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=46" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=46</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_46_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_46_1.jpg" alt="2"></p>
<h4 id="Airnimal-Chameleon-Performance-Sport"><a href="#Airnimal-Chameleon-Performance-Sport" class="headerlink" title="Airnimal Chameleon - Performance Sport"></a>Airnimal Chameleon - Performance Sport</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=49" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=49</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_49_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_49_1.jpg" alt="2"></p>
<h4 id="Airnimal-Joey-Elite-Drop"><a href="#Airnimal-Joey-Elite-Drop" class="headerlink" title="Airnimal Joey - Elite Drop"></a>Airnimal Joey - Elite Drop</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=48" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=48</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_48_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_48_1.jpg" alt="2"></p>
<h4 id="Airnimal-Rhino-Road"><a href="#Airnimal-Rhino-Road" class="headerlink" title="Airnimal Rhino - Road"></a>Airnimal Rhino - Road</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=54" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=54</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_54_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_54_1.jpg" alt="2"></p>
<h4 id="Airnimal-Chameleon-Ultra"><a href="#Airnimal-Chameleon-Ultra" class="headerlink" title="Airnimal Chameleon - Ultra"></a>Airnimal Chameleon - Ultra</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=50" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=50</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_50_0.jpg" alt="1"></p>
<h4 id="Airnimal-Chameleon-Ultima"><a href="#Airnimal-Chameleon-Ultima" class="headerlink" title="Airnimal Chameleon - Ultima"></a>Airnimal Chameleon - Ultima</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=51" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=51</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_51_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-Pocket-Rocket-SELECT-2013"><a href="#Bike-Friday-Pocket-Rocket-SELECT-2013" class="headerlink" title="Bike Friday Pocket Rocket SELECT 2013"></a>Bike Friday Pocket Rocket SELECT 2013</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=209" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=209</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_209_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-Slik-Road-Alfine-11-extra-451"><a href="#Bike-Friday-Slik-Road-Alfine-11-extra-451" class="headerlink" title="Bike Friday Slik Road Alfine 11 extra - 451"></a>Bike Friday Slik Road Alfine 11 extra - 451</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=205" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=205</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_205_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-PR-Super-Pro-SRAM-Red-Groupo"><a href="#Bike-Friday-PR-Super-Pro-SRAM-Red-Groupo" class="headerlink" title="Bike Friday PR Super Pro SRAM Red Groupo"></a>Bike Friday PR Super Pro SRAM Red Groupo</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=208" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=208</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_208_0.jpg" alt="1"></p>
<h4 id="Dahon-KC075TT"><a href="#Dahon-KC075TT" class="headerlink" title="Dahon KC075TT"></a>Dahon KC075TT</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=38" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=38</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_38_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_38_1.jpg" alt="2"></p>
<h4 id="Dahon-KAA075TT"><a href="#Dahon-KAA075TT" class="headerlink" title="Dahon KAA075TT"></a>Dahon KAA075TT</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=30" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=30</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_30_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_30_1.jpg" alt="2"></p>
<h4 id="Dahon-PDA006"><a href="#Dahon-PDA006" class="headerlink" title="Dahon PDA006"></a>Dahon PDA006</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=16" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=16</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_16_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_16_1.jpg" alt="2"></p>
<h4 id="Doppelganger-242-Artismo"><a href="#Doppelganger-242-Artismo" class="headerlink" title="Doppelganger 242 Artismo"></a>Doppelganger 242 Artismo</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=146" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=146</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_146_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_146_1.jpg" alt="2"></p>
<h4 id="Doppelganger-217-Miragen"><a href="#Doppelganger-217-Miragen" class="headerlink" title="Doppelganger 217 Miragen"></a>Doppelganger 217 Miragen</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=143" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=143</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_143_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_143_1.jpg" alt="2"></p>
<h4 id="Oyama-SKYLINE-PRO-CR20"><a href="#Oyama-SKYLINE-PRO-CR20" class="headerlink" title="Oyama SKYLINE PRO CR20"></a>Oyama SKYLINE PRO CR20</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=399" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=399</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_399_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RX-5R"><a href="#Oyama-FBI-RX-5R" class="headerlink" title="Oyama FBI RX-5R"></a>Oyama FBI RX-5R</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=181" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=181</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_181_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RX5-2015"><a href="#Oyama-FBI-RX5-2015" class="headerlink" title="Oyama FBI-RX5 (2015)"></a>Oyama FBI-RX5 (2015)</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=629" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=629</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_629_0.jpg" alt="1"></p>
<h4 id="KHS-F20-R451"><a href="#KHS-F20-R451" class="headerlink" title="KHS F20-R451"></a>KHS F20-R451</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=503" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=503</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_503_0.jpg" alt="1"></p>
<h4 id="KHS-P20-RD"><a href="#KHS-P20-RD" class="headerlink" title="KHS P20 - RD"></a>KHS P20 - RD</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=359" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=359</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_359_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-TR3"><a href="#Oyama-FBI-TR3" class="headerlink" title="Oyama FBI-TR3"></a>Oyama FBI-TR3</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=624" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=624</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_624_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RR3"><a href="#Oyama-FBI-RR3" class="headerlink" title="Oyama FBI-RR3"></a>Oyama FBI-RR3</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=622" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=622</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_622_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-TR5"><a href="#Oyama-FBI-TR5" class="headerlink" title="Oyama FBI-TR5"></a>Oyama FBI-TR5</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=623" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=623</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_623_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RR5"><a href="#Oyama-FBI-RR5" class="headerlink" title="Oyama FBI-RR5"></a>Oyama FBI-RR5</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=621" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=621</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_621_0.jpg" alt="1"></p>
<h4 id="Ori-Surpaz-CR-1-0-1"><a href="#Ori-Surpaz-CR-1-0-1" class="headerlink" title="Ori Surpaz CR 1.0"></a>Ori Surpaz CR 1.0</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_2.jpg" alt="2"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_3.jpg" alt="3"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_1.jpg" alt="4"></p>
<h4 id="Tern-VERGE-X30h"><a href="#Tern-VERGE-X30h" class="headerlink" title="Tern VERGE X30h"></a>Tern VERGE X30h</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=87" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=87</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_87_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_87_1.jpg" alt="2"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Ori-Surpaz-CR-1-0&quot;&gt;&lt;a href=&quot;#Ori-Surpaz-CR-1-0&quot; class=&quot;headerlink&quot; title=&quot;Ori Surpaz CR 1.0&quot;&gt;&lt;/a&gt;Ori Surpaz CR 1.0&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://15km.hk/index.php?comCat=bikedetails&amp;amp;bikeId=386&quot;&gt;http://15km.hk/index.php?comCat=bikedetails&amp;amp;bikeId=386&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg&quot; alt=&quot;1&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="骑行" scheme="http://cuiqingwei.github.io/tags/%E9%AA%91%E8%A1%8C/"/>
    
      <category term="折叠公路车" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E5%8F%A0%E5%85%AC%E8%B7%AF%E8%BD%A6/"/>
    
      <category term="自行车" scheme="http://cuiqingwei.github.io/tags/%E8%87%AA%E8%A1%8C%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="http://cuiqingwei.github.io/2015/08/18/2015-08-18-Linux/"/>
    <id>http://cuiqingwei.github.io/2015/08/18/2015-08-18-Linux/</id>
    <published>2015-08-18T06:50:00.000Z</published>
    <updated>2016-09-18T08:58:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>通过8个技巧让你成为一个超强的Linux终端用户</strong> <a href="http://www.geekfan.net/7112/" target="_blank" rel="external">http://www.geekfan.net/7112/</a></p>
<p><strong>Tab</strong> 键自动补全<br>管道符命令　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls | grep really</div></pre></td></tr></table></figure></p>
<p>通配符<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm really*name</div></pre></td></tr></table></figure></p>
<p>输出重定向　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls &gt; file1</div></pre></td></tr></table></figure></p>
<p>命令行历史　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hirstory</div></pre></td></tr></table></figure></p>
<p>波浪符”<strong>~</strong>”代表当前用户的主目录。所以，你可以使用”cd ~”切换到你的主目录，而不用输入”cd /home/name”。<br>这对相对路径同样使用，比如”cd ~/Desktop”会切换到当前用户的桌面目录。<br>与之类似的是，”<strong>.</strong>”代表当前目录，”..”代表父级目录。所有，”cd ..”会跳到父级目录。<br><a id="more"></a><br>后台命令　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firefox &amp;</div></pre></td></tr></table></figure></p>
<p>条件执行　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sleep 5 &amp;&amp; gnome-screenshot 停5秒然后运行gnome的截屏工具</div></pre></td></tr></table></figure></p>
<p><strong>在Linux上安装ack</strong> <a href="http://www.geekfan.net/6881/" target="_blank" rel="external">http://www.geekfan.net/6881/</a></p>
<p><strong>linux 文本查找 grep, ack</strong> <a href="http://ju.outofmemory.cn/entry/26149" target="_blank" rel="external">http://ju.outofmemory.cn/entry/26149</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ wget http://beyondgrep.com/ack-2.12-single-file</div><div class="line">$ sudo mv ack-2.12-single-file /usr/<span class="built_in">local</span>/bin/ack</div><div class="line">$ sudo chmod 0755 /usr/<span class="built_in">local</span>/bin/ack</div></pre></td></tr></table></figure>
<p><strong>怎样从Linux终端管理进程：10个你必须知道的命令</strong> <a href="http://www.geekfan.net/7112/" target="_blank" rel="external">http://www.geekfan.net/7112/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">top、htop、ps、pstree、<span class="built_in">kill</span>、killall、xkill、pgrep</div></pre></td></tr></table></figure>
<p><strong>如何用Linux命令行管理网络：11个你必须知道的命令</strong>    <a href="http://www.geekfan.net/7192/" target="_blank" rel="external">http://www.geekfan.net/7192/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ping -c 4 baidu.com</div><div class="line">tracepath baidu.com</div><div class="line">tracerouter baidu.com</div><div class="line">mtr baidu.com</div><div class="line">whois baidu.com</div><div class="line">ifconfig eth0</div><div class="line">sudo ifdown eth0</div><div class="line">sudo ifup eth0</div><div class="line">sudo dhclient -r</div><div class="line">netstat <span class="_">-s</span></div></pre></td></tr></table></figure>
<p><strong>使用Linux命令行测试网速</strong>    <a href="http://www.geekfan.net/5521/" target="_blank" rel="external">http://www.geekfan.net/5521/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py</div><div class="line">$ chmod a+rx speedtest_cli.py</div><div class="line">$ sudo mv speedtest_cli.py /usr/<span class="built_in">local</span>/bin/speedtest-cli</div><div class="line">$ sudo chown root:root /usr/<span class="built_in">local</span>/bin/speedtest-cli</div><div class="line">$ speedtest-cli</div></pre></td></tr></table></figure>
<p><strong>三张图看遍Linux 性能监控、测试、优化工具</strong> <a href="http://www.geekfan.net/13481/" target="_blank" rel="external">http://www.geekfan.net/13481/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;通过8个技巧让你成为一个超强的Linux终端用户&lt;/strong&gt; &lt;a href=&quot;http://www.geekfan.net/7112/&quot;&gt;http://www.geekfan.net/7112/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tab&lt;/strong&gt; 键自动补全&lt;br&gt;管道符命令　&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ls | grep really&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通配符&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;rm really*name&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出重定向　&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ls &amp;gt; file1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;命令行历史　&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hirstory&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;波浪符”&lt;strong&gt;~&lt;/strong&gt;”代表当前用户的主目录。所以，你可以使用”cd ~”切换到你的主目录，而不用输入”cd /home/name”。&lt;br&gt;这对相对路径同样使用，比如”cd ~/Desktop”会切换到当前用户的桌面目录。&lt;br&gt;与之类似的是，”&lt;strong&gt;.&lt;/strong&gt;”代表当前目录，”..”代表父级目录。所有，”cd ..”会跳到父级目录。&lt;br&gt;
    
    </summary>
    
    
      <category term="总结" scheme="http://cuiqingwei.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="linux" scheme="http://cuiqingwei.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>亚马逊云服务免费一年VPS主机翻墙术</title>
    <link href="http://cuiqingwei.github.io/2015/08/15/2015-08-15-%E4%BA%9A%E9%A9%AC%E9%80%8A%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%85%8D%E8%B4%B9%E4%B8%80%E5%B9%B4VPS%E4%B8%BB%E6%9C%BA%E7%BF%BB%E5%A2%99%E6%9C%AF/"/>
    <id>http://cuiqingwei.github.io/2015/08/15/2015-08-15-亚马逊云服务免费一年VPS主机翻墙术/</id>
    <published>2015-08-14T16:29:00.000Z</published>
    <updated>2016-10-08T12:24:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法"><a href="#Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法" class="headerlink" title="Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法"></a>Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法</h1><p><a href="http://www.freehao123.com/amazon-aws/" target="_blank" rel="external">http://www.freehao123.com/amazon-aws/</a></p>
<h1 id="How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT"><a href="#How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT" class="headerlink" title="How-to : Connect to Amazon EC2 Linux AMI using SecureCRT"></a>How-to : Connect to Amazon EC2 Linux AMI using SecureCRT</h1><p><a href="http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/" target="_blank" rel="external">http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/</a><br><a id="more"></a></p>
<h1 id="基于-EC2-Shadowsocks-的翻墙解决方案"><a href="#基于-EC2-Shadowsocks-的翻墙解决方案" class="headerlink" title="基于 EC2 + Shadowsocks 的翻墙解决方案"></a>基于 EC2 + Shadowsocks 的翻墙解决方案</h1><p><a href="http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/" target="_blank" rel="external">http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/</a></p>
<h1 id="烂泥：aws搭建shadowsocks服务器"><a href="#烂泥：aws搭建shadowsocks服务器" class="headerlink" title="烂泥：aws搭建shadowsocks服务器"></a>烂泥：aws搭建shadowsocks服务器</h1><p><a href="http://www.shaoqun.com/a/131549.aspx" target="_blank" rel="external">http://www.shaoqun.com/a/131549.aspx</a></p>
<h1 id="shadowsocks-windows-客户端"><a href="#shadowsocks-windows-客户端" class="headerlink" title="shadowsocks-windows 客户端"></a>shadowsocks-windows 客户端</h1><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">https://github.com/shadowsocks/shadowsocks-windows/releases</a><br><a href="https://www.shadowsocks.com/client.html" target="_blank" rel="external">https://www.shadowsocks.com/client.html</a></p>
<h1 id="Shadowsocks搭建、优化及客户端设置教程-优化之后youbtube的确秒开"><a href="#Shadowsocks搭建、优化及客户端设置教程-优化之后youbtube的确秒开" class="headerlink" title="Shadowsocks搭建、优化及客户端设置教程 (优化之后youbtube的确秒开)"></a>Shadowsocks搭建、优化及客户端设置教程 (优化之后youbtube的确秒开)</h1><p><a href="https://sinray.wordpress.com/2014/12/16/shadowsocks%E6%90%AD%E5%BB%BA%E3%80%81%E4%BC%98%E5%8C%96%E5%8F%8A%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/" target="_blank" rel="external">https://sinray.wordpress.com/2014/12/16/shadowsocks%E6%90%AD%E5%BB%BA%E3%80%81%E4%BC%98%E5%8C%96%E5%8F%8A%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/</a></p>
<p>—- ？？？ 以下待测试 。。。</p>
<h1 id="EC2怎么搭梯子及优化"><a href="#EC2怎么搭梯子及优化" class="headerlink" title="EC2怎么搭梯子及优化"></a>EC2怎么搭梯子及优化</h1><p><a href="https://www.zxc.so/shadowsocks-ladder.html" target="_blank" rel="external">https://www.zxc.so/shadowsocks-ladder.html</a></p>
<h1 id="利用AWS免费账户搭建PPTP-VPN"><a href="#利用AWS免费账户搭建PPTP-VPN" class="headerlink" title="利用AWS免费账户搭建PPTP VPN"></a>利用AWS免费账户搭建PPTP VPN</h1><p><a href="http://blog.banban.me/blog/2014/06/09/li-yong-awsmian-fei-zhang-hu-da-jian-vpn/" target="_blank" rel="external">http://blog.banban.me/blog/2014/06/09/li-yong-awsmian-fei-zhang-hu-da-jian-vpn/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&quot;&gt;&lt;a href=&quot;#Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&quot; class=&quot;headerlink&quot; title=&quot;Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&quot;&gt;&lt;/a&gt;Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.freehao123.com/amazon-aws/&quot;&gt;http://www.freehao123.com/amazon-aws/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT&quot;&gt;&lt;a href=&quot;#How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT&quot; class=&quot;headerlink&quot; title=&quot;How-to : Connect to Amazon EC2 Linux AMI using SecureCRT&quot;&gt;&lt;/a&gt;How-to : Connect to Amazon EC2 Linux AMI using SecureCRT&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/&quot;&gt;http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="aws" scheme="http://cuiqingwei.github.io/tags/aws/"/>
    
      <category term="ec2" scheme="http://cuiqingwei.github.io/tags/ec2/"/>
    
      <category term="shadowsocks" scheme="http://cuiqingwei.github.io/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>常用Wi-Fi网络评测工具</title>
    <link href="http://cuiqingwei.github.io/2015/07/23/2015-07-23-%E5%B8%B8%E7%94%A8Wi-Fi%E7%BD%91%E7%BB%9C%E8%AF%84%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    <id>http://cuiqingwei.github.io/2015/07/23/2015-07-23-常用Wi-Fi网络评测工具/</id>
    <published>2015-07-23T15:33:00.000Z</published>
    <updated>2016-10-09T13:13:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="inSSIDer2"><a href="#inSSIDer2" class="headerlink" title="inSSIDer2"></a>inSSIDer2</h1><p><a href="http://inssider.en.softonic.com/" target="_blank" rel="external">http://inssider.en.softonic.com/</a><br><img src="/img/20150723/1.png" alt=""><br><a id="more"></a></p>
<h1 id="WirelessMon"><a href="#WirelessMon" class="headerlink" title="WirelessMon"></a>WirelessMon</h1><p><a href="http://wirelessmon.com/" target="_blank" rel="external">http://wirelessmon.com/</a><br><a href="http://www.greenxiazai.com/soft/8567.html" target="_blank" rel="external">http://www.greenxiazai.com/soft/8567.html</a><br><img src="/img/20150723/2.jpg" alt=""></p>
<h1 id="NetIQ-Chariot"><a href="#NetIQ-Chariot" class="headerlink" title="NetIQ Chariot"></a>NetIQ Chariot</h1><p><a href="http://www.piaodown.com/soft/292.htm" target="_blank" rel="external">http://www.piaodown.com/soft/292.htm</a><br><img src="/img/20150723/3.jpg" alt=""></p>
<h1 id="IxChariot"><a href="#IxChariot" class="headerlink" title="IxChariot"></a>IxChariot</h1><p><a href="http://www.wandoujia.com/apps/com.ixia.ixchariot" target="_blank" rel="external">http://www.wandoujia.com/apps/com.ixia.ixchariot</a><br><img src="/img/20150723/4.jpeg" alt=""></p>
<p><a href="http://www.doc88.com/p-61963991908.html" target="_blank" rel="external">http://www.doc88.com/p-61963991908.html</a><br><a href="http://bbs.zol.com.cn/quanzi/d14_2.html" target="_blank" rel="external">http://bbs.zol.com.cn/quanzi/d14_2.html</a></p>
<h1 id="Omnipeek-抓包软件加D-Link-DWA-160抓包分析"><a href="#Omnipeek-抓包软件加D-Link-DWA-160抓包分析" class="headerlink" title="Omnipeek 抓包软件加D-Link DWA-160抓包分析"></a>Omnipeek 抓包软件加D-Link DWA-160抓包分析</h1><p>Omnipeek软件下载链接<br><a href="http://www.pc0359.cn/downinfo/18889.html" target="_blank" rel="external">http://www.pc0359.cn/downinfo/18889.html</a><br><img src="/img/20150723/5.jpg" alt=""></p>
<h1 id="D-Link-DWA-160购买链接"><a href="#D-Link-DWA-160购买链接" class="headerlink" title="D-Link DWA-160购买链接"></a>D-Link DWA-160购买链接</h1><p><a href="http://s.taobao.com/search?ie=utf8&amp;initiative_id=staobaoz_20150714&amp;stats_click=search_radio_all%3A1&amp;js=1&amp;;imgfile=&amp;q=dwa-160&amp;suggest=0_1&amp;_input_charset=utf-8&amp;wq=dwa160&amp;suggest_query=dwa160&amp;source=suggest&amp;sort=sale-desc" target="_blank" rel="external">http://s.taobao.com/search?ie=utf8&amp;initiative_id=staobaoz_20150714&amp;stats_click=search_radio_all%3A1&amp;js=1&amp;;imgfile=&amp;q=dwa-160&amp;suggest=0_1&amp;_input_charset=utf-8&amp;wq=dwa160&amp;suggest_query=dwa160&amp;source=suggest&amp;sort=sale-desc</a><br><img src="/img/20150723/6.jpg" alt=""></p>
<h1 id="最新OmniPeek无线驱动详细列表与下载说明"><a href="#最新OmniPeek无线驱动详细列表与下载说明" class="headerlink" title="最新OmniPeek无线驱动详细列表与下载说明"></a>最新OmniPeek无线驱动详细列表与下载说明</h1><p><a href="http://chenjiji.com/post/2721.html" target="_blank" rel="external">http://chenjiji.com/post/2721.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;inSSIDer2&quot;&gt;&lt;a href=&quot;#inSSIDer2&quot; class=&quot;headerlink&quot; title=&quot;inSSIDer2&quot;&gt;&lt;/a&gt;inSSIDer2&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://inssider.en.softonic.com/&quot;&gt;http://inssider.en.softonic.com/&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/img/20150723/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="WiFi" scheme="http://cuiqingwei.github.io/tags/WiFi/"/>
    
      <category term="网络评测工具" scheme="http://cuiqingwei.github.io/tags/%E7%BD%91%E7%BB%9C%E8%AF%84%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>有趣的Linux命令行功效</title>
    <link href="http://cuiqingwei.github.io/2015/07/16/2015-07-16-%E6%9C%89%E8%B6%A3%E7%9A%84Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8A%9F%E6%95%88/"/>
    <id>http://cuiqingwei.github.io/2015/07/16/2015-07-16-有趣的Linux命令行功效/</id>
    <published>2015-07-16T01:08:00.000Z</published>
    <updated>2016-09-19T09:50:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-sl-命令"><a href="#1-sl-命令" class="headerlink" title="1.sl 命令"></a>1.sl 命令</h1><p>首先，安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install sl</div></pre></td></tr></table></figure></p>
<p>然后，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sl</div></pre></td></tr></table></figure></p>
<p>我们看到了动画蒸汽机机头从屏幕右边开往左边。这个火车头是用ASCLL字符绘制。<br><a id="more"></a><br>提供特定的选项如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SYNOPSIS</div><div class="line">sl [ -alFe ]</div><div class="line">DESCRIPTION</div><div class="line">sl Displays animations aimed to correct users who accidentally enter sl instead of ls. SL stands <span class="keyword">for</span> Steam Locomotive.</div><div class="line">OPTIONS</div><div class="line"><span class="_">-a</span> An accident seems to happen. You\<span class="string">'ll feel pity for people who cry for help.</span></div><div class="line">-l shows little one.</div><div class="line">-F It flies.</div><div class="line">-e Allow interrupt by Ctrl+C.</div></pre></td></tr></table></figure></p>
<h1 id="2-rev-命令（reverse）"><a href="#2-rev-命令（reverse）" class="headerlink" title="2. rev 命令（reverse）"></a>2. rev 命令（reverse）</h1><p>它会颠倒所输入的字符串。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$rev</span></div></pre></td></tr></table></figure></p>
<p>终端会提示我们通过标准输入提供一个字符串。那么在每行后面我们就可以同时看到输出。<br>比如，我们输入”mylinuxbook”然后按回车。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mylinuxbook</div><div class="line">koobxunilym</div><div class="line">$ cat strings.txt</div><div class="line">MyLinuxBook</div><div class="line">Linux is so much fun!</div><div class="line">Happy Birthday</div><div class="line">$ rev strings.txt</div><div class="line">kooBxuniLyM</div><div class="line">!nuf hcum os si xuniL</div><div class="line">yadhtriB yppaH</div></pre></td></tr></table></figure></p>
<h1 id="3-fortune-命令"><a href="#3-fortune-命令" class="headerlink" title="3. fortune  命令"></a>3. fortune  命令</h1><p>我们运行这个命令的时候随机找了一条谚语或信息。<br>首先要对其进行安装：$sudo apt-get install fortune<br>运行这个命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ fortune</div><div class="line">You have the power to influence all with whom you come <span class="keyword">in</span> contact.</div></pre></td></tr></table></figure></p>
<h1 id="4-figlet-命令"><a href="#4-figlet-命令" class="headerlink" title="4. figlet 命令"></a>4. figlet 命令</h1><p>这个命令会用大写方式把我们输入的字符串显示在标题栏，显示效果由ASCII字符组成。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install figlet</div></pre></td></tr></table></figure></p>
<p>输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ figlet mylinuxbook</div></pre></td></tr></table></figure></p>
<p>你可以试着用”figlet”在脚本标头或源代码中添加标题栏。</p>
<h1 id="5-toilet-命令"><a href="#5-toilet-命令" class="headerlink" title="5.toilet 命令"></a>5.toilet 命令</h1><p>它是个五颜六色的命令。与figlet一样，它会把文本显示称标题栏，但是效果更好。<br>安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install toilet</div></pre></td></tr></table></figure></p>
<p>输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$toilet</span> mylinuxbook</div></pre></td></tr></table></figure></p>
<p>它比figlet命令的效果更有艺术感。<br>不过，它还可以添加颜色。我们可以运行下列命令看到颜色：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$toilet</span> <span class="_">-f</span> mono12 -F metal mylinuxbook</div></pre></td></tr></table></figure></p>
<h1 id="6-cowsay-命令"><a href="#6-cowsay-命令" class="headerlink" title="6. cowsay 命令"></a>6. cowsay 命令</h1><p>它会用ASCII字符描绘牛，羊和许多其他动物。但是不是每个Linux发行版都带有这个命令。<br>使用下面的命令安装此命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install cowsay</div></pre></td></tr></table></figure></p>
<p>现在，运行命令，并在命令中给出一个信息字符串。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cowsay</span> “Linux is fun”</div></pre></td></tr></table></figure></p>
<p>我们会看到了一个有趣的图像<br>基本上，我们会看到一头牛告诉我们所输入的信息。<br>尽管这个命令中只出现了cow，但其实它还可以有羊的效果。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cowsay</span> <span class="_">-f</span> sheep “I too love linux”</div><div class="line">```　</div><div class="line">只需用 <span class="string">'-l 就能看到它能提供的所有动物。输入：</span></div><div class="line">```bash</div><div class="line">$cowsay -l</div></pre></td></tr></table></figure></p>
<p>系统会弹出下列信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Cow files <span class="keyword">in</span> /usr/share/cowsay/cows:</div><div class="line">apt beavis.zen bong bud-frogs bunny calvin cheese cock cower daemon default</div><div class="line">dragon dragon-and-cow duck elephant elephant-in-snake eyes flaming-sheep</div><div class="line">ghostbusters gnu head-in hellokitty kiss kitty koala kosh luke-koala</div><div class="line">mech-and-cow meow milk moofasa moose mutilated pony pony-smaller ren sheep</div><div class="line">skeleton snowman sodomized-sheep stegosaurus stimpy suse three-eyes turkey</div><div class="line">turtle tux unipony unipony-smaller vader vader-koala www</div></pre></td></tr></table></figure></p>
<p>因此，我们可以用 ‘-f’ 输入以上信息中的任何动物。如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cowsay <span class="_">-f</span> milk <span class="string">"Do you want to drink?"</span></div></pre></td></tr></table></figure></p>
<p>为了使之更有趣，你可以让cowsay说出fortune信息，如输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fortune</span> | cowsay</div></pre></td></tr></table></figure></p>
<h1 id="7-cmatrix-命令"><a href="#7-cmatrix-命令" class="headerlink" title="7. cmatrix 命令"></a>7. cmatrix 命令</h1><p>这个命令会在终端生成ASCII字符组成的矩阵风格的动画效果。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install cmatrix</div></pre></td></tr></table></figure></p>
<p>现在运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cmatrix</div></pre></td></tr></table></figure></p>
<p>用”ctrl+c” 结束，生成动画。</p>
<h1 id="8-oneko-命令"><a href="#8-oneko-命令" class="headerlink" title="8. oneko 命令"></a>8. oneko 命令</h1><p>我们都知道”猫和老鼠”的动画，这个命令会让我们想起他们的追逐游戏。<br>有了这行命令，我们可以看到一只猫在追老鼠（鼠标指示器）的效果。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install oneko</div></pre></td></tr></table></figure></p>
<p>运行这个命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ oneko</div></pre></td></tr></table></figure></p>
<p>然后你就可以看到不管鼠标指示器放到哪里，Tom猫都会追着跑。下面是截图，不过不足以显示动态的效果.</p>
<p>即便我们切换应用，猫也不会离开老鼠。它甚至没有局限于终端。<br>想关掉这个的时候，只需在终端里用ctrl+c 结束进程即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-sl-命令&quot;&gt;&lt;a href=&quot;#1-sl-命令&quot; class=&quot;headerlink&quot; title=&quot;1.sl 命令&quot;&gt;&lt;/a&gt;1.sl 命令&lt;/h1&gt;&lt;p&gt;首先，安装&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo apt-get install sl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后，输入&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到了动画蒸汽机机头从屏幕右边开往左边。这个火车头是用ASCLL字符绘制。&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://cuiqingwei.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT usefull commands</title>
    <link href="http://cuiqingwei.github.io/2015/07/09/2015-07-09-OpenWRT-usefull-commands/"/>
    <id>http://cuiqingwei.github.io/2015/07/09/2015-07-09-OpenWRT-usefull-commands/</id>
    <published>2015-07-09T10:00:00.000Z</published>
    <updated>2016-10-09T12:47:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不得不说"><a href="#不得不说" class="headerlink" title="不得不说"></a>不得不说</h1><p>在命令行，按两次<strong>TAB</strong>键，列出所有命令！</p>
<h1 id="硬件信息"><a href="#硬件信息" class="headerlink" title="硬件信息"></a>硬件信息</h1><ul>
<li>CPU:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /proc/cpuinfo</div></pre></td></tr></table></figure>
<ul>
<li>Memory:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">free</div><div class="line">cat /proc/meminfo</div></pre></td></tr></table></figure>
<ul>
<li>Disk Space:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">df -h</div><div class="line">cat /proc/mtd</div><div class="line">cat /proc/partitions</div></pre></td></tr></table></figure>
<p>当然还可以通过<strong>dmesg</strong>配合grep查看！<br><a id="more"></a></p>
<h1 id="其他信息"><a href="#其他信息" class="headerlink" title="其他信息"></a>其他信息</h1><ul>
<li>内核信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname <span class="_">-a</span></div></pre></td></tr></table></figure>
<ul>
<li>内核版本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname -r</div></pre></td></tr></table></figure>
<ul>
<li>kernel信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dmesg</div></pre></td></tr></table></figure>
<ul>
<li>系统日志</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logread</div></pre></td></tr></table></figure>
<ul>
<li>进程列表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps</div></pre></td></tr></table></figure>
<ul>
<li>获取运行时间，系统负载率</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uptime</div></pre></td></tr></table></figure>
<p><strong>11:45:37 up 3 days, 10:46,  load average: 0.00, 0.01, 0.04</strong><br>1、11:45:37          // 系统当前时间<br>2、up 3 days, 10:46  // 主机已运行时间,时间越大，说明你的机器越稳定。<br>3、load average      // 系统平均负载，统计最近1，5，15分钟的系统平均负载</p>
<ul>
<li>查看环境变量</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">env <span class="comment"># lists environmental variables</span></div></pre></td></tr></table></figure>
<ul>
<li>查找某正在运行进程的进程号</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pidof watchdog</div></pre></td></tr></table></figure>
<h1 id="Package管理"><a href="#Package管理" class="headerlink" title="Package管理"></a>Package管理</h1><p><strong>opkg</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg list | grep ppp    <span class="comment">#shows available modules grep filters out name</span></div></pre></td></tr></table></figure></p>
<ul>
<li>列出已安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg list-installed</div></pre></td></tr></table></figure>
<ul>
<li>打个包查看</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">opkg info firewall</div><div class="line">opkg files firewall</div></pre></td></tr></table></figure>
<h1 id="web管理"><a href="#web管理" class="headerlink" title="web管理"></a>web管理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">opkg info luci</div><div class="line">opkg info luci-ssl</div></pre></td></tr></table></figure>
<h1 id="查看DHCP客户端IP"><a href="#查看DHCP客户端IP" class="headerlink" title="查看DHCP客户端IP"></a>查看DHCP客户端IP</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /tmp/dhcp.leases</div></pre></td></tr></table></figure>
<h1 id="无线信息"><a href="#无线信息" class="headerlink" title="无线信息"></a>无线信息</h1><ul>
<li>帮助</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw <span class="built_in">help</span></div></pre></td></tr></table></figure>
<ul>
<li>获取设备的功能</li>
</ul>
<p>使用以下方法来获得所有设备的功能，如带宽信息（2.4GHz，和5GHz），和802.11n的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw list</div></pre></td></tr></table></figure></p>
<ul>
<li>扫描无线路由器/AP</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw dev wlan0 scan</div></pre></td></tr></table></figure>
<ul>
<li>查看连接Openwrt路由的无线客户端：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iwinfo wlan0 assoclist  </div><div class="line">iw dev wlan0 station dump</div></pre></td></tr></table></figure>
<ul>
<li>查看Openwrt路由无线信息：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iwinfo wlan0 info</div></pre></td></tr></table></figure>
<ul>
<li>重启无线：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wifi down &amp;&amp; sleep 5 &amp;&amp; wifi</div></pre></td></tr></table></figure>
<ul>
<li>一个bash脚本，输出当前无线客户端IP/MAC/名称/速率：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash  </span></div><div class="line"><span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"# IP address\tname\tMAC address\ttx bit\trx bit"</span>  </div><div class="line"><span class="keyword">for</span> interface <span class="keyword">in</span> `iw dev | grep Interface | cut <span class="_">-f</span> 2 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`  </div><div class="line"><span class="keyword">do</span>  </div><div class="line">  maclist=(`iw dev <span class="variable">$interface</span> station dump | grep Station | cut <span class="_">-f</span> 2 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`)  </div><div class="line">  txlist=(`iw dev wlan0 station dump|grep <span class="string">'tx bitrate'</span>|awk <span class="string">'&#123;print $3$4&#125;'</span>`)  </div><div class="line">  rxlist=(`iw dev wlan0 station dump|grep <span class="string">'rx bitrate'</span>|awk <span class="string">'&#123;print $3$4&#125;'</span>`)  </div><div class="line">  len=<span class="variable">$&#123;#maclist[@]&#125;</span>  </div><div class="line">  <span class="keyword">for</span> ((i=0;i&lt;<span class="variable">$len</span>;i++))  </div><div class="line">  <span class="keyword">do</span>  </div><div class="line">    mac=<span class="variable">$&#123;maclist[$i]&#125;</span>  </div><div class="line">    tx=<span class="variable">$&#123;txlist[$i]&#125;</span>  </div><div class="line">    rx=<span class="variable">$&#123;rxlist[$i]&#125;</span>  </div><div class="line">    ip=<span class="string">"UNKN"</span>  </div><div class="line">    host=<span class="string">""</span>  </div><div class="line">    ip=`cat /tmp/dhcp.leases | cut <span class="_">-f</span> 2,3,4 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span> | grep <span class="variable">$mac</span> | cut <span class="_">-f</span> 2 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`  </div><div class="line">    host=`cat /tmp/dhcp.leases | cut <span class="_">-f</span> 2,3,4 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span> | grep <span class="variable">$mac</span> | cut <span class="_">-f</span> 3 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`  </div><div class="line">    <span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"<span class="variable">$ip</span>\t<span class="variable">$host</span>\t<span class="variable">$mac</span>\t<span class="variable">$tx</span>\t<span class="variable">$rx</span>"</span>|awk <span class="string">'&#123;printf "%-15s %-25s %-15s %-10s %-10s\n",$1,$2,$3,$4,$5&#125;'</span>  </div><div class="line">  <span class="keyword">done</span>  </div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<h1 id="查看gpio口的信息"><a href="#查看gpio口的信息" class="headerlink" title="查看gpio口的信息"></a>查看gpio口的信息</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /sys/kernel/debug/gpio</div></pre></td></tr></table></figure>
<h1 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h1><ul>
<li>查看USB连接设备</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /sys/kernel/debug/usb/devices</div></pre></td></tr></table></figure>
<h1 id="uci"><a href="#uci" class="headerlink" title="uci"></a>uci</h1><p><strong>uci (command) [arguments]</strong></p>
<p><em>Example:</em></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">uci <span class="built_in">set</span> dhcp.lan.leasetime=4h</div><div class="line">uci get dhcp.lan.leasetime</div><div class="line">uci show dhcp</div><div class="line">uci changes</div><div class="line">uci commit</div></pre></td></tr></table></figure>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><strong>swconfig</strong> 配置交换机;</p>
<p><strong>iwinfo</strong> 是OpenWrt中提供无线相关信息读取的软件.其中内置了诸如WEXT NL80211 madwifi等等驱动的各种信息读取方式.把不同类型的驱动整合出一个统一的接口供luci等使用;</p>
<p><strong>iwpriv iwlist iwconfig</strong> 是WEXT类型无线驱动专用的操作程序.</p>
<p>ifconfig<br>iwconfig<br>pkill</p>
<p>cat /proc/modules<br>cat /proc/devices<br>cat /proc/iomem<br>cat /proc/cmdline<br>cat /proc/interrupts</p>
<p>cd /<br>find -name easycap<br>./sys/bus/usb/drivers/easycap<br>./sys/module/usbcore/holders/easycap<br>./sys/module/snd/holders/easycap<br>./sys/module/snd_pcm/holders/easycap<br>./sys/module/videodev/holders/easycap<br>./sys/module/easycap</p>
<p>sys adminname open<br>sys password open<br>sys multiuser on |backd backd<br>sys cwmp disp</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;不得不说&quot;&gt;&lt;a href=&quot;#不得不说&quot; class=&quot;headerlink&quot; title=&quot;不得不说&quot;&gt;&lt;/a&gt;不得不说&lt;/h1&gt;&lt;p&gt;在命令行，按两次&lt;strong&gt;TAB&lt;/strong&gt;键，列出所有命令！&lt;/p&gt;
&lt;h1 id=&quot;硬件信息&quot;&gt;&lt;a href=&quot;#硬件信息&quot; class=&quot;headerlink&quot; title=&quot;硬件信息&quot;&gt;&lt;/a&gt;硬件信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;CPU:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat /proc/cpuinfo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Memory:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;free&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat /proc/meminfo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Disk Space:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;df -h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat /proc/mtd&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat /proc/partitions&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然还可以通过&lt;strong&gt;dmesg&lt;/strong&gt;配合grep查看！&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="OpenWRT" scheme="http://cuiqingwei.github.io/tags/OpenWRT/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT折腾日记</title>
    <link href="http://cuiqingwei.github.io/2015/07/08/2015-07-08-OpenWRT%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/"/>
    <id>http://cuiqingwei.github.io/2015/07/08/2015-07-08-OpenWRT折腾日记/</id>
    <published>2015-07-08T10:00:00.000Z</published>
    <updated>2016-09-18T08:58:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2016-04-23-Openwrt-Yun"><a href="#2016-04-23-Openwrt-Yun" class="headerlink" title="2016-04-23 Openwrt Yun"></a>2016-04-23 Openwrt Yun</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/bash -ex</span></div></pre></td></tr></table></figure>
<h4 id="FEEDS"><a href="#FEEDS" class="headerlink" title="FEEDS"></a>FEEDS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall <span class="_">-a</span></div><div class="line">rm -rf feeds</div><div class="line">./scripts/feeds update <span class="_">-a</span></div><div class="line">./scripts/feeds install <span class="_">-a</span></div><div class="line">./scripts/feeds uninstall erlang freeswitch remotefs libzstream shflags opensips pulseaudio xmlrpc-c rtorrent sox umurmur-polarssl freecwmp-zstream osirisd logtrigger libplist libimobiledevice cmus mxml boost wt etherpuppet php4 aprx n2n pdnsd crtmpserver kissdx openconnect telepathy-python alljoyn</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="CONFIG"><a href="#CONFIG" class="headerlink" title="CONFIG"></a>CONFIG</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rm <span class="_">-f</span> .config</div><div class="line">git checkout .config</div><div class="line">sed <span class="string">'s/=m$/=n/'</span> &lt; .config &gt; .baseonlyconfig</div><div class="line">mv .config .origconfig</div><div class="line">mv .baseonlyconfig .config</div><div class="line">make oldconfig</div></pre></td></tr></table></figure>
<h4 id="BUILDING"><a href="#BUILDING" class="headerlink" title="BUILDING"></a>BUILDING</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">nice -n 10 make -j 2 V=s</div><div class="line">/etc/config/wireless</div><div class="line">config wifi-iface</div><div class="line">	option network <span class="string">'wwan'</span></div><div class="line">	option ssid <span class="string">'MiWiFi'</span></div><div class="line">	option encryption <span class="string">'psk2'</span></div><div class="line">	option device <span class="string">'radio0'</span></div><div class="line">	option mode <span class="string">'sta'</span></div><div class="line">	option bssid <span class="string">'8C:BE:BE:29:FE:56'</span></div><div class="line">	option key <span class="string">'1981021400'</span></div><div class="line">wireless.@wifi-iface[0]=wifi-iface                                              </div><div class="line">wireless.@wifi-iface[0].network=wwan                                            </div><div class="line">wireless.@wifi-iface[0].ssid=MiWiFi                                             </div><div class="line">wireless.@wifi-iface[0].encryption=psk2                                         </div><div class="line">wireless.@wifi-iface[0].device=radio0                                           </div><div class="line">wireless.@wifi-iface[0].mode=sta                                                </div><div class="line">wireless.@wifi-iface[0].bssid=8C:BE:BE:29:FE:56                                 </div><div class="line">wireless.@wifi-iface[0].key=1981021400</div></pre></td></tr></table></figure>
<h2 id="2016-04-11-DraginoYun-Shield"><a href="#2016-04-11-DraginoYun-Shield" class="headerlink" title="2016-04-11 DraginoYun Shield"></a>2016-04-11 DraginoYun Shield</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> src-svn packages https://github.com/arduino/openwrt-packages-yun/trunk &gt;&gt; feed.conf.default</div></pre></td></tr></table></figure>
<h4 id="更新package"><a href="#更新package" class="headerlink" title="更新package"></a>更新package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update <span class="_">-a</span></div></pre></td></tr></table></figure>
<h4 id="安装package"><a href="#安装package" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds install yun-conf</div><div class="line">./scripts/feeds install yun-scripts</div><div class="line">./scripts/feeds install luci-app-arduino-webpanel</div></pre></td></tr></table></figure>
<h4 id="单独编译package"><a href="#单独编译package" class="headerlink" title="单独编译package"></a>单独编译package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">make package/yun-conf/compile</div><div class="line">make package/yun-scripts/compile</div><div class="line">make package/luci-app-arduino-webpanel/compile</div><div class="line">make package/yun-conf/install</div><div class="line">make package/yun-scripts/install</div><div class="line">make package/luci-app-arduino-webpanel/install</div></pre></td></tr></table></figure>
<h2 id="2016-04-08-DraginoYun-Shield"><a href="#2016-04-08-DraginoYun-Shield" class="headerlink" title="2016-04-08 DraginoYun Shield"></a>2016-04-08 DraginoYun Shield</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">svn checkout https://github.com/dragino/openwrt-yun.git dragino-yun</div><div class="line"><span class="built_in">cd</span> dragino-yun/trunk</div><div class="line">./build_image.sh</div><div class="line"><span class="built_in">cd</span> openwrt</div><div class="line">vi feeds.config.default</div></pre></td></tr></table></figure>
<h4 id="断开packages-链接本地dragino-packages"><a href="#断开packages-链接本地dragino-packages" class="headerlink" title="断开packages,链接本地dragino-packages"></a>断开packages,链接本地dragino-packages</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-git dragino https://github.com/dragino/dragino-packages.git</span></div><div class="line">src-link dragino ../../dragino-packages</div></pre></td></tr></table></figure>
<h4 id="卸载package"><a href="#卸载package" class="headerlink" title="卸载package"></a>卸载package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall luci-app-iot-webpanel</div><div class="line">./scripts/feeds uninstall luci-app-sensor</div></pre></td></tr></table></figure>
<h4 id="更新package-1"><a href="#更新package-1" class="headerlink" title="更新package"></a>更新package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update luci-app-iot-webpanel</div></pre></td></tr></table></figure>
<h4 id="安装package-1"><a href="#安装package-1" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds install luci-app-iot-webpanel</div></pre></td></tr></table></figure>
<h4 id="单独编译package-1"><a href="#单独编译package-1" class="headerlink" title="单独编译package"></a>单独编译package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make package/luci-app-iot-webpanel/compile</div><div class="line">make package/luci-app-iot-webpanel/install</div></pre></td></tr></table></figure>
<h4 id="安装package-2"><a href="#安装package-2" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scp bin/ar71xx/packages/[packagename].ipk roo@ip:/tmp</div><div class="line">opkg install /tmp/[packagename].ipk</div></pre></td></tr></table></figure>
<p><a href="http://www.doodle3d.com/help/wiki/installing-updating-packages" target="_blank" rel="external">http://www.doodle3d.com/help/wiki/installing-updating-packages</a><br><a href="https://wiki.openwrt.org/doc/howto/build" target="_blank" rel="external">https://wiki.openwrt.org/doc/howto/build</a></p>
<h2 id="2016-04-05-ArduinoYun-Shield"><a href="#2016-04-05-ArduinoYun-Shield" class="headerlink" title="2016-04-05 ArduinoYun Shield"></a>2016-04-05 ArduinoYun Shield</h2><p><a href="http://www.znck007.com/forum.php?mod=viewthread&amp;tid=22687" target="_blank" rel="external">http://www.znck007.com/forum.php?mod=viewthread&amp;tid=22687</a><br>源<br><a href="https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/" target="_blank" rel="external">https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</a><br><a href="http://downloads.arduino.cc/openwrtyun/1/packages/" target="_blank" rel="external">http://downloads.arduino.cc/openwrtyun/1/packages/</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vi /etc/opkg.conf</div><div class="line">src/gz attitude_adjustment https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</div></pre></td></tr></table></figure></p>
<h4 id="使用putty登陆openwrt输入"><a href="#使用putty登陆openwrt输入" class="headerlink" title="使用putty登陆openwrt输入"></a>使用putty登陆openwrt输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg install kmod-usb-storage block-mount block-hotplug kmod-fs-ext4</div><div class="line">mkfs.ext4 /dev/sda1<span class="comment"># 格式化TF卡，第一次使用须格式化</span></div><div class="line">mkdir -p /mnt/sda1<span class="comment"># 新建一个TF卡目录</span></div><div class="line">mount /dev/sda1 /mnt/sda1<span class="comment"># 将TF卡挂载到/mnt/sda1目录</span></div></pre></td></tr></table></figure>
<h4 id="自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）"><a href="#自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）" class="headerlink" title="自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）"></a>自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/config/fstab</div></pre></td></tr></table></figure>
<h4 id="移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！"><a href="#移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！" class="headerlink" title="移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！"></a>移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">config <span class="string">'mount'</span></div><div class="line">        option <span class="string">'device'</span> <span class="string">'/dev/sda1'</span></div><div class="line">        option <span class="string">'options'</span> <span class="string">'rw,sync'</span></div><div class="line">        option <span class="string">'enabled_fsck'</span> <span class="string">'0'</span></div><div class="line">        option <span class="string">'enabled'</span> <span class="string">'1'</span></div><div class="line">        option <span class="string">'target'</span> <span class="string">'/mnt/sda1'</span></div><div class="line">mkdir -p /mnt/sda1/php<span class="comment"># 新建软件包目录</span></div><div class="line"><span class="built_in">echo</span> dest phpdisk /mnt/sda1/php/ &gt;&gt; /etc/opkg.conf</div><div class="line">opkg --dest phpdisk install php5-fastcgi php5-mod-gd php5-mod-xml php5-mod-ctype php5-mod-session php5-mod-sockets php5-mod-tokenizer php5-mod-mcrypt php5-mod-mbstring php5-mod-pdo php5-mod-curl php5-mod-mysql</div></pre></td></tr></table></figure>
<h4 id="安装一个时区信息软件包，否则系统无法识别时区。"><a href="#安装一个时区信息软件包，否则系统无法识别时区。" class="headerlink" title="安装一个时区信息软件包，否则系统无法识别时区。"></a>安装一个时区信息软件包，否则系统无法识别时区。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install zoneinfo-asia</div></pre></td></tr></table></figure>
<h4 id="建立软连接，不然会找不到对应的库和配置文件："><a href="#建立软连接，不然会找不到对应的库和配置文件：" class="headerlink" title="建立软连接，不然会找不到对应的库和配置文件："></a>建立软连接，不然会找不到对应的库和配置文件：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/etc/php.ini /etc/php.ini</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/etc/php5 /etc/php5</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libpcre.so.0.0.1 /usr/lib/libpcre.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libpcreposix.so.0.0.0 /usr/lib/libpcreposix.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libsqlite.so.0.8.6 /usr/lib/libsqlite.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libsqlite3.so.0.8.6 /usr/lib/libsqlite3.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libxml2.so.2.7.8 /usr/lib/libxml2.so.2</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libz.so.1.2.3 /usr/lib/libz.so</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libuClibc++-0.2.4.so /usr/lib/libuClibc++.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libmysqlclient.so.16 /usr/lib/libmysqlclient.so.16</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/php /usr/lib/php</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/bin/php-cgi /usr/bin/php-cgi</div></pre></td></tr></table></figure>
<h4 id="安装到内存"><a href="#安装到内存" class="headerlink" title="安装到内存"></a>安装到内存</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install php5-fastcgi php5-mod-gd php5-mod-xml php5-mod-ctype php5-mod-session php5-mod-sockets php5-mod-tokenizer php5-mod-mcrypt php5-mod-mbstring php5-mod-pdo php5-mod-curl php5-mod-mysql</div></pre></td></tr></table></figure>
<h4 id="编辑php-ini，方法如下。"><a href="#编辑php-ini，方法如下。" class="headerlink" title="编辑php.ini，方法如下。"></a>编辑php.ini，方法如下。</h4><h4 id="找到下面的字段修改为如下，如果有用”-”注析的就删掉："><a href="#找到下面的字段修改为如下，如果有用”-”注析的就删掉：" class="headerlink" title="找到下面的字段修改为如下，如果有用”;”注析的就删掉："></a>找到下面的字段修改为如下，如果有用”;”注析的就删掉：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">short_open_tag = On</div><div class="line">error_log = /var/<span class="built_in">log</span>/php_errors.log</div><div class="line">doc_root = <span class="string">"/mnt/sda1/www"</span>  修改成sd卡的路径。</div><div class="line">extension=ctype.so</div><div class="line">extension=curl.so</div><div class="line">extension=dom.so</div><div class="line">extension=exif.so</div><div class="line">extension=ftp.so</div><div class="line">extension=gd.so</div><div class="line">extension=gmp.so</div><div class="line">extension=hash.so</div><div class="line">extension=iconv.so</div><div class="line">extension=json.so</div><div class="line">extension=ldap.so</div><div class="line">extension=mbstring.so</div><div class="line">extension=mcrypt.so</div><div class="line">extension=mysql.so</div><div class="line">extension=openssl.so</div><div class="line">extension=pcre.so</div><div class="line">extension=pdo.so</div><div class="line">extension=pdo-mysql.so</div><div class="line">extension=pdo-pgsql.so</div><div class="line">extension=pdo_sqlite.so</div><div class="line">extension=pgsql.so</div><div class="line">extension=session.so</div><div class="line">extension=soap.so</div><div class="line">extension=sockets.so</div><div class="line">extension=sqlite.so</div><div class="line">extension=sqlite3.so</div><div class="line">extension=tokenizer.so</div><div class="line">extension=xml.so</div><div class="line">extension=xmlreader.so</div><div class="line">extension=xmlwriter.so</div><div class="line">date.timezone = Asia/Shanghai</div><div class="line">mysql.default_socket = /var/run/mysqld.sock</div><div class="line">session.auto_start = 1</div></pre></td></tr></table></figure>
<h4 id="和上面一样，打开-etc-config-uhttpd"><a href="#和上面一样，打开-etc-config-uhttpd" class="headerlink" title="和上面一样，打开/etc/config/uhttpd"></a>和上面一样，打开/etc/config/uhttpd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">option home <span class="string">'/mnt/sda1/www'</span>                 <span class="comment">#把/www修改成/mnt/sda1/www为放置网页的目录。</span></div><div class="line">option index_page index.php               	<span class="comment">#添加到后面</span></div><div class="line">list interpreter <span class="string">".php=/usr/bin/php-cgi"</span>   	<span class="comment">#添加到后面</span></div></pre></td></tr></table></figure>
<h4 id="然后重启uhttpd（在putty里输入命令回车）："><a href="#然后重启uhttpd（在putty里输入命令回车）：" class="headerlink" title="然后重启uhttpd（在putty里输入命令回车）："></a>然后重启uhttpd（在putty里输入命令回车）：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/uhttpd restart</div></pre></td></tr></table></figure>
<h4 id="使用putty安装mysql"><a href="#使用putty安装mysql" class="headerlink" title="使用putty安装mysql"></a>使用putty安装mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg install mysql-server</div></pre></td></tr></table></figure>
<h4 id="创建数据库目录"><a href="#创建数据库目录" class="headerlink" title="创建数据库目录"></a>创建数据库目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/sda1/mysql/data/mysql</div><div class="line">mkdir -p /mnt/sda1/mysql/data/tmp</div></pre></td></tr></table></figure>
<h4 id="查找到以下内容并修改如下："><a href="#查找到以下内容并修改如下：" class="headerlink" title="查找到以下内容并修改如下："></a>查找到以下内容并修改如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">datadir = /mnt/sda1/mysql/data/mysql/</div><div class="line">tmpdir  = /mnt/sda1/mysql/data/tmp/</div></pre></td></tr></table></figure>
<h4 id="bind-address-192-168-1-1"><a href="#bind-address-192-168-1-1" class="headerlink" title="bind-address = 192.168.1.1"></a>bind-address = 192.168.1.1</h4><h4 id="初始化建库"><a href="#初始化建库" class="headerlink" title="初始化建库"></a>初始化建库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_install_db --force</div></pre></td></tr></table></figure>
<h4 id="以关闭授权的方式启动mysql"><a href="#以关闭授权的方式启动mysql" class="headerlink" title="以关闭授权的方式启动mysql"></a>以关闭授权的方式启动mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqld --skip-grant &amp;</div></pre></td></tr></table></figure>
<h4 id="进入mysql-修改账号连接权限"><a href="#进入mysql-修改账号连接权限" class="headerlink" title="进入mysql,修改账号连接权限"></a>进入mysql,修改账号连接权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root mysql</div></pre></td></tr></table></figure>
<h4 id="进入mysql以后出现mysql-gt-提示符，再修改账号连接权限："><a href="#进入mysql以后出现mysql-gt-提示符，再修改账号连接权限：" class="headerlink" title="进入mysql以后出现mysql&gt;提示符，再修改账号连接权限："></a>进入mysql以后出现mysql&gt;提示符，再修改账号连接权限：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update user <span class="built_in">set</span> host=<span class="string">'%'</span> <span class="built_in">where</span> user=<span class="string">'root'</span> and host=<span class="string">'localhost'</span>;</div></pre></td></tr></table></figure>
<h4 id="修改数据库密码为edutech"><a href="#修改数据库密码为edutech" class="headerlink" title="修改数据库密码为edutech"></a>修改数据库密码为edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update user <span class="built_in">set</span> password=PASSWORD(<span class="string">'edutech'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</div></pre></td></tr></table></figure>
<h4 id="刷新数据库"><a href="#刷新数据库" class="headerlink" title="刷新数据库"></a>刷新数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flush privileges;</div></pre></td></tr></table></figure>
<h4 id="上面ok了以后，退出mysql"><a href="#上面ok了以后，退出mysql" class="headerlink" title="上面ok了以后，退出mysql"></a>上面ok了以后，退出mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">exit</span>;</div></pre></td></tr></table></figure>
<h4 id="重启mysql，以授权验证方式启动（为了系统安全）"><a href="#重启mysql，以授权验证方式启动（为了系统安全）" class="headerlink" title="重启mysql，以授权验证方式启动（为了系统安全）"></a>重启mysql，以授权验证方式启动（为了系统安全）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">killall mysqld</div></pre></td></tr></table></figure>
<h4 id="设定开机运行"><a href="#设定开机运行" class="headerlink" title="设定开机运行"></a>设定开机运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld <span class="built_in">enable</span></div></pre></td></tr></table></figure>
<h4 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld start</div></pre></td></tr></table></figure>
<h4 id="用Navicat新建数据库"><a href="#用Navicat新建数据库" class="headerlink" title="用Navicat新建数据库"></a>用Navicat新建数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">znckapi</div></pre></td></tr></table></figure>
<h4 id="新建查询"><a href="#新建查询" class="headerlink" title="新建查询"></a>新建查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE IF NOT EXISTS `api_worklist` (</div><div class="line">`id` int(16) unsigned NOT NULL AUTO_INCREMENT,</div><div class="line">`<span class="built_in">type</span>` int(2) NOT NULL COMMENT <span class="string">'1网设2上传3定时'</span>,</div><div class="line">`uid` int(8) NOT NULL,</div><div class="line">`sid` varchar(3) NOT NULL,</div><div class="line">`nid` varchar(3) NOT NULL,</div><div class="line">`data` varchar(32) NOT NULL,</div><div class="line">`note` varchar(64) NOT NULL,</div><div class="line">`status` int(2) NOT NULL COMMENT <span class="string">'1成功2失败3超过次数4超15分'</span>,</div><div class="line">`time` datetime NOT NULL,</div><div class="line">`ip` varchar(16) NOT NULL,</div><div class="line">`num` int(2) NOT NULL,</div><div class="line">PRIMARY KEY(`id`),</div><div class="line">KEY `uid` (`uid`),</div><div class="line">KEY `time` (`time`)</div><div class="line">)ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;</div></pre></td></tr></table></figure>
<h4 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/sda1/python</div><div class="line"><span class="built_in">echo</span> dest pythondisk /mnt/sda1/python/ &gt;&gt; /etc/opkg.conf</div><div class="line">opkg --dest pythondisk install python</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/python/usr/bin/python /usr/bin/python</div><div class="line">opkg --dest pythondisk install pyserial<span class="comment"># 安装串口通讯类</span></div><div class="line">opkg --dest pythondisk install python-mysql<span class="comment"># 安装mysql操作类</span></div></pre></td></tr></table></figure>
<p><a href="http://see.sl088.com/wiki/Opkg" target="_blank" rel="external">http://see.sl088.com/wiki/Opkg</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /mnt/sda1</div><div class="line">wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/pyserial_2.4-1_ar71xx.ipk</div><div class="line">wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/python-mysql_1.2.2-1_ar71xx.ipk</div><div class="line">2016-03-03 DRAGINO Yun Shield</div><div class="line">ssh root@192.168.199.159</div><div class="line">dragino</div><div class="line">root@dragino-7676e6:~<span class="comment"># cd /tmp/</span></div><div class="line">root@dragino-7676e6:/tmp<span class="comment">#</span></div><div class="line">root@dragino-7676e6:/tmp<span class="comment"># wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/luci-i18n-chine</span></div><div class="line">se_0.11.1-1_ar71xx.ipk</div><div class="line">root@dragino-7676e6:/tmp<span class="comment"># opkg install luci-i18n-chinese_0.11.1-1_ar71xx.ipk</span></div></pre></td></tr></table></figure></p>
<h2 id="2016-03-03-luci"><a href="#2016-03-03-luci" class="headerlink" title="2016-03-03 luci"></a>2016-03-03 luci</h2><p><a href="http://www.cnblogs.com/luopeng/p/4678704.html" target="_blank" rel="external">http://www.cnblogs.com/luopeng/p/4678704.html</a></p>
<h2 id="2016-01-22-web摄像头、mjpg-streamer"><a href="#2016-01-22-web摄像头、mjpg-streamer" class="headerlink" title="2016-01-22 web摄像头、mjpg-streamer"></a>2016-01-22 web摄像头、mjpg-streamer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">wget https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/openwrt-ar71xx-generic-tl-wr2543-v1-squashfs-factory.bin</div><div class="line">scp bin/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin root@192.168.199.193:/tmp/</div><div class="line">mtd -r write openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin firmware</div><div class="line">uci show network.lan</div><div class="line">uci <span class="built_in">set</span> network.lan.proto=dhcp</div><div class="line">uci commit</div><div class="line">/etc/init.d/networtk restart</div><div class="line">&gt;&gt; opkg install kmod-video-uvc。</div><div class="line">&gt;&gt; ls /dev，如果有vedio的话，说明驱动安装成功（前提是要把摄像头插上）</div><div class="line">&gt;&gt; opkg install mjpg-streamer</div><div class="line">&gt;&gt; mjpg_streamer -b -i <span class="string">"input_uvc.so /dev/video0 -r 640x480 -yuv"</span> -o <span class="string">"output_http.so -p 8080 -w /web"</span></div><div class="line">http://192.168.199.193:8080/?action=stream（动态视频）</div><div class="line">http://192.168.199.193:8080/?action=snapshot（静态图像）</div></pre></td></tr></table></figure>
<h2 id="2015-08-25-mtk-openwrt-sdk"><a href="#2015-08-25-mtk-openwrt-sdk" class="headerlink" title="2015-08-25 mtk openwrt-sdk"></a>2015-08-25 mtk openwrt-sdk</h2><h4 id="for-mtksdk-openwrt-3-10-14-20141127-30965ec3-tar-bz2"><a href="#for-mtksdk-openwrt-3-10-14-20141127-30965ec3-tar-bz2" class="headerlink" title="for mtksdk-openwrt-3.10.14-20141127-30965ec3.tar.bz2"></a>for mtksdk-openwrt-3.10.14-20141127-30965ec3.tar.bz2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ack -w MediaTek --html</div><div class="line">openwrt-3.10.14_2014/package/ralink/ui/luci-mtk/patches/001-logo.patch</div></pre></td></tr></table></figure>
<h4 id="改logo-MediaTek-gt-Edutech"><a href="#改logo-MediaTek-gt-Edutech" class="headerlink" title="改logo MediaTek-&gt;Edutech"></a>改logo MediaTek-&gt;Edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ralink/ui/luci-mtk/src/modules/base/root/etc/config</div></pre></td></tr></table></figure>
<h4 id="luci-改language"><a href="#luci-改language" class="headerlink" title="luci 改language"></a>luci 改language</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ralink/drivers/mt76x2e/files</div></pre></td></tr></table></figure>
<h4 id="mt7612e-sh-改SSID"><a href="#mt7612e-sh-改SSID" class="headerlink" title="mt7612e.sh 改SSID"></a>mt7612e.sh 改SSID</h4><h4 id="for-mtksdk-openwrt-3-10-14-20150311-d021c937-tar-bz2"><a href="#for-mtksdk-openwrt-3-10-14-20150311-d021c937-tar-bz2" class="headerlink" title="for mtksdk-openwrt-3.10.14-20150311-d021c937.tar.bz2"></a>for mtksdk-openwrt-3.10.14-20150311-d021c937.tar.bz2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/ui/luci-mtk/patches/001-logo.patch</div></pre></td></tr></table></figure>
<h4 id="改logo-MediaTek-gt-Edutech-1"><a href="#改logo-MediaTek-gt-Edutech-1" class="headerlink" title="改logo MediaTek-&gt;Edutech"></a>改logo MediaTek-&gt;Edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/ui/luci-mtk/src/modules/base/root/etc/config</div></pre></td></tr></table></figure>
<h4 id="luci-改language-1"><a href="#luci-改language-1" class="headerlink" title="luci 改language"></a>luci 改language</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/drivers/mt7620/files</div></pre></td></tr></table></figure>
<h4 id="mt7620-sh-改SSID"><a href="#mt7620-sh-改SSID" class="headerlink" title="mt7620.sh 改SSID"></a>mt7620.sh 改SSID</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/drivers/mt76x2e/files</div></pre></td></tr></table></figure>
<h4 id="mt7612e-sh-改SSID-1"><a href="#mt7612e-sh-改SSID-1" class="headerlink" title="mt7612e.sh 改SSID"></a>mt7612e.sh 改SSID</h4><h4 id="更新opkg-config源"><a href="#更新opkg-config源" class="headerlink" title="更新opkg.config源"></a>更新opkg.config源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/openwrt-3.10.14/package/base-files/image-config.in　文件中 173　行</div><div class="line">http://downloads.openwrt.org/barrier_breaker/14.07/ramips/mt7620a/packages</div></pre></td></tr></table></figure>
<h4 id="版本号"><a href="#版本号" class="headerlink" title="版本号"></a>版本号</h4><p>/openwrt-3.10.14/package/ramips/ui/luci-mtk/src/build/mkversion.sh<br>更改　luciname 和 luciversion为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">luciname    = <span class="string">"Edutech LuCI "</span></div><div class="line">luciversion = <span class="string">"0.12"</span></div></pre></td></tr></table></figure></p>
<h4 id="banner"><a href="#banner" class="headerlink" title="banner"></a>banner</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">figlet edutech <span class="_">-f</span> speed.flf -c -w 52</div><div class="line">         _________      _____           ______  </div><div class="line">    ___________  /___  ___  /______________  /_</div><div class="line">    _  _ \  __  /_  / / /  __/  _ \  ___/_  __ \</div><div class="line">    /  __/ /_/ / / /_/ // /_ /  __/ /__ _  / / /</div><div class="line">    \___/\__,_/  \__,_/ \__/ \___/\___/ /_/ /_/</div><div class="line"> -----------------------------------------------------</div><div class="line">             Shanghai Edutech Co.,Ltd</div><div class="line"> -----------------------------------------------------</div></pre></td></tr></table></figure>
<h4 id="profiles-和-固件名"><a href="#profiles-和-固件名" class="headerlink" title="profiles 和　固件名"></a>profiles 和　固件名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14/target/linux/ramips/mt7620/profiles</div><div class="line">MT7620a_MT7612e.mk</div><div class="line">openwrt-3.10.14/target/linux/ramips/image/Makefile</div></pre></td></tr></table></figure>
<h4 id="add-by-cuiqingwei-at-20150828"><a href="#add-by-cuiqingwei-at-20150828" class="headerlink" title="add by cuiqingwei at 20150828"></a>add by cuiqingwei at 20150828</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Image/Build/Profile/MT7620a_MT7612e=$(call BuildFirmware/Default8M/$(1),$(1),mt7612e,MT7620a_MT7612e)</div></pre></td></tr></table></figure>
<h4 id="去除有问题的iw"><a href="#去除有问题的iw" class="headerlink" title="去除有问题的iw"></a>去除有问题的iw</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall iw</div><div class="line">删除openwrt-3.10.14/package/network/utils目录下的iw目录</div></pre></td></tr></table></figure>
<h2 id="2015-08-13-openwrt-yun"><a href="#2015-08-13-openwrt-yun" class="headerlink" title="2015-08-13 openwrt-yun"></a>2015-08-13 openwrt-yun</h2><p>目录openwrt-yun/feeds/packages下arduino文件夹复制<br>到/openwrt/branches/barrier_breaker/package目录下<br>对应源码在openwrt/branches/barrier_breaker/build_dir/target-mips_34kc_uClibc-0.9.33.2/目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div><div class="line">Base System ---&gt;</div><div class="line">&lt;*&gt; yun-conf...................................... Custom Yún configurations            </div><div class="line"> &lt;*&gt; yun-scripts.......................................... Custom Yún scripts</div><div class="line">LuCI ---&gt;</div><div class="line">3. Applications ---&gt;</div><div class="line">&lt;*&gt; luci-app-arduino-webpanel............ simplified wifi configuration panel  </div><div class="line"><span class="built_in">echo</span> <span class="string">"src/gz barrier_breaker http://download.linino.org/dogstick/all-in-one/latest/packages/"</span> &gt;&gt; /etc/opkg.conf</div><div class="line">opkg install rng-tools --force-depends</div><div class="line">opkg install gnupg</div><div class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</div><div class="line">“Not enough random bytes available. Please <span class="keyword">do</span> some other work to give</div><div class="line">　the OS a chance to collect more entropy! (Need 284 more bytes)”</div><div class="line">First make sure you have the following available and have the rights to it:</div><div class="line">ls <span class="_">-l</span> /dev/urandom</div><div class="line"><span class="keyword">then</span> execute rngd against it:</div><div class="line">rngd -r /dev/urandom</div><div class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</div><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure></p>
<p><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a><br>成功！</p>
<h2 id="2015-08-12-arduino-yun"><a href="#2015-08-12-arduino-yun" class="headerlink" title="2015-08-12 arduino-yun"></a>2015-08-12 arduino-yun</h2><p><a href="https://www.snip2code.com/Snippet/38230/Install-Arduino-Yun-%28Linino%29-software-on" target="_blank" rel="external">https://www.snip2code.com/Snippet/38230/Install-Arduino-Yun-%28Linino%29-software-on</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install luci-lib-json luci rng-tools</div></pre></td></tr></table></figure></p>
<h4 id="If-rng-tools-is-not-installable-then-install-it-by-hand-from-e-g-http-download-linino-org-linino-distro-linino-dev-latest-packages-rng-tools-3-2-ar71xx-ipk"><a href="#If-rng-tools-is-not-installable-then-install-it-by-hand-from-e-g-http-download-linino-org-linino-distro-linino-dev-latest-packages-rng-tools-3-2-ar71xx-ipk" class="headerlink" title="If rng-tools is not installable, then install it by hand from e.g., http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk"></a>If rng-tools is not installable, then install it by hand from e.g., <a href="http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk" target="_blank" rel="external">http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk</a></h4><h4 id="Edit-your-etc-opkg-conf-add"><a href="#Edit-your-etc-opkg-conf-add" class="headerlink" title="Edit your /etc/opkg.conf, add"></a>Edit your /etc/opkg.conf, add</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/gz barrier_breaker http://download.linino.org/dogstick/all-in-one/latest/packages/</div></pre></td></tr></table></figure>
<h4 id="Comment-out-your-earlier-src-gz"><a href="#Comment-out-your-earlier-src-gz" class="headerlink" title="Comment out your earlier src/gz"></a>Comment out your earlier src/gz</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg list|grep bridge</div><div class="line">opkg list|grep yun</div><div class="line">opkg install -force-overwrite cpu-mcu-bridge yun-conf yun-scripts luci-app-arduino-webpanel avrdude gnupg temboo spacebrew uSDaemon</div><div class="line">/etc/init.d/avahi-daemon start</div></pre></td></tr></table></figure>
<h4 id="Need-to-edit-in-order-to-change-to-correct-LED"><a href="#Need-to-edit-in-order-to-change-to-correct-LED" class="headerlink" title="Need to edit in order to change to correct LED"></a>Need to edit in order to change to correct LED</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/bin/blink-start</div><div class="line">/usr/bin/blink-stop</div><div class="line">rm /tmp/luci-indexcache</div></pre></td></tr></table></figure>
<h4 id="In-etc-avahi-avahi-daemon-conf-edit"><a href="#In-etc-avahi-avahi-daemon-conf-edit" class="headerlink" title="In /etc/avahi/avahi-daemon.conf edit"></a>In /etc/avahi/avahi-daemon.conf edit</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[server]</div><div class="line"><span class="built_in">enable</span>-dbus=no</div><div class="line">/etc/init.d/avahi-daemon <span class="built_in">enable</span></div><div class="line">/etc/init.d/avahi-daemon start</div></pre></td></tr></table></figure>
<p>SHOULD SHOW<br><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a></p>
<h4 id="NEED-TO-GENERATE-A-GPG-KEY-–-WHY"><a href="#NEED-TO-GENERATE-A-GPG-KEY-–-WHY" class="headerlink" title="NEED TO GENERATE A GPG KEY – WHY???"></a>NEED TO GENERATE A GPG KEY – WHY???</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure>
<h4 id="Works-only-if-rngd-is-there-generates"><a href="#Works-only-if-rngd-is-there-generates" class="headerlink" title="Works only if rngd is there, generates"></a>Works only if rngd is there, generates</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/arduino/arduino_gpg.asc</div><div class="line">/etc/arduino/arduino_gpg.pub</div><div class="line">/etc/arduino/arduino_gpg.sec</div></pre></td></tr></table></figure>
<p>#Apparently Yun uses avrdude linuxgpio, this is suggested by /etc/linino/test_avrdude.sh</p>
<p>#run-avrdude wants to edit sys/class/gpio/gpio21/value which does not exist here</p>
<p>#Also see <a href="http://www.tonylianlong.com/?p=135" target="_blank" rel="external">http://www.tonylianlong.com/?p=135</a></p>
<p>#It has modified files for the Arduino IDE and it has the GPG key and gpg binary</p>
<p>#They have also a modified /usr/bin/run-avrdude script which is pure genius, it changes linuxgpio to serial programming and if that is all that is required to change makes it trivial to hook up different boards via USB as well:</p>
<p>#!/bin/sh</p>
<p>#echo 1 &gt; /sys/class/gpio/gpio21/value</p>
<p>#avrdude -c linuxgpio -C /etc/avrdude.conf -p m32u4 -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xFB:m -Uflash:w:$1:i $2</p>
<p>#echo 0 &gt; /sys/class/gpio/gpio21/value</p>
<p>#echo “$2” &gt; /s2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /dev/ttyACM0</div><div class="line">lsusb|grep 0043</div><div class="line"><span class="keyword">if</span> [ <span class="string">"$?"</span>x == <span class="string">"0"</span>x ];<span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> UNO</div><div class="line">avrdude -V -p m328p -c arduino -b 115200 -P /dev/ttyACM0 -C /etc/avrdude.conf -U flash:w:<span class="variable">$1</span> <span class="variable">$2</span></div><div class="line"><span class="keyword">fi</span></div><div class="line">lsusb|grep 0042</div><div class="line"><span class="keyword">if</span> [ <span class="string">"$?"</span>x == <span class="string">"0"</span>x ];<span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> MEGA</div><div class="line">avrdude -V -C/etc/avrdude.conf -patmega2560 -cstk500v2 -P/dev/ttyACM0 -b115200 -D -Uflash:w:<span class="variable">$1</span> <span class="variable">$2</span>      </div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /dev/ttyACM0</div><div class="line">====</div><div class="line"><span class="comment"># kmod-fs-hfsplus and kmod-nls-utf8 sufficient to mount Mac devices?</span></div><div class="line">====</div><div class="line">For my own reference, these are the packages that come with the YUN according to http://download.linino.org/linino_distro/linino_dev/latest/openwrt-ar71xx-generic-rootfs.tar.gz:</div><div class="line">luci-lib-sys kmod-usb-storage terminfo libuci-lua libc opkg triggerhappy kmod-usb-core libpthread ubus iw kmod-crypto-manager luci-mod-admin-core busybox libubus-lua python-json kmod-crypto-hash libiwinfo-lua swconfig kmod-fs-reiserfs libiwinfo libdbus libcurl libdw kmod-lib-crc-ccitt libgpgme luci-theme-openwrt luci-theme-bootstrap kmod-pppoe kmod-video-core libavahi-client kmod-pppox kmod-ipt-conntrack kmod-lib-crc16 base-files kmod-fs-hfsplus netifd uboot-envtools kmod-usb-ohci dnsmasq usbutils luci-sgi-cgi libblkid ubusd libelf1 kmod-spi-gpio python kmod-i2c-core libgpg-error block-mount kmod-fs-vfat kmod-usb2 firewall luci-app-firewall kmod-fs-hfs temboo luci-lib-ipkg libuci liblua libip4tc avahi-dnsconfd libcyassl libdaemon kmod-ath9k libavahi uci lua kmod-fs-ext4 wpad-mini dbus dropbear kmod-ledtrig-timer curl kmod-nls-utf8 kmod-crypto-aes mtd libstdcpp kmod-crypto-core luci-theme-base libjson-c libgcc libreadline libip6tc luci-proto-ppp libffi libuuid luci-mod-admin-full ppp libubox kmod-leds-gpio libusb-1.0 kmod-gpio-button-hotplug gnupg libjson cpu-mcu-bridge luci-lib-web spacebrew librt libassuan kmod-mac80211 libjson-script swap-utils libblobmsg-json iptables hotplug2 kmod-ipt-nathelper kmod-fs-ntfs kmod-fuse jshn libncurses kmod-ipt-core luci-webpanel-linino kmod-ledtrig-default-on rng-tools libpolarssl kmod-ppp kmod-spi-bitbang avahi-daemon uhttpd-mod-lua python-mini kmod-wdt-ath79 avahi-utils libubus uhttpd libxtables avrdude zlib luci-lib-nixio luci-lib-json luci kmod-spi-tty-ds kmod-ath libexpat kernel libnl-tiny libbz2 blkid libusb luci-proto-core px5g kmod-nls-base luci-i18n-english libgdbm yun-scripts libusb-compat uhttpd-mod-ubus uSDaemon wireless-tools kmod-ath9k-common kmod-crypto-arc4 libopenssl kmod-scsi-core kmod-cfg80211 libavahi-dbus-support luci-lib-core ppp-mod-pppoe kmod-spi-dev kmod-ipt-nat kmod-ledtrig-netdev</div><div class="line">====</div><div class="line">opkg install avrdude --force-depends</div><div class="line">opkg install rng-tools --force-depends</div><div class="line">＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋</div><div class="line">opkg update</div><div class="line">opkg list|grep bridge</div><div class="line">opkg list|grep yun</div><div class="line">opkg install luci</div><div class="line">opkg install -force-overwrite cpu-mcu-bridge yun-conf yun-scripts luci-app-arduino-webpanel gnupg uSDaemon</div><div class="line">opkg install rng-tools avrdude --force-depends</div><div class="line">rm /tmp/luci-indexcache</div><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure></p>
<p><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a></p>
<h2 id="2015-07-24-YunWebUI"><a href="#2015-07-24-YunWebUI" class="headerlink" title="2015-07-24 YunWebUI"></a>2015-07-24 YunWebUI</h2><p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git</div></pre></td></tr></table></figure></p>
<p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>Development: the easy way<br>The easiest way to hack the web panel is to copy on your Yún the files you find in this repo, maintaining the folders structure.<br>For example, file usr/lib/lua/luci/controller/arduino/index.lua will go to /usr/lib/lua/luci/controller/arduino/index.lua on your Yún.<br>Then access the webpanel at <a href="http://arduino.local/" target="_blank" rel="external">http://arduino.local/</a> (where “arduino” is the name of your Yún), properly edit file index.lua and refresh the page to see the changes.<br>Once done, copy the files back to your pc and submit us a pull request, so that everyone can take advantage of the improvements you made.<br>Development: the fast, local but hard way<br>You need a GNU/Linux box and the following tools: subversion, gnupg, lua, make, gcc, wget. On Debian based distros, these are packages subversion, gnupg, lua5.1, liblua5.1-0-dev, build-essential, wget.<br><strong>参考</strong><br><a href="https://github.com/arduino/YunWebUI" target="_blank" rel="external">https://github.com/arduino/YunWebUI</a></p>
<h5 id="ubuntu系统设置"><a href="#ubuntu系统设置" class="headerlink" title="ubuntu系统设置"></a>ubuntu系统设置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/arduino</div><div class="line"><span class="built_in">cd</span> /etc/arduino</div><div class="line">sudo wget https://raw.githubusercontent.com/arduino/openwrt-packages-yun/master/arduino/yun-conf/files/etc/arduino/gpg_gen_key_batch</div><div class="line">sudo gpg --batch --gen-key /etc/arduino/gpg_gen_key_batch</div><div class="line">sudo rm <span class="_">-f</span> /etc/arduino/arduino_gpg.asc</div><div class="line">sudo gpg --no-default-keyring --secret-keyring /etc/arduino/arduino_gpg.sec --keyring /etc/arduino/arduino_gpg.pub --export --armor --output /etc/arduino/arduino_gpg.asc</div><div class="line">sudo chmod 644 /etc/arduino/arduino_gpg.*</div><div class="line">svn co http://svn.luci.subsignal.org/luci/branches/luci-0.11 luci</div><div class="line"><span class="built_in">cd</span> /home/router-dev/iot-gateway</div><div class="line">svn co https://github.com/arduino/YunWebUI/trunk yunWebUI</div></pre></td></tr></table></figure>
<p>进入openwrt目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/feeds</div><div class="line"><span class="built_in">cd</span> luci</div><div class="line">mkdir applications/arduino</div><div class="line">cp applications/myapplication/Makefile applications/arduino</div><div class="line">ln <span class="_">-s</span> /home/router-dev/iot-gateway/yunWebUI/usr/lib/lua/luci applications/arduino/luasrc</div><div class="line">ln <span class="_">-s</span> /home/router-dev/iot-gateway/yunWebUI/www applications/arduino/htdocs</div></pre></td></tr></table></figure></p>
<p>回到openwrt目录/home/router-dev/openwrt/branches/attitude_adjustment/feeds/luci<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make runuhttpd</div><div class="line">http://localhost:8080/cgi-bin/luci/webpanel/</div><div class="line">passwd：admin</div></pre></td></tr></table></figure></p>
<p>#luci-app-arduino-webpanel-1.5.6</p>
<p>#<a href="http://arduino.cc/download.php?f=/luci-app-arduino-webpanel-1.5.6.tar.bz2" target="_blank" rel="external">http://arduino.cc/download.php?f=/luci-app-arduino-webpanel-1.5.6.tar.bz2</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/package</div><div class="line">mkdir arduino</div><div class="line">touch Makefile</div></pre></td></tr></table></figure></p>
<p>复制以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (c) 2014 Arduino LLC. All right reserved.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This is free software, licensed under the GNU General Public License v2.</span></div><div class="line"><span class="comment"># See /LICENSE for more information.</span></div><div class="line"><span class="comment">#</span></div><div class="line">include $(TOPDIR)/rules.mk</div><div class="line">PKG_NAME:=luci-app-arduino-webpanel</div><div class="line">PKG_VERSION:=1.5.6</div><div class="line">PKG_RELEASE:=1</div><div class="line">PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2</div><div class="line">PKG_SOURCE_URL:=http://arduino.cc/download.php?f=/</div><div class="line">PKG_MD5SUM:=fbcadb0b846db24302<span class="built_in">cd</span>4e027bf3927e</div><div class="line">include $(INCLUDE_DIR)/package.mk</div><div class="line">define Package/luci-app-arduino-webpanel</div><div class="line">  SECTION:=luci</div><div class="line">  CATEGORY:=LuCI</div><div class="line">  SUBMENU:=3. Applications</div><div class="line">  TITLE:= simplified wifi configuration panel</div><div class="line">  DEPENDS:=+luci +luci-lib-json +uhttpd-mod-lua +yun-scripts</div><div class="line">endef</div><div class="line">define Package/luci-app-arduino-webpanel/description</div><div class="line">simplified wifi configuration panel</div><div class="line">endef</div><div class="line">define Build/Compile</div><div class="line"><span class="comment"># NOOP</span></div><div class="line">endef</div><div class="line">define Package/luci-app-arduino-webpanel/install</div><div class="line">$(INSTALL_DIR) $(1)/usr/lib/lua/luci/controller/arduino</div><div class="line">$(INSTALL_DIR) $(1)/usr/lib/lua/luci/view/arduino</div><div class="line">$(INSTALL_DIR) $(1)/www/luci-static/resources/arduino</div><div class="line">find $(PKG_BUILD_DIR)/usr/ -name <span class="string">'*.lua'</span> -exec luac <span class="_">-s</span> -o &#123;&#125; &#123;&#125; \;</div><div class="line">$(CP) $(PKG_BUILD_DIR)/usr/* $(1)/usr/</div><div class="line">$(CP) $(PKG_BUILD_DIR)/www/* $(1)/www/</div><div class="line">endef</div><div class="line">$(<span class="built_in">eval</span> $(call BuildPackage,luci-app-arduino-webpanel))</div></pre></td></tr></table></figure></p>
<p>make menuconfig<br>git clone <a href="https://github.com/arduino/openwrt-yun.git" target="_blank" rel="external">https://github.com/arduino/openwrt-yun.git</a></p>
<h1 id="2015-07-22-zigbeegw-luci"><a href="#2015-07-22-zigbeegw-luci" class="headerlink" title="2015-07-22 zigbeegw-luci"></a>2015-07-22 zigbeegw-luci</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># zigbeegw-luci</span></div><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/package</div><div class="line">svn co https://github.com/paradislover/zigbeegw-luci/trunk zigbeegw</div><div class="line">make menuconfig</div><div class="line">LuCI ---&gt;</div><div class="line">    3.Applications ---&gt;</div><div class="line">&lt;*&gt; luci-app-zigbeegw ................ LuCI Support <span class="keyword">for</span> zigbeegw</div><div class="line">Kernel modules ---&gt;</div><div class="line">    USB Support ---&gt;</div><div class="line">&lt;*&gt; kmod-usb-acm</div><div class="line">&lt;*&gt; kmod-usb-serial</div><div class="line">&lt;*&gt;   kmod-usb-cp210x</div><div class="line">&lt;*&gt;   kmod-usb-pl2303</div><div class="line">make package/zigbee/clean</div><div class="line">make package/zigbee/compile</div><div class="line">make package/zibgee/install</div></pre></td></tr></table></figure>
<h2 id="2015-07-10-13-16-21-OpenWRT下远程调试"><a href="#2015-07-10-13-16-21-OpenWRT下远程调试" class="headerlink" title="2015-07-10,13,16,21 OpenWRT下远程调试"></a>2015-07-10,13,16,21 OpenWRT下远程调试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### OpenWRT下远程调试 attitude_adjustment WR703N</span></div><div class="line">``` bash</div><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/attitude_adjustment</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div><div class="line">src-svn luci http://svn.luci.subsignal.org/luci/branches/luci-0.11/contrib/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div><div class="line"><span class="comment">#src-svn luci http://svn.luci.subsignal.org/luci/branches/luci-0.11/contrib/package</span></div></pre></td></tr></table></figure></p>
<p>并增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">      -&gt; [*] Toolchain Options</div><div class="line">   -&gt; [*]Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">-&gt; [*]Build gdb</div><div class="line">Base System –&gt; &lt;*&gt; dropbear        </div><div class="line">           　–&gt; &lt;*&gt; libstdcpp</div><div class="line">Network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line">Utilities –&gt; // 这两个选项会导致wr703n固件编译不出</div><div class="line">&lt;*&gt; gdb</div><div class="line">&lt;*&gt; gdbserver</div></pre></td></tr></table></figure></p>
<p><a href="https://dev.openwrt.org/ticket/18331" target="_blank" rel="external">https://dev.openwrt.org/ticket/18331</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ tar -xjf OpenWrt-ImageBuilder-ar71xx_generic-for-linux-i686.tar.bz2</div><div class="line">$ <span class="built_in">cd</span> OpenWrt-ImageBuilder-ar71xx_generic-for-linux-i686/</div><div class="line">$ make info | grep 703</div><div class="line">TLWR703:</div><div class="line">TP-LINK TL-WR703N</div><div class="line">$ make image PROFILE=TLWR703</div><div class="line">[...]</div><div class="line">$ ls <span class="_">-l</span> bin/ar71xx/</div><div class="line">make image PROFILE=TLWR703 PACKAGES=<span class="string">"luci luci-i18n-chinese libstdcpp vsftpd openssh-sftp-server gdb gdbserver"</span></div></pre></td></tr></table></figure></p>
<h2 id="2015-07-09-OpenWRT下远程调试"><a href="#2015-07-09-OpenWRT下远程调试" class="headerlink" title="2015-07-09 OpenWRT下远程调试"></a>2015-07-09 OpenWRT下远程调试</h2><h4 id="OpenWRT下远程调试-attitude-adjustment-WR703N"><a href="#OpenWRT下远程调试-attitude-adjustment-WR703N" class="headerlink" title="OpenWRT下远程调试 attitude_adjustment WR703N"></a>OpenWRT下远程调试 attitude_adjustment WR703N</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/attitude_adjustment</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div></pre></td></tr></table></figure></p>
<p>并增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make defconfig</div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">      -&gt; [*] Toolchain Options</div><div class="line">   -&gt; [*]Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">-&gt; [*]Build with debug information</div><div class="line">-&gt; [*]Build gdb</div><div class="line">Base System –&gt; &lt;*&gt; dropbear        </div><div class="line">           　–&gt; &lt;*&gt; libstdcpp</div><div class="line">Network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line">Utilities –&gt; &lt;*&gt; gdbserver</div></pre></td></tr></table></figure></p>
<p>结论：　未完全成功！！！</p>
<h2 id="2015-07-08-OpenWRT下远程调试-7620n"><a href="#2015-07-08-OpenWRT下远程调试-7620n" class="headerlink" title="2015-07-08 OpenWRT下远程调试 7620n"></a>2015-07-08 OpenWRT下远程调试 7620n</h2><h4 id="OpenWRT下远程调试-barrier-breaker-7620n"><a href="#OpenWRT下远程调试-barrier-breaker-7620n" class="headerlink" title="OpenWRT下远程调试 barrier_breaker 7620n"></a>OpenWRT下远程调试 barrier_breaker 7620n</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/barrier_breaker</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make defconfig</div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">   -&gt; [*] Toolchain Options</div><div class="line">       -&gt; [*]Build/install fortran compiler</div><div class="line">   //  -&gt; [*]Build with debug information</div><div class="line">       -&gt; [*]Build gdb</div><div class="line">   //→ “gdb”</div><div class="line">   //→ “Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">启动以下五项</div><div class="line">// Global build setting –&gt; Preferred standard C++ library -&gt; libstdc++</div><div class="line">Base System –&gt; &lt;*&gt; dropbear</div><div class="line">            –&gt; &lt;*&gt; libstdcpp</div><div class="line">Development –&gt; &lt;*&gt; gdb</div><div class="line">               &lt;*&gt; gdbserver</div><div class="line">network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line"></div><div class="line">~$ make V=s</div></pre></td></tr></table></figure></p>
<p>结论：　未完全成功！！！</p>
<h2 id="2015-07-07-helloworld"><a href="#2015-07-07-helloworld" class="headerlink" title="2015-07-07 helloworld"></a>2015-07-07 helloworld</h2><p>####　内置　helloworld<br>a).在package目录下创建helloworld目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~$ <span class="built_in">cd</span> package</div><div class="line">~$ mkdir helloworld</div><div class="line">~$ <span class="built_in">cd</span> helloworld</div></pre></td></tr></table></figure></p>
<p>b).建立Makefile<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ touch Makefile</div><div class="line">~$ vim Makefile</div></pre></td></tr></table></figure></p>
<p>Makefile文件模板内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##############################################</span></div><div class="line"><span class="comment"># OpenWrt Makefile for helloworld program</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Most of the variables used here are defined in</span></div><div class="line"><span class="comment"># the include directives below. We just need to</span></div><div class="line"><span class="comment"># specify a basic description of the package,</span></div><div class="line"><span class="comment"># where to build our program, where to find</span></div><div class="line"><span class="comment"># the source files, and where to install the</span></div><div class="line"><span class="comment"># compiled program on the router.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Be very careful of spacing in this file.</span></div><div class="line"><span class="comment"># Indents should be tabs, not spaces, and</span></div><div class="line"><span class="comment"># there should be no trailing whitespace in</span></div><div class="line"><span class="comment"># lines that are not commented.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">##############################################</span></div><div class="line">include $(TOPDIR)/rules.mk</div><div class="line"><span class="comment"># Name and release number of this package</span></div><div class="line">PKG_NAME:=helloworld.qq.com/</div><div class="line">PKG_RELEASE:=1</div><div class="line"><span class="comment"># This specifies the directory where we're going to build the program.</span></div><div class="line"><span class="comment"># The root build directory, $(BUILD_DIR), is by default the build_mipsel</span></div><div class="line"><span class="comment"># directory in your OpenWrt SDK directory</span></div><div class="line">PKG_BUILD_DIR := $(BUILD_DIR)/$(PKG_NAME)</div><div class="line">include $(INCLUDE_DIR)/package.mk</div><div class="line"><span class="comment"># Specify package information for this program.</span></div><div class="line"><span class="comment"># The variables defined here should be self explanatory.</span></div><div class="line"><span class="comment"># If you are running Kamikaze, delete the DESCRIPTION</span></div><div class="line"><span class="comment"># variable below and uncomment the Kamikaze define</span></div><div class="line"><span class="comment"># directive for the description below</span></div><div class="line">define Package/helloworld</div><div class="line">SECTION:=utils</div><div class="line">CATEGORY:=Utilities</div><div class="line">TITLE:=Helloworld -- prints a <span class="built_in">test</span> message</div><div class="line">endef</div><div class="line"><span class="comment"># Uncomment portion below for Kamikaze and delete DESCRIPTION variable above</span></div><div class="line">define Package/helloworld/description</div><div class="line">        If you can<span class="string">'t figure out what this program does, you'</span>re probably</div><div class="line">        brain-dead and need immediate medical attention.</div><div class="line">endef</div><div class="line"><span class="comment"># Specify what needs to be done to prepare for building the package.</span></div><div class="line"><span class="comment"># In our case, we need to copy the source files to the build directory.</span></div><div class="line"><span class="comment"># This is NOT the default.  The default uses the PKG_SOURCE_URL and the</span></div><div class="line"><span class="comment"># PKG_SOURCE which is not defined here to download the source from the web.</span></div><div class="line"><span class="comment"># In order to just build a simple program that we have just written, it is</span></div><div class="line"><span class="comment"># much easier to do it this way.</span></div><div class="line">define Build/Prepare</div><div class="line">mkdir -p $(PKG_BUILD_DIR)</div><div class="line">$(CP) ./src/* $(PKG_BUILD_DIR)/</div><div class="line">endef</div><div class="line"><span class="comment"># We do not need to define Build/Configure or Build/Compile directives</span></div><div class="line"><span class="comment"># The defaults are appropriate for compiling a simple program such as this one</span></div><div class="line"><span class="comment"># Specify where and how to install the program. Since we only have one file,</span></div><div class="line"><span class="comment"># the helloworld executable, install it by copying it to the /bin directory on</span></div><div class="line"><span class="comment"># the router. The $(1) variable represents the root directory on the router running</span></div><div class="line"><span class="comment"># OpenWrt. The $(INSTALL_DIR) variable contains a command to prepare the install</span></div><div class="line"><span class="comment"># directory if it does not already exist.  Likewise $(INSTALL_BIN) contains the</span></div><div class="line"><span class="comment"># command to copy the binary file from its current location (in our case the build</span></div><div class="line"><span class="comment"># directory) to the install directory.</span></div><div class="line">define Package/helloworld/install</div><div class="line">$(INSTALL_DIR) $(1)/bin</div><div class="line">$(INSTALL_BIN) $(PKG_BUILD_DIR)/helloworld $(1)/bin/</div><div class="line">endef</div><div class="line"><span class="comment"># This line executes the necessary commands to compile our program.</span></div><div class="line"><span class="comment"># The above define directives specify all the information needed, but this</span></div><div class="line"><span class="comment"># line calls BuildPackage which in turn actually uses this information to</span></div><div class="line"><span class="comment"># build a package.</span></div><div class="line">$(<span class="built_in">eval</span> $(call BuildPackage,helloworld))</div></pre></td></tr></table></figure></p>
<p>c).创建src目录，并编写helloworld程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ mkdir src</div><div class="line">~$ <span class="built_in">cd</span> src</div></pre></td></tr></table></figure></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/****************</span></div><div class="line">* Helloworld.c</div><div class="line">*****************/</div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"hello world! \n\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编写Makefile文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># build helloworld executable when user executes "make"</span></div><div class="line">helloworld: helloworld.o</div><div class="line">$(CC) $(LDFLAGS) helloworld.o -o helloworld</div><div class="line">helloworld.o: helloworld.c</div><div class="line">$(CC) $(CFLAGS) -c helloworld.c</div><div class="line"><span class="comment"># remove object files and executable when user executes "make clean"</span></div><div class="line">clean:</div><div class="line">rm *.o helloworld</div><div class="line">在这两个文件的目录下，执行make 应该可以生成helloworld的可执行文件。执行helloworld后，能够打印出“hello world!”。 这一步，主要保证我们的源程序是可以正常编译的。</div><div class="line">d).编译</div><div class="line">~$ make menuconfig</div><div class="line">?6?1 Utilities -&gt; Toolchain Options</div><div class="line">→ (*) helloworld</div><div class="line">~$ make V=s</div></pre></td></tr></table></figure></p>
<h2 id="2015-07-06-OpenWRT-Build"><a href="#2015-07-06-OpenWRT-Build" class="headerlink" title="2015-07-06 OpenWRT Build"></a>2015-07-06 OpenWRT Build</h2><p>####　1.下载OpenWRT源码包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ svn checkout svn://svn.openwrt.org/openwrt/trunk</div></pre></td></tr></table></figure></p>
<p>进入源码文件夹：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ <span class="built_in">cd</span> trunk</div></pre></td></tr></table></figure></p>
<p>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git</div></pre></td></tr></table></figure></p>
<p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.12</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div></pre></td></tr></table></figure></p>
<p>下一步是检查编译环境，若可进行编译则生成默认配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ make defconfig</div></pre></td></tr></table></figure></p>
<p>menuconfig是一个基于文本的工具，它处理选择的目标（需要还是不需要）、编译生成软件包（openwrt下是IPKG格式）以及内核选项（编译成模块还是内核）等等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<h4 id="2-增加profile"><a href="#2-增加profile" class="headerlink" title="2. 增加profile"></a>2. 增加profile</h4><p>$ 在../target/linux/ramips/mt7620/profiles 目录增加 wrtnode.mk<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (C) 2015 OpenWrt.org</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This is free software, licensed under the GNU General Public License v2.</span></div><div class="line"><span class="comment"># See /LICENSE for more information.</span></div><div class="line"><span class="comment"># add by : cuiqingwei</span></div><div class="line"><span class="comment">#</span></div><div class="line">define Profile/WRTNODE</div><div class="line"> NAME:=Wrtnode</div><div class="line"> PACKAGES:=\</div><div class="line">kmod-usb-core kmod-usb-dwc2 kmod-usb2 kmod-usb-ohci \</div><div class="line">kmod-mt76</div><div class="line">endef</div><div class="line">define Profile/WRTNODE/Description</div><div class="line"> Support <span class="keyword">for</span> WRTnode Board</div><div class="line">endef</div><div class="line">$(<span class="built_in">eval</span> $(call Profile,WRTNODE))</div></pre></td></tr></table></figure></p>
<p>特别提醒：<br>a).profile文件的格式一定要书写正确。特别是 “\”反斜杠后面，千万不能有空格，否则会导致mt7620a整个subtarget都消失不见。<br>b).注意package之间的依赖关系，如kmod-ac97 kmod-sound-soc-core kmod-sound-mt7620都依赖于kmod-sound-core，那么就应该按照先后顺序依次写出，同样的道理：kmod-ac97 kmod-sound-soc-core应该出现在kmod-sound-mt7620前面。<br>c).必须删除tmp目录，才能让添加的profile生效。<br>最后，就可以在make menuconfig中看到你想要的东西啦。</p>
<h4 id="3-更改kernel-console打印波特率"><a href="#3-更改kernel-console打印波特率" class="headerlink" title="3.更改kernel console打印波特率"></a>3.更改kernel console打印波特率</h4><p>在..target/linux/ramips/dts/WRTNODE.dts中添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chosen &#123;</div><div class="line">bootargs = <span class="string">"console=ttyS0,115200"</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<hr>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h3 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make clean[清楚bin 目录]</div><div class="line">make dirclean[make clean]+[清除交叉编译工具及工具链目录]</div><div class="line">make distclean[清除所有相关的东西，包括下载的软件包，配置文件，feed内容等]</div></pre></td></tr></table></figure>
<h3 id="装-Luci-web-UI"><a href="#装-Luci-web-UI" class="headerlink" title="装 Luci web UI :"></a>装 Luci web UI :</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update packages luci</div><div class="line">./scripts/feeds install <span class="_">-a</span> -p luci</div></pre></td></tr></table></figure>
<h3 id="tftp更新固件"><a href="#tftp更新固件" class="headerlink" title="tftp更新固件"></a>tftp更新固件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tftp 0x80000000 wr703n-f.bin</div><div class="line">tftp 0x80000000 openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin</div><div class="line">erase 0x9f020000 +0x3c0000</div><div class="line">cp.b 0x80000000 0x9f020000 0x3c0000</div><div class="line">bootm 0x9f020000</div></pre></td></tr></table></figure>
<h3 id="scp至路由器更新固件"><a href="#scp至路由器更新固件" class="headerlink" title="scp至路由器更新固件"></a>scp至路由器更新固件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp bin/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin root@192.168.199.175:/tmp/</div><div class="line">mtd -r write openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin firmware</div><div class="line">scp zbGateway.bin root@192.168.199.175:/tmp/</div></pre></td></tr></table></figure>
<h3 id="Network-testing-with-iperf"><a href="#Network-testing-with-iperf" class="headerlink" title="Network-testing with iperf"></a>Network-testing with iperf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ping -c 5 192.168.199.175</div><div class="line">netcat -u <span class="_">-l</span> -p 2000 &gt; /dev/null</div><div class="line">nc -u <span class="_">-l</span> -p 2000 &gt; /dev/null</div><div class="line">dd <span class="keyword">if</span>=/dev/zero bs=1M count=100 | pv -brt | netcat -u 192.168.199.175 2000</div></pre></td></tr></table></figure>
<h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iperf <span class="_">-s</span></div><div class="line">iperf -c 192.168.199.175</div></pre></td></tr></table></figure>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">iperf <span class="_">-s</span> -u</div><div class="line">iperf -c 192.168.199.175 -u</div><div class="line">scp root@192.168.199.175:/etc/opkg.conf /home/router-dev/</div><div class="line">scp /home/router-dev/opkg.conf root@192.168.199.175:/etc/</div><div class="line">scp openwrt-helloworld root@192.168.199.175:/usr/</div><div class="line">root@OpenWrt:/<span class="comment"># gdbserver 192.168.199.175:10000 /usr/openwrt-helloworld</span></div></pre></td></tr></table></figure>
<h3 id="eclipse调试-没有成功"><a href="#eclipse调试-没有成功" class="headerlink" title="eclipse调试[没有成功]"></a>eclipse调试[没有成功]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/staging_dir</div><div class="line">mips-openwrt-linux-</div><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/staging_dir/toolchain-mips_r2_gcc-4.6-linaro_uClibc-0.9.33.2/bin</div><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/build_dir/toolchain-mips_r2_gcc-4.6-linaro_uClibc-0.9.33.2/gdb-linaro-7.2-2011.03-0/gdb/gdb</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/staging_dir</div><div class="line">mipsel-openwrt-linux-</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/staging_dir/toolchain-mipsel_24kec+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/bin</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/build_dir/toolchain-mipsel_24kec+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/gdb-linaro-7.6-2013.05/gdb/gdb</div></pre></td></tr></table></figure>
<p>############################################################<br>??? 问题<br>mipsel-openwrt-linux-g++: warning: environment variable ‘STAGING_DIR’ not defined<br>!!! 解决<br>eclipse菜单Window-&gt;Preferences-&gt;C/C++-&gt;Environmentz增加<br>STAGING_DIR　<br>/home/router-dev/openwrt/trunk-dev/staging_dir<br><a href="http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/" target="_blank" rel="external">http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</a><br>//////////////////////////////////////////////////////////////////////////////////////<br>//////////////////////////////////////////////////////////////////////////////////////<br>将vsftpd编译进openwrt的固件中去</p>
<h1 id="http-chaochaoblog-com-archives-1007"><a href="#http-chaochaoblog-com-archives-1007" class="headerlink" title="http://chaochaoblog.com/archives/1007"></a><a href="http://chaochaoblog.com/archives/1007" target="_blank" rel="external">http://chaochaoblog.com/archives/1007</a></h1><p>首先进去我们已经下载好了源码的目录，如backfire或者其它分支的。然后利用feeds来下载安装vsftpd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update</div><div class="line">~$ ./scripts/feeds install <span class="_">-d</span> m vsftpd</div></pre></td></tr></table></figure></p>
<p>之后你可以到目录/feeds/package/net/下看了，就会发现我们的vsftpd这个源码包都下载下来了。<br>之后回根目录，输入<br>~$ make menuconfig<br>在network –&gt; file trasfer下就可以找到vsftpd了，果断按下y选择编译进固件，当然你也可以选择m那么就只会编译出ipk文件来了。<br>~$ make V=s 编译出bin的固件镜像文件来，刷入flash，然后ssh之后ps查看进程<br>OpenWrt开启sftp，方便传输文件。修改opkg.conf文件</p>
<p>#<a href="http://see.sl088.com/wiki/Openwrt_opkg%E6%BA%90%E8%AE%BE%E7%BD%AE" target="_blank" rel="external">http://see.sl088.com/wiki/Openwrt_opkg%E6%BA%90%E8%AE%BE%E7%BD%AE</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@OpenWrt:~<span class="comment"># vi /etc/opkg.conf</span></div></pre></td></tr></table></figure></p>
<p>为<br>option overlay_root /overlay<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># src/gz chaos_calmer_base http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/packages/base</span></div><div class="line"><span class="comment"># src/gz chaos_calmer_luci http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/packages/luci</span></div><div class="line">src/gz chaos_calmer_packages http://downloads.openwrt.org/chaos_calmer/15.05-rc2/ramips/mt7620/packages/packages</div><div class="line"><span class="comment"># option check_signature 1</span></div></pre></td></tr></table></figure></p>
<p>主要去掉签名check,增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">src/gz chaos_calmer_packages http://downloads.openwrt.org/chaos_calmer/15.05-rc2/ramips/mt7620/packages/packages</div><div class="line">root@OpenWrt:~<span class="comment"># opkg update</span></div><div class="line">root@OpenWrt:~<span class="comment"># opkg install vsftpd openssh-sftp-server</span></div><div class="line">root@OpenWrt:~<span class="comment"># /etc/init.d/vsftpd enable</span></div><div class="line">root@OpenWrt:~<span class="comment"># /etc/init.d/vsftpd start</span></div><div class="line">.....................</div></pre></td></tr></table></figure></p>
<p>#<a href="http://www.cnblogs.com/peteryj/archive/2011/08/23/2151216.html" target="_blank" rel="external">http://www.cnblogs.com/peteryj/archive/2011/08/23/2151216.html</a><br>a).建立调试环境<br>配置编译OpenWRT<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></p>
<p>启动以下两项<br>Advanced configuration options (for developers) –&gt; Toolchain options –&gt; Build gdb<br>Development –&gt; gdbserver<br>b).编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make V=99，如果已经编译过，则make toolchain/install 编译下gdb即可</div></pre></td></tr></table></figure></p>
<p>c).编译待调试程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></p>
<p>启动Advanced configuration options (for developers) –&gt; Build options –&gt; Enable debugging<br>编译程序<br>以snmpd为例 ，使用make package/net-snmp/compile去编译程序，生成带调试信息的snmpd，作为宿主机调试使用。<br>以上就是准备工作。下面简单介绍一下调试过程。<br>d).调试程序<br>启动目标机上的待调试程序<br>首先加载并启动编译好的OpenWRT系统，然后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gdbserver &lt;local_IP&gt;:&lt;port&gt; &lt;program&gt; &lt;args&gt;</div></pre></td></tr></table></figure></p>
<p>启动宿主机gdb<br>(这里要修复一个bug，方法是：cd <openwrtdir>/staging<em>dir/<targetarch>; rmdir lib; ln -s ../toolchain-<targetarch></targetarch></targetarch></em><gccver>/lib lib)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> &lt;openwrtdir&gt;/build_dir/toolchain-&lt;targetarch&gt;_&lt;gccver&gt;/gdb-6.3/gdb</div></pre></td></tr></table></figure></gccver></openwrtdir></p>
<p>./gdb– 启动<br>设置gdb，并启动调试程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">set</span> solib-absolute-prefix &lt;openwrtdir&gt;/staging_dir/&lt;targetarch&gt;</div><div class="line">file &lt;openwrtdir&gt;/build_dir/&lt;targetarch&gt;/&lt;path&gt;/&lt;executable&gt;</div></pre></td></tr></table></figure></p>
<p>连接目标机：target remote <ip>:<port><br>连接成功之后，就可以按正常的gdb调试流程进行调试了。</port></ip></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2016-04-23-Openwrt-Yun&quot;&gt;&lt;a href=&quot;#2016-04-23-Openwrt-Yun&quot; class=&quot;headerlink&quot; title=&quot;2016-04-23 Openwrt Yun&quot;&gt;&lt;/a&gt;2016-04-23 Openwrt Yun&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/bin/bash -ex&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;FEEDS&quot;&gt;&lt;a href=&quot;#FEEDS&quot; class=&quot;headerlink&quot; title=&quot;FEEDS&quot;&gt;&lt;/a&gt;FEEDS&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds uninstall &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;rm -rf feeds&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds update &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds install &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./scripts/feeds uninstall erlang freeswitch remotefs libzstream shflags opensips pulseaudio xmlrpc-c rtorrent sox umurmur-polarssl freecwmp-zstream osirisd logtrigger libplist libimobiledevice cmus mxml boost wt etherpuppet php4 aprx n2n pdnsd crtmpserver kissdx openconnect telepathy-python alljoyn&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="OpenWRT" scheme="http://cuiqingwei.github.io/tags/OpenWRT/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT之dl下载分享</title>
    <link href="http://cuiqingwei.github.io/2015/07/07/2015-07-07-OpenWRT%E4%B9%8Bdl%E4%B8%8B%E8%BD%BD%E5%88%86%E4%BA%AB/"/>
    <id>http://cuiqingwei.github.io/2015/07/07/2015-07-07-OpenWRT之dl下载分享/</id>
    <published>2015-07-07T10:00:00.000Z</published>
    <updated>2016-10-08T12:08:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>在编译OpenWrt最新的trunk时，碰到一个Git源码取不下来（你懂得，被墙了！）<br>在google上搜了一下，找到一个dl的地址：<br><a href="http://193.87.95.148/openwrt/raspi/trunk/dl/" target="_blank" rel="external">http://193.87.95.148/openwrt/raspi/trunk/dl/</a><br>补充：OpenWrt中国站也有一个下载地址！<br><a href="http://downloads.openwrt.org.cn/sources/" target="_blank" rel="external">http://downloads.openwrt.org.cn/sources/</a></p>
<p>另外还有一个将openwrt官网上的软件都下载下来了，并在本地建了服务器，然后与共享给大家！！<br>跳转下载链接<a href="http://dl.openwrtdl.com/index.html" target="_blank" rel="external">http://dl.openwrtdl.com/index.html</a><br>软件包总数量达到了<strong>3926</strong>个！<br>最新更新时间：<strong>2016-05-09</strong><br><a id="more"></a><br>并用脚本每小时执行一次，与openwrt官网对比，当官网更新了软件包则将对应的软件包下载到本地，保证官网更新，本地也会更新的效果！</p>
<p>服务器在我家里放着，上海长城宽带，20M光纤，上传速度可以达到3MB，对于下载小的软件包足够了！！</p>
<p>另外我会写个脚本每个一小时与openwrt官网同步一次，发现更新则加入到本地！！</p>
<p>欢迎大家来下载，如果有哪些软件未包含进来，请留言给我！！！</p>
<p>====================================================</p>
<p>我把所有的软件都放进了百度云盘下载，本文章中也会有所有的软件包的列表</p>
<p>只要你在网页内用“ctrl+f”搜索你需要的软件包就可以下载了！</p>
<p>当然也可以先进入百度分享连接中，然后“ctrl+f”搜索，刚发现个问题，百度网盘中并不是一次性的加载完所有的软件包列表，而是加载一部分，当你把滚动条拉到最底时他才会加载新的，这很蛋疼。。。体验就不好了！</p>
<p>网盘分享连接：<a href="http://pan.baidu.com/s/1dD4Rl53" target="_blank" rel="external">http://pan.baidu.com/s/1dD4Rl53</a></p>
<p>另外分享几个国外的openwrt软件源下载的地方，当然速度不一定好</p>
<p><a href="http://mirror2.openwrt.org/sources/" target="_blank" rel="external">http://mirror2.openwrt.org/sources/</a>  （openwrt官方网站，服务器在匈牙利，目前已经停止更新）</p>
<p><a href="https://downloads.openwrt.org/sources/" target="_blank" rel="external">https://downloads.openwrt.org/sources/</a> （openwrt官方网站，服务器在匈牙利）</p>
<p><a href="http://downloads.openwrt.org.cn/sources/" target="_blank" rel="external">http://downloads.openwrt.org.cn/sources/</a> （国内dreambox和pandora团队建立的，服务器在日本）</p>
<p><a href="http://143.129.80.193/openwrt/dl/" target="_blank" rel="external">http://143.129.80.193/openwrt/dl/</a>  （比利时的一个网站上，资源比官方的少，目前已无法访问）</p>
<p>TPLINK-WR703的trunk的dl</p>
<p><a href="http://log.nihon-ryouri.asia/tpl703n/trunk/dl/" target="_blank" rel="external">http://log.nihon-ryouri.asia/tpl703n/trunk/dl/</a>  （服务器在法国）</p>
<p>========感谢leejon提供的统计数据========</p>
<p>软件包条目数：<br><a href="http://pan.baidu.com/s/1dD4Rl53" target="_blank" rel="external">http://pan.baidu.com/s/1dD4Rl53</a>   2022个<br><a href="http://mirror2.openwrt.org/sources" target="_blank" rel="external">http://mirror2.openwrt.org/sources</a>   3860个<br><a href="https://downloads.openwrt.org/sources" target="_blank" rel="external">https://downloads.openwrt.org/sources</a>   2672个<br><a href="http://downloads.openwrt.org.cn/sources" target="_blank" rel="external">http://downloads.openwrt.org.cn/sources</a>   3223个<br><a href="http://143.129.80.193/openwrt/dl" target="_blank" rel="external">http://143.129.80.193/openwrt/dl</a>   590个</p>
<p>原文链接 <a href="http://www.openwrtdl.com/wordpress/package-index-download" target="_blank" rel="external">http://www.openwrtdl.com/wordpress/package-index-download</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在编译OpenWrt最新的trunk时，碰到一个Git源码取不下来（你懂得，被墙了！）&lt;br&gt;在google上搜了一下，找到一个dl的地址：&lt;br&gt;&lt;a href=&quot;http://193.87.95.148/openwrt/raspi/trunk/dl/&quot;&gt;http://193.87.95.148/openwrt/raspi/trunk/dl/&lt;/a&gt;&lt;br&gt;补充：OpenWrt中国站也有一个下载地址！&lt;br&gt;&lt;a href=&quot;http://downloads.openwrt.org.cn/sources/&quot;&gt;http://downloads.openwrt.org.cn/sources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外还有一个将openwrt官网上的软件都下载下来了，并在本地建了服务器，然后与共享给大家！！&lt;br&gt;跳转下载链接&lt;a href=&quot;http://dl.openwrtdl.com/index.html&quot;&gt;http://dl.openwrtdl.com/index.html&lt;/a&gt;&lt;br&gt;软件包总数量达到了&lt;strong&gt;3926&lt;/strong&gt;个！&lt;br&gt;最新更新时间：&lt;strong&gt;2016-05-09&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="OpenWRT" scheme="http://cuiqingwei.github.io/tags/OpenWRT/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT下ifconfig各接口说明</title>
    <link href="http://cuiqingwei.github.io/2015/07/06/2015-07-06-OpenWRT%E4%B8%8Bifconfig%E5%90%84%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/"/>
    <id>http://cuiqingwei.github.io/2015/07/06/2015-07-06-OpenWRT下ifconfig各接口说明/</id>
    <published>2015-07-06T10:00:00.000Z</published>
    <updated>2016-10-09T04:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rao-和raio（无线）"><a href="#rao-和raio（无线）" class="headerlink" title="rao 和raio（无线）"></a>rao 和raio（无线）</h1><p>这两个是成对出现，一看就知道是无线设备，它们各自对应一个SSID，分别是2.4G和5G。</p>
<h1 id="eth0（物理网卡）"><a href="#eth0（物理网卡）" class="headerlink" title="eth0（物理网卡）"></a>eth0（物理网卡）</h1><p>eth0.1 是vlan1分出的lan口。<br>eth0.2 是vlan分出的wan口。<br><a id="more"></a></p>
<h1 id="br-lan（无线-有线）"><a href="#br-lan（无线-有线）" class="headerlink" title="br-lan（无线+有线）"></a>br-lan（无线+有线）</h1><p>虚拟设备，br-lan = eth0.1 + rai0 + ra0，即将有线LAN口和无线网统一划分为 LAN，便于管理</p>
<h1 id="lo"><a href="#lo" class="headerlink" title="lo"></a>lo</h1><p>虚拟设备，自身的回环网设备。127.0.0.1</p>
<h1 id="aplic"><a href="#aplic" class="headerlink" title="aplic"></a>aplic</h1><p>虚拟设备，无线中继</p>
<h1 id="ppp0"><a href="#ppp0" class="headerlink" title="ppp0"></a>ppp0</h1><p>虚拟设备，连接PPTP服务器后分配的虚拟ip</p>
<h1 id="pppoe-wan"><a href="#pppoe-wan" class="headerlink" title="pppoe-wan"></a>pppoe-wan</h1><p>虚拟设备，拨号上网的</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;rao-和raio（无线）&quot;&gt;&lt;a href=&quot;#rao-和raio（无线）&quot; class=&quot;headerlink&quot; title=&quot;rao 和raio（无线）&quot;&gt;&lt;/a&gt;rao 和raio（无线）&lt;/h1&gt;&lt;p&gt;这两个是成对出现，一看就知道是无线设备，它们各自对应一个SSID，分别是2.4G和5G。&lt;/p&gt;
&lt;h1 id=&quot;eth0（物理网卡）&quot;&gt;&lt;a href=&quot;#eth0（物理网卡）&quot; class=&quot;headerlink&quot; title=&quot;eth0（物理网卡）&quot;&gt;&lt;/a&gt;eth0（物理网卡）&lt;/h1&gt;&lt;p&gt;eth0.1 是vlan1分出的lan口。&lt;br&gt;eth0.2 是vlan分出的wan口。&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="OpenWRT" scheme="http://cuiqingwei.github.io/tags/OpenWRT/"/>
    
  </entry>
  
  <entry>
    <title>技术领域的深刻体会、教训</title>
    <link href="http://cuiqingwei.github.io/2015/06/24/2015-06-24-%E6%8A%80%E6%9C%AF%E9%A2%86%E5%9F%9F%E7%9A%84%E6%B7%B1%E5%88%BB%E4%BD%93%E4%BC%9A%E3%80%81%E6%95%99%E8%AE%AD/"/>
    <id>http://cuiqingwei.github.io/2015/06/24/2015-06-24-技术领域的深刻体会、教训/</id>
    <published>2015-06-24T13:22:00.000Z</published>
    <updated>2016-09-18T07:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录之，告诫自己；分享之，愿助他人。</p>
<p>学习一定要，知之为知之，不知为不知，不仅自己不能装逼，也不能向装逼的人讨教，否则只是相互浪费时间而已。</p>
<p>不要和不懂规则且贪婪的人合作，否则他们会反过来诬陷和要挟你。</p>
<p>和学生合作一定要谨慎，他们往往会高估自己的能力。</p>
<p>商业项目，一定要先签合同再做事。</p>
<p>不要用不成熟的技术做开发。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录之，告诫自己；分享之，愿助他人。&lt;/p&gt;
&lt;p&gt;学习一定要，知之为知之，不知为不知，不仅自己不能装逼，也不能向装逼的人讨教，否则只是相互浪费时间而已。&lt;/p&gt;
&lt;p&gt;不要和不懂规则且贪婪的人合作，否则他们会反过来诬陷和要挟你。&lt;/p&gt;
&lt;p&gt;和学生合作一定要谨慎，他们往
    
    </summary>
    
    
      <category term="体会" scheme="http://cuiqingwei.github.io/tags/%E4%BD%93%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>三星平板工厂模式</title>
    <link href="http://cuiqingwei.github.io/2015/06/03/2015-06-03-%E4%B8%89%E6%98%9F%E5%B9%B3%E6%9D%BF%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://cuiqingwei.github.io/2015/06/03/2015-06-03-三星平板工厂模式/</id>
    <published>2015-06-03T09:45:00.000Z</published>
    <updated>2016-09-18T08:58:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>进入应用桌面打开计算器输入 <strong>(+30012012732+</strong> 进入Factory Mode</p>
<p>On android 3.X version <strong>(+32286798378+</strong>           left bracket, plus, 3,2,2,8,6,7,9,8,3,7,8, plus<br>On android 4.X version <strong>(+30012012732+</strong>           left bracket, plus, 3,0,0,1,2,0,1,2,7,3,2, plus<br><a id="more"></a><br>Android 4.X 示例:<br><img src="/img/20150603/1.jpeg" alt=""></p>
<p>工厂模式代码一览（供参考）</p>
<p>*#06#                      – <em>To check IMEI No.</em><br>*#9090#                    – <em>Diagnostic Configuration</em><br>*#1234#                    – <em>to check software version of phone.</em><br>*#272*IMEI#                – <em>Reset User data + Change Sales Code</em><br>*#12580*369#               – <em>to check software and hardware information.</em><br>*#0228#                    – <em>Battery status (ADC, RSSI reading)</em><br>*2767*3855#                – <em>Full factory reset (Don’t dial it does not ask you to confirm unless you have problem)</em><br>*#0*#                      – <em>This Code shows Screen Test Menu (LCD Test Menu) Hidden Menu</em><br>*#7353#                    – <em>Self Test Mode (2nd Hidden Menu)</em></p>
<p>*#34971539#                <em>Camera firmware check/update</em><br>*#2263#                    <em>Service Mode - Baseband selection</em><br>*#9900#                    <em>SysDump</em><br>*#0011#                    <em>Service Mode - Radio parameters</em><br>*#0808#                    <em>USB Settings</em><br>*#2222#                    <em>Service Mode - FTA HW Version</em><br>*#1111#                    <em>Service Mode - FTA SW Version</em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;进入应用桌面打开计算器输入 &lt;strong&gt;(+30012012732+&lt;/strong&gt; 进入Factory Mode&lt;/p&gt;
&lt;p&gt;On android 3.X version &lt;strong&gt;(+32286798378+&lt;/strong&gt;           left bracket, plus, 3,2,2,8,6,7,9,8,3,7,8, plus&lt;br&gt;On android 4.X version &lt;strong&gt;(+30012012732+&lt;/strong&gt;           left bracket, plus, 3,0,0,1,2,0,1,2,7,3,2, plus&lt;br&gt;
    
    </summary>
    
    
      <category term="折腾" scheme="http://cuiqingwei.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="三星平板" scheme="http://cuiqingwei.github.io/tags/%E4%B8%89%E6%98%9F%E5%B9%B3%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>ZigBee射频模块晶振选型</title>
    <link href="http://cuiqingwei.github.io/2015/03/01/2015-03-01-ZigBee%E5%B0%84%E9%A2%91%E6%A8%A1%E5%9D%97%E6%99%B6%E6%8C%AF%E9%80%89%E5%9E%8B/"/>
    <id>http://cuiqingwei.github.io/2015/03/01/2015-03-01-ZigBee射频模块晶振选型/</id>
    <published>2015-02-28T18:17:00.000Z</published>
    <updated>2016-09-19T09:43:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.ti.com/lit/an/swra372c/swra372c.pdf" target="_blank" rel="external">AN100 - Crystal Selection Guide (Rev. C)</a></p>
<h3 id="CC2530"><a href="#CC2530" class="headerlink" title="CC2530"></a>CC2530</h3><p>NX3225SA : Crystal, 32.000MHz, 10/15ppm, 16 pF  ! Temp range -30 - +85 deg C !<br><a href="http://www.ndk.com/cn/products/search/crystal/1188115_1533.html" target="_blank" rel="external">http://www.ndk.com/cn/products/search/crystal/1188115_1533.html</a><br>TSX-3225 : Crystal, 32.000MHz, 16 pF, -10PPM/+10PPM, -40DEGC/+85DEGC, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/at/tsx3225.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/at/tsx3225.html</a><br>MC-306 : Crystal, 32.768 kHz, 12.5pF, 20/50 ppm,SMD package<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/mc306.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/mc306.html</a></p>
<h3 id="CC2538"><a href="#CC2538" class="headerlink" title="CC2538"></a>CC2538</h3><p>FA-128 : CRYSTAL, OSCILATOR, 32MHz, 10pF, -10PPM/+10PPM, -40DEGC/+85DEGC, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/at/fa128.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/at/fa128.html</a><br>FC-12M : CRYSTAL, OSCILATOR, 32.768kHz, -20PPM/ + 20PPM, -40DEGC/ +85DEGC, 12.5pF, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/fc12d12m.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/fc12d12m.html</a><br>ABS05 : 32.768KHZ<br><a href="http://www.abracon.com/Resonators/ABS05.pdf" target="_blank" rel="external">http://www.abracon.com/Resonators/ABS05.pdf</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.ti.com/lit/an/swra372c/swra372c.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AN100 - Crystal Selection Guide (Rev. C)&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="ZigBee" scheme="http://cuiqingwei.github.io/tags/ZigBee/"/>
    
      <category term="晶振" scheme="http://cuiqingwei.github.io/tags/%E6%99%B6%E6%8C%AF/"/>
    
  </entry>
  
  <entry>
    <title>xclip,pbcopy,xsel用法 terminal 复制粘帖 (mac, ubuntu)</title>
    <link href="http://cuiqingwei.github.io/2015/01/15/2015-01-15-xclip-pbcopy-xsel%E7%94%A8%E6%B3%95-terminal-%E5%A4%8D%E5%88%B6%E7%B2%98%E5%B8%96-mac-ubuntu/"/>
    <id>http://cuiqingwei.github.io/2015/01/15/2015-01-15-xclip-pbcopy-xsel用法-terminal-复制粘帖-mac-ubuntu/</id>
    <published>2015-01-15T13:28:00.000Z</published>
    <updated>2016-10-09T12:47:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Mac下"><a href="#1-Mac下" class="headerlink" title="1.Mac下"></a>1.Mac下</h3><p>使用pbcopy命令。 # 对应有个pbpaste命令。</p>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">'Hello World!'</span> | pbcopy</div></pre></td></tr></table></figure></p>
<h1 id="将字符串Hello-World放入剪贴板"><a href="#将字符串Hello-World放入剪贴板" class="headerlink" title="将字符串Hello World放入剪贴板"></a>将字符串Hello World放入剪贴板</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat myFile.txt | pbcopy</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pbpaste &gt; file.txt</div></pre></td></tr></table></figure>
<a id="more"></a>
<p><em>要复制结果又想看到命令的输出</em><br>命令的结果输出时，如果给复制命令（即上面提到的命令clip、xsel、pbcopy）那么命令输出就看不到了。如果你想先看到命令的输出，可以下面这么做。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'Hello World!'</span> | tee tmp.file.txt  </div><div class="line">Hello World!  </div><div class="line">$ xsel &lt; tmp.file.txt  </div><div class="line">$ rm tmp.file.txt</div></pre></td></tr></table></figure></p>
<p>即先使用tee命令把输出输到控制台和一个文件中。命令执行完成后，再把输出的内容放到剪贴板中。</p>
<h3 id="2-Ubuntu下"><a href="#2-Ubuntu下" class="headerlink" title="2.Ubuntu下"></a>2.Ubuntu下</h3><p>ubuntu下的用户可以只用apt-get来安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install xclip</div></pre></td></tr></table></figure></p>
<p>其他发行版的用户可以选择自己的安装方式，也可以用源码编译安装，xclip项目的主页是：<a href="http://sourceforge.net/projects/xclip/" target="_blank" rel="external">http://sourceforge.net/projects/xclip/</a><br>xclip可以将内容输出到‘X’的剪切板中，比如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"Hello, world"</span> | xclip</div></pre></td></tr></table></figure></p>
<p>执行这个命令后你就可以用鼠标中键来在X程序中将内容粘贴出来。但是更多的时候，我们需要不仅仅把内容输出到‘X’的剪切板中，而是希望可以在GUI程序 中用ctrl + v也可以粘贴（比如，输出到gnome的剪切板中），下面这段命令就可以让你将内容输出到gnome的剪切板中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"Hello, world"</span> | xclip -selection clipboard</div></pre></td></tr></table></figure></p>
<p>再在一个GUI程序中按下ctrl + v，看下是不是粘贴上去了呢？顺着这个命令，我也重新写了一下ifconfig，让它在执行后输入内容到终端的同时，也将ip地址输出到剪切板中，因为通常情况下，查看ifconfig就是为了获取机器的ip地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> ifconfig=<span class="string">'/sbin/ifconfig &amp;&amp; echo `/sbin/ifconfig | sed -n 2p | awk "&#123; print \\$2 &#125;" | grep -o "[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;"` | xclip -selection clipboard'</span></div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xclip -sel clip &lt; file</div></pre></td></tr></table></figure></p>
<p>此时你就可以在网页等编辑框CTRL+V了。</p>
<p>项目主页：<a href="http://sourceforge.net/projects/xclip/" target="_blank" rel="external">http://sourceforge.net/projects/xclip/</a><br>命令man page: <a href="http://linux.die.net/man/1/xclip" target="_blank" rel="external">http://linux.die.net/man/1/xclip</a></p>
<p><strong>-i, -in</strong><br>read text into X selection from standard input or files (default)<br><strong>-o, -out</strong><br>prints the selection to standard out (generally for piping to a file or program)<br><strong>-f, -filter</strong><br>when xclip is invoked in the in mode with output level set to silent (the defaults), the filter option will cause xclip to print the text piped to standard in back to standard out unmodified<br><strong>-l, -loops</strong><br>number of X selection requests (pastes into X applications) to wait for before exiting, with a value of 0 (default) causing xclip to wait for an unlimited number of requests until another application (possibly another invocation of xclip) takes ownership of the selection<br><strong>-d, -display</strong><br>X display to use (e.g. “localhost:0”), xclip defaults to the value in $DISPLAY if this option is omitted</p>
<h3 id="3-Linux下"><a href="#3-Linux下" class="headerlink" title="3.Linux下"></a>3.Linux下</h3><p>使用xsel命令。</p>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cat README.TXT | xsel  </div><div class="line">cat README.TXT | xsel -b <span class="comment"># 如有问题可以试试-b选项  </span></div><div class="line">xsel &lt; README.TXT  </div><div class="line"><span class="comment"># 将readme.txt的文本放入剪贴板  </span></div><div class="line">xsel -c  </div><div class="line"><span class="comment"># 清空剪贴板</span></div></pre></td></tr></table></figure></p>
<h3 id="4-Windows下"><a href="#4-Windows下" class="headerlink" title="4.Windows下"></a>4.Windows下</h3><p>使用系统自带的clip命令。<br># 位于C:\Windows\system32\clip.exe。<br><!--more--><br>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> Hello | clip  </div><div class="line"><span class="comment"># 将字符串Hello放入Windows剪贴板  </span></div><div class="line">dir | clip  </div><div class="line"><span class="comment"># 将dir命令输出（当前目录列表）放入Windows剪贴板  </span></div><div class="line">clip &lt; README.TXT    </div><div class="line"><span class="comment"># 将readme.txt的文本放入Windows剪贴板  </span></div><div class="line"><span class="built_in">echo</span> | clip  </div><div class="line"><span class="comment"># 将一个空行放入Windows剪贴板，即清空Windows剪贴板</span></div></pre></td></tr></table></figure></p>
<p>注：不同系统使用不同的复制命令。避免用文本编辑器打开这个文件、选中文本、CTRL + C这样繁琐操作。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-Mac下&quot;&gt;&lt;a href=&quot;#1-Mac下&quot; class=&quot;headerlink&quot; title=&quot;1.Mac下&quot;&gt;&lt;/a&gt;1.Mac下&lt;/h3&gt;&lt;p&gt;使用pbcopy命令。 # 对应有个pbpaste命令。&lt;/p&gt;
&lt;p&gt;示例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Hello World!&#39;&lt;/span&gt; | pbcopy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;将字符串Hello-World放入剪贴板&quot;&gt;&lt;a href=&quot;#将字符串Hello-World放入剪贴板&quot; class=&quot;headerlink&quot; title=&quot;将字符串Hello World放入剪贴板&quot;&gt;&lt;/a&gt;将字符串Hello World放入剪贴板&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat myFile.txt | pbcopy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;pbpaste &amp;gt; file.txt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://cuiqingwei.github.io/tags/ubuntu/"/>
    
      <category term="总结" scheme="http://cuiqingwei.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="mac" scheme="http://cuiqingwei.github.io/tags/mac/"/>
    
  </entry>
  
</feed>
