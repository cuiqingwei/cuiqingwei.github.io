<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[CentOS7添加开机启动服务脚本]]></title>
      <url>http://cuiqingwei.github.io/2017/11/29/2017-11-29-CentOS7%E6%B7%BB%E5%8A%A0%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<h1 id="一、添加开机自启服务"><a href="#一、添加开机自启服务" class="headerlink" title="一、添加开机自启服务"></a>一、添加开机自启服务</h1><p>在CentOS 7中添加开机自启服务非常方便，只需要两条命令(以Jenkins为例)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl enable jenkins.service  # 设置jenkins服务为自启动服务</div><div class="line">sysstemctl start  jenkins.service # 启动jenkins服务</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="二、添加开机自启脚本"><a href="#二、添加开机自启脚本" class="headerlink" title="二、添加开机自启脚本"></a>二、添加开机自启脚本</h1><p>在centos7中增加脚本有两种常用的方法，以脚本autostart.sh为例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">#description:开机自启脚本</div><div class="line">/usr/local/tomcat/bin/startup.sh  #启动tomcat</div></pre></td></tr></table></figure>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>1、赋予脚本可执行权限（/opt/script/autostart.sh是你的脚本路径）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x /opt/script/autostart.sh</div></pre></td></tr></table></figure>
<p>2、打开/etc/rc.d/rc/local文件，在末尾增加如下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/script/autostart.sh</div></pre></td></tr></table></figure>
<p>3、在centos7中，/etc/rc.d/rc.local的权限被降低了，所以需要执行如下命令赋予其可执行权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x /etc/rc.d/rc.local</div></pre></td></tr></table></figure>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>1、将脚本移动到/etc/rc.d/init.d目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv  /opt/script/autostart.sh /etc/rc.d/init.d</div></pre></td></tr></table></figure>
<p>2、增加脚本的可执行权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x  /etc/rc.d/init.d/autostart.sh</div></pre></td></tr></table></figure>
<p>3、添加脚本到开机自动启动项目中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd /etc/rc.d/init.d</div><div class="line">chkconfig --add autostart.sh</div><div class="line">chkconfig autostart.sh on</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于红外阵列传感器的检测系统]]></title>
      <url>http://cuiqingwei.github.io/2017/11/27/2017-11-27-%E5%9F%BA%E4%BA%8E%E7%BA%A2%E5%A4%96%E9%98%B5%E5%88%97%E4%BC%A0%E6%84%9F%E5%99%A8%E7%9A%84%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F/</url>
      <content type="html"><![CDATA[<h2 id="办公节能新技术"><a href="#办公节能新技术" class="headerlink" title="办公节能新技术"></a>办公节能新技术</h2><p>在提倡建设节约型社会的今天，建筑节能问题日益得到普遍关注，而降低新风及冷风负 荷也就成为主要的节能措施之一。建筑室内人员密度是新风量及冷风量合理确定需要考虑的重点因素也是难点因素。</p>
<p>近年来，基于摄像头的人数检测技术愈发成熟。然而，在办公室这样的环境中，摄像头的使用受到一定的限制。</p>
<p>本文介绍了一种基于阵列红外传感器的办公空间人员密度监控解决方案。在充分保护个人隐私及企业秘密的前提下，准确实时的检测人员密度，从而为新风及冷风控制提供准确的输入参书以达到节能之需求。</p>
<a id="more"></a>
<h2 id="红外阵列传感器"><a href="#红外阵列传感器" class="headerlink" title="红外阵列传感器"></a>红外阵列传感器</h2><p>PIR 即人体热释电红外传感器，被广泛的应用到电子防盗、人体探测领域中，这种传感器不会导致隐私和商业保密泄露，但是这种传感器从原理上，只能检测到运动中的人体目标，单独的 PIR 传感器不能检测出人员分布。</p>
<p>红外阵列传感器是一个包含多个像素的 IR 传感阵列组合，每个像素都具有低噪声放大器以及 ADC，包含一个数字 I2C 接口用于读取传感阵列 ADC 转化后存储在 RAM 中的测量结果、以及一片 EEPROM 用于存储温度计算和校准的参数。</p>
<p>AMG8853通过探测物体由于黑体辐射而产生的红外光而测量出物体表面温度的。根据黑体辐射原理，一切温度高于绝对零度的物体都在不停地向周围空间发出红外辐射能量。</p>
<p>物体的红外辐射能量的大小及其按波长的分布与它的表面温度有着十分密切的关系。</p>
<p>因此，通过对物体自身辐射的红外能量的测量，便能准确地测定它的表面温度，这就是红外辐射测温 所依据的客观基础。</p>
<div align="center"><br><img src="/img/20171127/AMG8853.jpg" alt=""><br></div>

<p>上图为AMG8853内部结构，数字有源热电堆阵列是由 64 个传感器探测单元（热电堆）组成，每个探测单元探测接收到的红外波段能量并将其转化为电信号，经过 ADC 转化后转化为数字信息，然后通过数字滤波写入传感器中的 RAM。</p>
<p>用户通过 I2C 界面可以访问 RAM并读取测量结果用于温度计算。</p>
<p>选用 120°×30°视场角的传感器，如果垂直安装高度为 2.5 米，那么单个 AMG8853检测 范围可以覆盖到 8.6m×1.3m 的地面。采用多个传感器拼接可以实现完整的室内区域覆盖。</p>
<h2 id="红外图像采集系统"><a href="#红外图像采集系统" class="headerlink" title="红外图像采集系统"></a>红外图像采集系统</h2><p>连接红外传感器的外部单片机读取不同地址的 RAM 数据，并参考 EEPROM 的校准数值，来补偿不同传感器之间的差异，以建立热图像，来计算图像中每点的温度。</p>
<p>同时考虑到 AMG8853传感器速度快，数据量大，多个传感器拼接成像时需要良好的管 理，因此，应用中需要可靠的数据通信方式，使用以太网通讯可以保证通信质量。</p>
<p>因此在该系统中，我们采用 MN103SFL7G 作为主控单片机来接收并处理相应的数据，同时负责最终计算结果的上传，同时采用 PoE 供电方式来实现系统供电及通信。系统架构图如下：</p>
<div align="center"><br><img src="/img/20171127/AMG8853-1.jpg" alt=""><br></div>

<blockquote>
<p>整个计算共需要如下几个步骤：</p>
<ul>
<li>计算传感器自身温度，从传感器中读取 PTAT 寄存器，得到值后与参数运算获得传感器温度；</li>
<li>补偿和校准。运算值用于补偿和校准每个传感像素单元的差异。这部分计算利用了若干公式，其中的参数是由 EEPROM 中的值二次计算而来;</li>
<li>发射率补偿。根据热辐射理论，物体不可能是一个“黑体”，即其发射率总是小于 1。 不同的材料具有不同的发射率，在应用中需要考虑被测物体表面的材料发射率，并加以补偿;</li>
<li>最后根据公式计算出被测物的表面温度。</li>
</ul>
</blockquote>
<div align="center"><br><img src="/img/20171127/AMG8853-2.jpg" alt=""><br></div>

<p>计算结果即为视场内的目标的表面温度。计算结束后，结果乘以 10 以后，以整数形式存储在 RAM 中。通过 UDP 以太网协议，将数据传送至上位机。</p>
<h2 id="红外图像处理算法"><a href="#红外图像处理算法" class="headerlink" title="红外图像处理算法"></a>红外图像处理算法</h2><p>计算机通过以太网与传感器建立 UDP 连接，并获取到传感器传回的温度信息。计算机将这些数据有序的拼接起来，还原出办公室内的温度信息。</p>
<p>然而这种温度信息并不能直观的反映出办公环境中的人数和位置信息，计算机可以通过一些算法，将人数以及人所在房间中的位置计算出来，这样的结果更直观，也更利于其他应用处理。</p>
<p>因此，计算机在获取到温度信息表之后，需要通过算法将办公室内人员数量计算出来并给出对应的位置坐标。</p>
<p>室内人员数量可以通过图像处理的算法确定。人数计算的算法过程如下图所示。</p>
<div align="center"><br><img src="/img/20171127/AMG8853-3.jpg" alt=""><br></div>

<p>图像处理算法的关键在于准确的将人体温度从温度矩阵中提取出来。</p>
<p>由于人体表面温度因人而异，而且受室温的影响较大，所以有效的提取人体表面温度遇到了诸多难题。经分析和试验，采用大津法进行阈值提取，可以将人体表面温度与环境温度区别开来。</p>
<p>处理矩阵的红外信息，工程上和学术界普遍使用灰度级、伪彩色等图像的方法表示，使用图像处理的方法表示、分析和处理红外图像是可行而有效的。</p>
<p>温度数据可以通过归一化后，落在对应的灰度级上，从而可以通过灰度图像表示也可以使用蓝色表示低的温度，红色表示高温，然后在色彩空间渐变，则是伪彩色的表示方法。</p>
<p>在我们的程序中，使用伪彩色来表示温度高低，使人可以直观的看到温度分布，从图中可以看出，红色部分代表温度要比周围环境高，则认为这部分办公室空间被人占用；蓝色部分代表温度要稍微低一点，认为这部分空间没有被占用。</p>
<h2 id="最终我们将得到如下的人员分布热图及人数统计值："><a href="#最终我们将得到如下的人员分布热图及人数统计值：" class="headerlink" title="最终我们将得到如下的人员分布热图及人数统计值："></a>最终我们将得到如下的人员分布热图及人数统计值：</h2><div align="center"><br><img src="/img/20171127/AMG8853-4.png" alt=""><br></div>

<p>界面的主要部分是将温度数据矩阵通过伪彩色方法显示出来，人眼便可以直观的看出温度的高低分布。程序通过之前所述算法，获得当前办公环境中的人数，并显示在界面上。</p>
<p>楼宇控制系统可以根据所获得的数据精确的控制空间中所需要的新风量及冷风量，从而达在节能与办公舒适性直接达到最佳的平衡。</p>
<p>综上所述，基于红外阵列传感器的室内人员分布检测系统具有配置灵活、硬件结构简单、保密性好、测量效果好的特点。为办公室节能控制提供了精确的，稳定的实时数据。</p>
<p>同时可以应用在流动办公室监控配置场合，管理人员可以通过直观的界面看出人员分布情况，从而合理规划办公室空间，得到最优的空间利用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[松下Grid-EYE红外阵列传感器解析]]></title>
      <url>http://cuiqingwei.github.io/2017/11/26/2017-11-26-%E6%9D%BE%E4%B8%8BGrid-EYE%E7%BA%A2%E5%A4%96%E9%98%B5%E5%88%97%E5%8C%BB%E7%96%97%E4%BC%A0%E6%84%9F%E5%99%A8%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p> 近年来，由于基于MEMS的独立式热隔离像素结构采用薄膜红外吸收层，使得非制冷红外传感器取得了显著进展。　　</p>
<p><img src="/img/20171126/W020160708332880615768.jpg" alt=""></p>
<a id="more"></a>
<p>　　人们利用红外传感技术开发了许多应用，例如热成像、人体探测以及夜视等。对于红外能量的量化，使用户能够确定目标的温度以及热行为。</p>
<p>　　红外热传感和成像仪实现了被动、非侵入式的物体表面温度测量，并能够绘制其温度分布图谱。随着物体表面温度的升高，其辐射光谱的强度也会相应增强。这使我们可以通过远程测量人体或目标物体发射出的能量来确定其温度。红外探测器主要分为两类——红外光子探测器和红外热探测器。</p>
<h1 id="红外光子探测器"><a href="#红外光子探测器" class="headerlink" title="红外光子探测器"></a>红外光子探测器</h1><p>　　红外光子探测器利用材料和电子间的相互作用，吸收被测物体表面发出的红外辐射。通过吸收电子产生的电能分布变化，输出红外探测信号。红外光子探测器每个单元对入射辐射能量的吸收具有波长选择性。红外光子探测器具有完美的信噪比和快速响应性能。但是，红外光子探测器的缺点是需要对其进行低温冷却。而冷却要求，是基于半导体光子探测器的红外系统获得广泛应用的主要障碍。因为这使得光子探测器红外系统变得庞大、笨重、昂贵，而且使用不便。</p>
<h1 id="红外热探测器"><a href="#红外热探测器" class="headerlink" title="红外热探测器"></a>红外热探测器</h1><p>　　一直以来，高成本问题严重限制了消费类市场红外系统的发展。红外热探测器优势包括宽广的波长响应范围、无需冷却、高温稳定性、高信噪比以及较低的成本。红外热探测器主要分为热释电、热电堆和微测辐射热计。（注：本文暂不介绍微测辐射热计，请参考：非制冷红外焦平面探测器及其技术发展动态）</p>
<h1 id="红外热释电传感器"><a href="#红外热释电传感器" class="headerlink" title="红外热释电传感器"></a>红外热释电传感器</h1><p>　　热释电材料吸收热辐射，在晶体材料间产生静态电压信号。但是，热释电材料在持续的红外辐射下，其输出的静态电压信号会减弱，需要对其进行周期性的刷新。热释电探测器可以实现大规模批量生产。它们凭借防盗系统和自动照明开关等应用，在消费类市场逐渐找到了切入口。热释电探测器也被应用于高性能气体分析、火焰探测器等科学仪器。另一方面，对于静态温度测量应用，热释电探测器仍然相对比较昂贵，需要包含一些机械部件。</p>
<h1 id="红外热电堆传感器"><a href="#红外热电堆传感器" class="headerlink" title="红外热电堆传感器"></a>红外热电堆传感器</h1><p>　　根据塞贝克效应，在两种不同材料的连接处，当它们的温度有差异时，会在这两种材料组成的闭环电路中产生电流。这种现象被广泛应用于热电偶的温度测量。热电堆或热电阵列由许多热敏元件组成，每个热敏元件都是一根由两种不同热敏活性材料组成的细丝。当细丝两端的温度出现差异时，便在细丝两端产生了电压（热张力）。热接点集中在一个非常薄的共同吸收区，而冷节点位于一个周边环绕高热质量的散热片上。</p>
<p>　　现代半导体技术实现了在几平方毫米内，制造包含数百个热电偶的红外热电堆传感器。这种红外传感器因其微小的尺寸，而具有极高的灵敏度和极快的响应时间，而且由于应用了半导体规模生产和光刻技术，使其成本也较低。</p>
<h1 id="什么是Grid-EYE"><a href="#什么是Grid-EYE" class="headerlink" title="什么是Grid-EYE"></a>什么是Grid-EYE</h1><p>　　松下Grid-EYE的8 x 8热电堆阵列红外传感器，开启了其红外阵列传感器业务。Grid-EYE是一款64像素红外摄像头，采用一体化的紧凑SMD封装。基于松下的MEMS技术，Grid-EYE包含一颗MEMS传感器芯片、一颗数字ASIC（I2C接口）以及一款硅基镜头。　　</p>
<p><img src="/img/20171126/XzhN6uEQ_4dfn.png" alt=""></p>
<p>　　Grid-EYE在一个8 x 8网格式布局内含有64个热电堆元件，能够在不接触被测物体的前提下探测物体表面的绝对温度。与传统的传感器不同，Grid-EYE采用了一款受专利保护的60°硅基镜头，该镜头在硅晶圆上通过刻蚀工艺制成，是市场上最小（高度低于0.3 mm）的镜头。所有这些技术的结合，使该款传感器的封装尺寸仅为11.6 mm x 8 mm x 4.3 mm。　　</p>
<p><img src="/img/20171126/W020160708332880629183.jpg" alt=""></p>
<blockquote>
<p>含有64个热电堆元件的Grid-EYE可以探测静止和运动的人体</p>
</blockquote>
<p>　　与单点热电堆红外传感器和热释电传感器相比，Grid-EYE不仅能够探测移动的人体和物体，还能够探测不动的人体和物体的出现和位置、运动方向以及精确的表面温度，温度测量范围为- 20°C~+100°C。　　</p>
<p><img src="/img/20171126/W020160708332880624859.jpg" alt=""></p>
<blockquote>
<p>基于MEMS技术的热电堆阵列红外传感器</p>
</blockquote>
<p>　　松下凭借Grid-EYE的宽温度测量范围，其噪声等效温差在室温时，精度达到了+/- 0.08°C @ 1Hz。Grid-EYE热电堆传感元件协同阵列，能够探测多个人体或物体在不同方向上的运动。近距离时，Grid-EYE甚至能够探测人手的运动，实现简单的手势控制。　<br><img src="/img/20171126/W020160708332880629505.jpg" alt=""></p>
<blockquote>
<p>Grid-EYE红外传感器实现手势控制</p>
</blockquote>
<h2 id="应用领域"><a href="#应用领域" class="headerlink" title="应用领域"></a>应用领域</h2><p><img src="/img/20171126/area.png" alt=""><br><img src="/img/20171126/application.png" alt=""></p>
<p>　　许多红外应用不需要完整的图像信息，只需要从图像中挖掘出的特定信息，例如位置、运动以及热（或冷）物体的区域。面对这些非成像应用的新兴市场，需要基于不同概念的传统成像红外焦平面阵列的红外阵列传感器。这里将讨论热成像系统应用的两个主要门类：非活体目标和人体目标。</p>
<h3 id="非活体目标"><a href="#非活体目标" class="headerlink" title="非活体目标"></a>非活体目标</h3><p>　　工厂机械设备、发电及配电设备、物料以及工艺生产制造出来的部件，它们的温度和热学性能，是生产制造过程中以及工厂维持安全和经济有效运营的最重要因素。</p>
<p>　　突然出现的热点能够预示有缺陷的区域和连接点。应用热成像技术进行温度测量的原因之一，是热成像测量无需接触被测物体。热成像技术可以作为一款诊断工具应用于电力传输系统中电气接头的检测，也可以用于探测其它电气装置的热状况。它还可以应用于不同材料的具体特性评估。</p>
<h3 id="人体目标"><a href="#人体目标" class="headerlink" title="人体目标"></a>人体目标</h3><p>　　被动红外传感器针对即时进入或目标探测应用效果很好。但是，它们仅能感测运动中的人体或目标，这使它们能够有条件地应用于建筑自动化和安防系统中。这些简单的红外传感器具有传统的局限性，因此不能应用于更先进的探测领域。例如，被动红外传感器无法感应不动的目标，它们不能精确地探测目标的运动方向，它们也不能获得热成像图谱或者探测目标的温度。所有这三个任务都是下一代智能自动化、安防系统、数字标识系统以及医疗成像应用的基本要素。</p>
<h3 id="人体探测设计"><a href="#人体探测设计" class="headerlink" title="人体探测设计"></a>人体探测设计</h3><p>　　热电堆阵列传感器能够在保留探测对象隐私的前提下，提供粗略的追踪功能。Basu和Rowe开发了一款低成本方法，在Grid-EYE传感器的视场内，估算人员数量和他们的运动方向。对具有本地峰值计数功能的连接组件上应用支持向量机分类，他们估算即时进入人数的准确率超过了80%（《应用热电堆阵列传感器的运动追踪和空间关系学》，2014，卡内基梅隆大学）。　　</p>
<p><img src="/img/20171126/W020160708333700204392.jpg" alt=""></p>
<blockquote>
<p>利用Grid-EYE红外传感器估算即时进入房间的人数</p>
</blockquote>
<p>　　Jeong、Yoon和Joung等人在2014年开发了一种更复杂的方法，他们利用Grid-EYE传感器结合一种概率统计方法来确定人体目标，这种概率统计方法利用了多重前后成像处理技术。前处理和图像分割提供基本结构，然后利用概率统计方法来计算图中的热标识为人体目标的概率。即使分割出来的人体图像短暂消失了，他们提出的方法还能够利用局部自适应阈值实现继续追踪。</p>
<h3 id="智能建筑应用"><a href="#智能建筑应用" class="headerlink" title="智能建筑应用"></a>智能建筑应用</h3><p>　　智能建筑应用是信息物理系统的案例之一。大部分时间，这些应用需要不同类型的传感器、网络拓扑结构以及个性的配置，来满足不同用户的需求。利用Grid-EYE传感器提供的即时进入信息，能够帮助实现家居自动化和暖通系统的集成。Grid-EYE传感器当然也可以应用于安防目的。即时进入监测、安防和建筑自动化是智能建筑的基本功能。房间的即时进入监测，能够帮助建筑管理者实现暖通系统控制，由此实现可持续发展。Grid-EYE传感器8 × 8二元矩阵中连接的组件，能够告诉我们该传感器周边人员的数量（即时进入监测）。　　</p>
<p><img src="/img/20171126/W020160708333700208787.jpg" alt=""></p>
<blockquote>
<p>Grid-EYE红外传感器的应用</p>
</blockquote>
<p>　　对于安防应用，即时进入监测能够监测非法入侵的发生，能够即时触发警报或者发送相关信息给屋主。对于家居自动化应用，它能够用于暖通系统或者家用电器的开启。</p>
<p>　　美国加州大学的Merced在2013年展示了一款基于Grid-EYE传感器的系统，用于估算即时进入信息，使他们能够基于房间进入人员的数量调整房间利用，从而有效的维持房间的温度，通过这一方法每年能够节约25%的能源。</p>
<blockquote>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMzE4NTY0NTQzNg==" frameborder="0" 'allowfullscreen'=""></iframe>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git中避免提交.DS_Store文件]]></title>
      <url>http://cuiqingwei.github.io/2017/11/23/2017-11-23-git%E4%B8%AD%E9%81%BF%E5%85%8D%E6%8F%90%E4%BA%A4-DS-Store%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="1-先删除原有的-DS-Store："><a href="#1-先删除原有的-DS-Store：" class="headerlink" title="1. 先删除原有的.DS_Store："></a>1. 先删除原有的.DS_Store：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find . -name &quot;.DS_Store&quot; -type f -delete</div></pre></td></tr></table></figure>
<p>命令解释：在当前文件夹以及当前文件夹的子文件夹中找到所有的.DS_Store文件</p>
<h3 id="2-建立-gitignore文件"><a href="#2-建立-gitignore文件" class="headerlink" title="2. 建立.gitignore文件"></a>2. 建立.gitignore文件</h3><p>vi .gitignore。然后添加.DS_Store作为忽略：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.DS_Store</div></pre></td></tr></table></figure>
<h3 id="3-提交到git"><a href="#3-提交到git" class="headerlink" title="3. 提交到git"></a>3. 提交到git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git add .gitignore</div><div class="line">git commit -m &apos;delete .DS_Store&apos;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何查看网站是用什么语言开发的?]]></title>
      <url>http://cuiqingwei.github.io/2017/10/31/2017-10-31-%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%AB%99%E6%98%AF%E7%94%A8%E4%BB%80%E4%B9%88%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E7%9A%84/</url>
      <content type="html"><![CDATA[<p>查看网站开发语言方法：</p>
<p>1）利用工具直接输入查询</p>
<p><a href="http://w3techs.com/sites/info/baidu.com" target="_blank" rel="external">http://w3techs.com/sites/info/baidu.com</a><br><a href="https://builtwith.com/baidu.com" target="_blank" rel="external">https://builtwith.com/baidu.com</a></p>
<p>把最后的域名换成想知道的网址，系统会自动分析。</p>
<p>2）后台语言可以通过服务器类型推测。</p>
<p>一般情况下，服务器类型可以通过 Response Header 来看。</p>
<p>比如 IIS，一般是 <a href="http://ASP.NET" target="_blank" rel="external">http://ASP.NET</a></p>
<p>Tomcat、Resin、JBoss，一般是 Java。</p>
<p>Nginx，不一定，很有可能是 PHP 或者 Python 之类的脚本语言。</p>
<p>3）后台框架就更难分析了，不过可以尝试通过 HTML 代码格式，或者 URL 来分析。</p>
<p>比如 URL 后缀是 do，可能用到了 Java Struts。</p>
<p>URL 一般都是 index.php，但是后面参数不同，那么可能用到了 PHP 的一些模板引擎。</p>
<p>当然，这个分析不可靠，只是一种推测。</p>
<p>4）想办法联系网站创始人：），邮件或私信询问。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[酒店PMS]]></title>
      <url>http://cuiqingwei.github.io/2017/09/21/2017-09-21-%E9%85%92%E5%BA%97PMS/</url>
      <content type="html"><![CDATA[<h1 id="什么是PMS"><a href="#什么是PMS" class="headerlink" title="什么是PMS"></a>什么是PMS</h1><p><strong>PMS</strong>：Property Management System，直译为物业管理系统，也有翻译为：酒店管理系统。</p>
<p>酒店PMS系统是一个以计算机为工具，对酒店信息管理和处理的人机综合系统，它不但能准确及时地反映酒店业务的当前状态、房源状态，还能快速实现客人预定入住到财务对账等一系列操作;不但是一个数据统计的数据库，还能够提供各方面的报表，且利用数据进行统计分析，从而更有利于酒店的经营和管理。</p>
<a id="more"></a>
<h1 id="PMS行业情况"><a href="#PMS行业情况" class="headerlink" title="PMS行业情况"></a>PMS行业情况</h1><p>PMS是酒店前台预订系统的简称，是酒店管理的必备软件之一，是酒店销售完全信息化（直连）的唯一入口，也是我国酒店星级评定的重要衡量指标之一，所有评定过的三星级及以上的酒店都拥有PMS。</p>
<p>而PMS厂商一般都提供酒店管理的全套软件或是酒店管理的解决方案，包括前台管理（预订、接待、收银、夜审、客房、客史、会员、餐饮、娱乐等）、后台管理（财务、物流、人事、维护、宽带等）和接口管理（内部接口和外部接口）等。所以如果某酒店采用某PMS厂商的PMS产品，那么该酒店的其他管理软件也基本上是来自于该PMS厂商，且酒店要更换产品会比较麻烦。</p>
<p>目前，我国的几大PMS厂商主要有：<br><strong>石基信息</strong>：（通过买断和代理Micros Fidelio）占有国内90%以上的五星级酒店市场和80%以上的高星级（4、5星级）酒店的市场份额，在高端酒店市场处在垄断地位；<strong>杭州西软科技</strong>：拥有国内最多的酒店客户群，已超过2600家酒店，于2006年被石基收购；<strong>北京中软好泰</strong>：在国内拥有第二大酒店客户群，于2008年被携程控股（好像已经收购了华仪技术，有待进一步澄清）；<strong>华仪软件</strong>：总部设在北京，市场份额06年还排第四，不过近两年发展比较缓慢；<strong>广州万讯（广州千里马）</strong>：占有珠江三角洲最大的市场份额，06年拥有大概1000家左右的市场，07年与pegasus solutions在华公司易旅科技结成合作伙伴，不过这两年发展缓慢；北京泰能：05年被石基信息收购，不过08年又自由了，现在拥有的酒店客户群大概有1500左右，酒店数量排在第三位。</p>
<h1 id="主流PMS"><a href="#主流PMS" class="headerlink" title="主流PMS"></a>主流PMS</h1><p>国际酒店有OPERA、FIDELIO，国内三到五星有中软、西软，腾云、千里马，中小型酒店有简单点、罗盘、芙蓉等。</p>
<p>其它还有：金天鹅、欣欣、方寸、齐创、华仪、金达莱、企发、智信、易能、云飞、千里马、大总管、捷信达…</p>
<blockquote>
<p>1987年10月在德国慕尼黑成立的Fidelio Software GmbH,成立仅仅四年就成为了欧洲顶尖的酒店软件管理产品，成立六年跃居世界酒店信息系统供应商之首。</p>
<p>之后并入美国Micros System Inc 公司，1995年 Micros成立中国分公司–上海富达，2003年北京中长石基信息技术有限公司从Micros公司取得了FIDELIO和OPERA中国唯一的销售许可。</p>
<p>FIDELIO和OPERA几乎是所有国内高端外资酒店的共同选择，<br>在国内，除非5星级或者有一定影响力的酒店，一般都不进行合作。</p>
<p>国内各方观点<br>1、FIDELIO不错，但是在操作的方便性、高效性上，没有本地系统优秀。有的人在90年代初做酒店，入门就玩FIDELIO，根本就没有好好研究在90年代后期发展起来的本地造，妄下断语。闭眼讲话，拿着无知当高尚。<br>2、FIDELIO早期版本建立起来的严谨、稳定、茁壮的程序风格可以说让OPERA SYSTEMS给破坏成了昨日黄花。各位谁知：FIDELIO OPERA7.0版因为数据处理错误，FIDELIO放弃不可一世的面孔，自己上门为用户打补丁。<br>3、FIDELIO太孤傲了，不仅仅忽略中国市场群落的需求呼声，没有为大陆开发中文增值包（连微软ms office都为特意为中国市场增加了增值服务包),而且故障维护费用惊人。他们的理念是：一切故障都是客户的故障。我的系统永远是正常的。我想引用一位欧洲学者的话：偏见比无知更可怕。 但我们承认computer system 是作为一个酒店整体解决方案（ERP）进入酒店，系统本身融入了开发者的管理思想和理念，如果说安装了系统，不如说我们导入了新的经营思想，FIDELIO在技术上渐失优势的时刻，仍有管理牌紧握。</p>
</blockquote>
<h1 id="PMS链接"><a href="#PMS链接" class="headerlink" title="PMS链接"></a>PMS链接</h1><p>OPERA<br><a href="https://www.oracle.com/industries/hospitality/products/opera-property-services/index.html" target="_blank" rel="external">https://www.oracle.com/industries/hospitality/products/opera-property-services/index.html</a><br>千里马<br><a href="http://www.armitage.com.cn" target="_blank" rel="external">http://www.armitage.com.cn</a><br>金天鹅<br><a href="http://www.jdglrj.com/down.html" target="_blank" rel="external">http://www.jdglrj.com/down.html</a></p>
<h1 id="云PMS"><a href="#云PMS" class="headerlink" title="云PMS"></a>云PMS</h1><p>罗盘<br><a href="http://www.luopan.cn/" target="_blank" rel="external">http://www.luopan.cn/</a><br>住哲<br><a href="http://www.zhuzher.com/" target="_blank" rel="external">http://www.zhuzher.com/</a><br>智选云<br><a href="http://www.ccshis.com/index.html" target="_blank" rel="external">http://www.ccshis.com/index.html</a><br>天龙云<br><a href="http://pms.yaduo.com/login.html" target="_blank" rel="external">http://pms.yaduo.com/login.html</a><br>民宿云<br><a href="http://www.minsuyun.com/home/index.html" target="_blank" rel="external">http://www.minsuyun.com/home/index.html</a><br>方信科技<br><a href="http://www.cnfangxin.com/cn/rjcp.asp?id=236" target="_blank" rel="external">http://www.cnfangxin.com/cn/rjcp.asp?id=236</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Ionic框架开发Hybird应用]]></title>
      <url>http://cuiqingwei.github.io/2017/09/19/2017-09-19-%E4%BD%BF%E7%94%A8Ionic%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91Hybird%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="什么是Ionic"><a href="#什么是Ionic" class="headerlink" title="什么是Ionic"></a>什么是Ionic</h1><p>Ionic是一个强大的HTML5 原生应用（Native App）开发框架，帮助你用HTML，CSS和JavaScript构建具有原生味道的移动应用;</p>
<p>Ionic是一个高级HTML5混合式移动应用开发框架，同时也是一个开源的前端框架;</p>
<p>Ionic注重的是视觉效果和用户体验，所以使用了AngularJS来构建很各种酷的效果;</p>
<p>Ionic是类似Bootstrap概念的WebApp框架,提供了Hybrid App的基础CSS,UI控件,工程架构和最佳实践。</p>
<a id="more"></a>
<h1 id="Ionic的优势"><a href="#Ionic的优势" class="headerlink" title="Ionic的优势"></a>Ionic的优势</h1><ul>
<li>性能优异</li>
<li>基于红的发紫AngularJs</li>
<li>漂亮的UI</li>
<li>强大的命令行(基于更热门的NodeJS)</li>
<li>开发团队非常活跃，</li>
<li>相关配套非常齐全：</li>
<li>相对充足的学习资料，Learn Iconic,The Iconic book</li>
<li>ngcordova，将主流的Cordova API或者Cordova插件封装为AngularJS扩展，使用非常方便。</li>
<li>开源免费的webfont icon库ionicons,基本满足你icon需求。</li>
<li>甚至最近开发出的可视化开发工具Ionic Creator</li>
<li>最后便是至关重要的，异常活跃的在线社区。</li>
</ul>
<h1 id="谈谈-Hybrid-app"><a href="#谈谈-Hybrid-app" class="headerlink" title="谈谈 Hybrid app"></a>谈谈 Hybrid app</h1><p>Ionic+Cordova的组合是一个跨平台的移动开发框架，属于HybirdApp开发模式。其中Ionic是一个前端框架，集成了AngularJs在里面，有很好很漂亮的UI控件。Cordova本身就是一个跨平台的移动开发框架，可以将应用打包成各个平台下的应用。他们之间的关系可以用下面的图展示：</p>
<p><img src="/img/20170919/webapp0.png" alt=""></p>
<p>从网下图，可以很直观的看出Native app 、Web app和Hybrid app三者之间的区别：</p>
<p><img src="/img/20170919/webapp1.png" alt=""><br><img src="/img/20170919/webapp2.png" alt=""></p>
<ul>
<li><p>1）Native APP：Native *<br>Code编程，代码编译之后以2进制或者字节码的形式运行在OS上，直接调用OS的Device API；</p>
</li>
<li><p>2）Web APP * ，以HTML+JS+CSS等WEB技术编程，代码运行在浏览器中，通过浏览器来调用Device API（取决于HTML5未来的支持能力）：</p>
</li>
<li><p>3）Hybrid APP * ，部分代码以WEB技术编程，部分代码由某些Native Container承担（例如PhonGAP插件，BAE插件），其目的是在HTML5尚未完全支持Device API和Network API的目前阶段，承担这部分职责。</p>
</li>
</ul>
<p>总体来讲，<strong> Hybrid App是同时采用网页语言与程序语言进行开发，通过不同的应用商店进行打包与分发，应用的特性更接近原生应用而且又区别与Web应用 </strong> 。但是在开发过程中同时使用了网页语言，所以开发成本与难度大大降低。也就是说Hybrid App兼具了Native App与Web App两者的诸多优点。</p>
<p>Hybrid App有以下的特性：</p>
<blockquote>
<p>开发时可能不采用或者大部分不采用原生语言，但是却有所有原生应用的特性；<br>架构方案会和原生有出入，基本由工具而定；<br>具有跨平台特性；<br>一般开发相对原生开发的方式要简单。</p>
</blockquote>
<p>工具方面，我们可以使用Angular.js用于双向数据绑定和网络请求以及视图管理等工作，使用require.js来实现模块化开发，组织代码.</p>
<h1 id="安装Cordova和Ionic"><a href="#安装Cordova和Ionic" class="headerlink" title="安装Cordova和Ionic"></a>安装Cordova和Ionic</h1><p>如果你想要开始Ionic开发，你需要先安装Node.js。</p>
<blockquote>
<p>在Win系统中：<br><strong>npm install -g cordova ionic</strong><br>在Mac中，需要加上sudo：<br><strong>sudo npm install -g cordova ionic</strong><br>安装完后在cmd或者终端输入ionic：</p>
</blockquote>
<p><img src="/img/20170919/webapp3.png" alt=""></p>
<p>这样就表示安装成功。</p>
<h1 id="开始一个Ionic-App"><a href="#开始一个Ionic-App" class="headerlink" title="开始一个Ionic App"></a>开始一个Ionic App</h1><p>Ionic官网<a href="http://ionicframework.com为开发者提供了多个开发模板，如：" target="_blank" rel="external">http://ionicframework.com为开发者提供了多个开发模板，如：</a></p>
<blockquote>
<p>空白模板（Black app）：<br><strong>ionic start myApp blank</strong><br>tabs模板 ：<br><strong>ionic start myApp tabs</strong><br>sidemenu模板：<br><strong>ionic start myApp sidemenu</strong></p>
</blockquote>
<p><img src="/img/20170919/webapp4.png" alt=""></p>
<h1 id="开始创建一个工程："><a href="#开始创建一个工程：" class="headerlink" title="开始创建一个工程："></a>开始创建一个工程：</h1><p>ionic start myApp1 tabs</p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>cd myApp1<br>ionic cordova platform add ios<br>ionic cordova build ios<br>ionic cordova emulate ios<br>然后再输入下面这串命令行，继续刷屏：<br>sudo npm install -g ios-sim<br>然后继续输入：<br>ionic cordova emulate ios<br>就会弹出模拟器了。</p>
<p><img src="/img/20170919/webapp5.png" alt=""></p>
<p>我推荐大家使用<strong>ionic serve</strong>命令来使用电脑浏览器调试，如图：</p>
<p><img src="/img/20170919/webapp6.png" alt=""></p>
<h1 id="Ionic插件安装与卸载"><a href="#Ionic插件安装与卸载" class="headerlink" title="Ionic插件安装与卸载"></a>Ionic插件安装与卸载</h1><p>使用下面的命令查询、安装、卸载插件：<br>ionic plugin list       //列出所有已安装插件<br>ionic plugin remove 插件名     //先根据上面的list列出插件，然后根据插件名卸载<br>ionic plugin  add  插件地址     //这个插件地址可以是github的项目地址，也可以是一个文件夹路径<br>ionic –help     //查看帮助文件<br>ionic项目托管平台地址： <a href="https://github.com/driftyco/ionic/" target="_blank" rel="external">https://github.com/driftyco/ionic/</a><br>css组件：<a href="http://www.ionicframework.com/docs/components/#header" target="_blank" rel="external">http://www.ionicframework.com/docs/components/#header</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>Ionic+Cordova开发环境搭建 <a href="http://blog.csdn.net/gameloft9/article/details/50923615" target="_blank" rel="external">http://blog.csdn.net/gameloft9/article/details/50923615</a><br>使用ionic框架开发移动hybrid应用 <a href="https://segmentfault.com/a/1190000002688632" target="_blank" rel="external">https://segmentfault.com/a/1190000002688632</a><br>ionic react-native和native开发移动app那个好 ?  <a href="http://www.phonegap100.com/article-486-1.html" target="_blank" rel="external">http://www.phonegap100.com/article-486-1.html</a><br>ionic工作室 <a href="http://www.ionic.wang" target="_blank" rel="external">http://www.ionic.wang</a><br>ionic china <a href="http://ionic-china.com/index.html" target="_blank" rel="external">http://ionic-china.com/index.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HomeKit初体验]]></title>
      <url>http://cuiqingwei.github.io/2017/02/09/2017-02-09-Homekit%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<h1 id="对话Siri"><a href="#对话Siri" class="headerlink" title="对话Siri"></a>对话Siri</h1><iframe height="498" width="510" src="http://player.youku.com/embed/XMjUwMzIyMjEyMA==" frameborder="0" 'allowfullscreen'=""></iframe>

<a id="more"></a>
<h1 id="界面效果"><a href="#界面效果" class="headerlink" title="界面效果"></a>界面效果</h1><p><img src="/img/20170209/homekit1.jpg" alt=""><br><img src="/img/20170209/homekit2.jpg" alt=""></p>
<p>2017年香港光顾苹果旗舰店时，看到了一些第三方Homekit产品，于是萌生了折腾Homekit的想法。</p>
<p><img src="/img/20170209/devices.jpg" alt=""></p>
<p>折腾时所用的硬件，可以根据个人需要自行更改:</p>
<ul>
<li>树莓派 3 代 B 型（包含 Micor SD 卡）</li>
<li>YeeLight 智能灯泡</li>
<li>E27螺口灯座</li>
<li>网线、MicroUSB线</li>
<li>MacMini 电脑 （ Windows PC、Ubuntu、Linux 均可）</li>
</ul>
<h1 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h1><h3 id="1-安装Raspbian系统"><a href="#1-安装Raspbian系统" class="headerlink" title="1.安装Raspbian系统"></a>1.安装Raspbian系统</h3><p>系统镜像采用 <strong>2016-09-26-Hassbian-Bluetooth.img</strong><br>下载地址 <a href="http://pan.baidu.com/s/1qYs6hn2" target="_blank" rel="external">http://pan.baidu.com/s/1qYs6hn2</a></p>
<p>Mac制作命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">df -h</div><div class="line">diskutil unmount /dev/disk3s1</div><div class="line">dd bs=4m if=2016-09-26-Hassbian-Bluetooth.img of=/dev/rdisk3</div><div class="line">diskutil unmountdisk /dev/disk3</div></pre></td></tr></table></figure></p>
<blockquote>
<p>可参考 <a href="http://cuiqingwei.github.io/2016/02/15/2016-02-15-Raspberry-Pi/">http://cuiqingwei.github.io/2016/02/15/2016-02-15-Raspberry-Pi/</a></p>
</blockquote>
<h3 id="2-登录Raspberry"><a href="#2-登录Raspberry" class="headerlink" title="2.登录Raspberry"></a>2.登录Raspberry</h3><p>安装完成之后，用网线连接好树莓派和路由器，打开电脑的终端，用 ssh 登录树莓派。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssh pi@raspberrypi.local</div><div class="line">或者</div><div class="line">ssh pi@ip</div></pre></td></tr></table></figure>
<p>ip可以在路由器的运行网页查看到,当然，Windows系统可以通过 <a href="http://www.mylanviewer.com/network-ip-scanner.html" target="_blank" rel="external">MyLanViewer Network/IP Scanner</a> 扫描等到目标地址。<br>之后终端会要求输入密码，输入 <strong>raspberry</strong> 回车即可。输入密码的途中终端不会显示任何字符，只需要正常输入即可。</p>
<h3 id="3-更新软件源"><a href="#3-更新软件源" class="headerlink" title="3.更新软件源"></a>3.更新软件源</h3><p>登录树莓派之后，先升级软件源，在终端下输入以下代码，等待一段时间即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get upgrade</div></pre></td></tr></table></figure>
<h1 id="配置选项"><a href="#配置选项" class="headerlink" title="配置选项"></a>配置选项</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo raspi-config</div></pre></td></tr></table></figure>
<p>change_locale – 更改语言设置。在Locales to be generated: 中，选择en_US.UTF-8和zh_CN.UTF-8。在Default locale for the system environment:中，选择en_US.UTF-8（等启动完机器，装完中文字体，再改回zh_CN.UTF-8，否则第一次启动会出现方块）。</p>
<blockquote>
<p>可参考 <a href="http://blog.csdn.net/xdw1985829/article/details/38816375" target="_blank" rel="external">http://blog.csdn.net/xdw1985829/article/details/38816375</a></p>
</blockquote>
<h1 id="打开-Yeelight-的极客模式"><a href="#打开-Yeelight-的极客模式" class="headerlink" title="打开 Yeelight 的极客模式"></a>打开 Yeelight 的极客模式</h1><p>在 App Store 下载官方的 Yeelight 应用，先连接上灯泡.然后点右上角的三根横杠，在下方打开极客模式。</p>
<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><p>回到终端，我们继续来安装 Node.js 。从版本 4.0.0 开始，Node.js 默认支持基于 ARM 的平台，我们只需要输入相关代码即可。</p>
<p>依次在终端输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget https://nodejs.org/dist/v4.3.2/node-v4.3.2-linux-armv6l.tar.gz</div><div class="line">tar -xvf node-v4.3.2-linux-armv6l.tar.gz</div><div class="line">cd node-v4.3.2-linux-armv6l</div><div class="line">sudo cp -R * /usr/local/</div></pre></td></tr></table></figure>
<p>完成之后，输入 node -v 检查一下是否安装完成，如果显示  v4.3.2 ，则表示 Node.js 安装成功。<br>安装 Avahi 和相关依赖软件包</p>
<p>在终端输入以下命令即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libavahi-compat-libdnssd-dev</div></pre></td></tr></table></figure>
<p>安装 HomeBridge 和相关依赖软件包</p>
<p>依次在终端输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g --unsafe-perm homebridge hap-nodejs node-gyp</div><div class="line">cd /usr/local/lib/node_modules/homebridge/</div><div class="line">sudo npm install --unsafe-perm bignum</div><div class="line">cd /usr/local/lib/node_modules/hap-nodejs/node_modules/mdns</div><div class="line">sudo node-gyp BUILDTYPE=Release rebuild</div></pre></td></tr></table></figure>
<p>添加 Yeelight 配置文件</p>
<p>输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g homebridge-yeelight</div></pre></td></tr></table></figure>
<p>等待命令运行结束后，输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /home/pi/.homebridge/</div><div class="line">vi config.json</div></pre></td></tr></table></figure>
<p>点击键盘的 i 键，终端左下角出现 – INSERT – ，如下图所示。</p>
<p>将以下代码复制到终端：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;bridge&quot;: &#123;</div><div class="line">        &quot;name&quot;: &quot;IoTBridge&quot;,</div><div class="line">        &quot;username&quot;: &quot;28:6C:07:10:BF:16&quot;,</div><div class="line">        &quot;port&quot;: 51825,</div><div class="line">        &quot;pin&quot;: &quot;031-45-154&quot;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    &quot;platforms&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;platform&quot; : &quot;yeelight&quot;,</div><div class="line">            &quot;name&quot; : &quot;yeelight&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>粘贴完成后，按Esc键，输入 :wq 然后回车。</p>
<p>之后，便可以运行 HomeBridge ：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">homebridge</div></pre></td></tr></table></figure>
<p>这一步完成之后，HomeBridge 就安装完毕并且开始运行， YeeLight 彩光灯也成功接入 Apple HomeKit ，打开 iOS 10 自带的家庭 App， 点击添加配件即可。会有两个配件，第一个是 IoTBridge ，这是一个桥接器；还有一个才是我们要控制的灯泡。</p>
<p>现在，你就可以享受 <strong>「嘿 Siri ，帮我开个灯」</strong> 了。<br>在树莓派启动后自动运行 HomeBridge 服务</p>
<h1 id="最后一步，把-HomeBridge-服务加入到树莓派的系统服务里。"><a href="#最后一步，把-HomeBridge-服务加入到树莓派的系统服务里。" class="headerlink" title="最后一步，把 HomeBridge 服务加入到树莓派的系统服务里。"></a>最后一步，把 HomeBridge 服务加入到树莓派的系统服务里。</h1><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>首先我们要开启 root 账户，首先在终端输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo passwd root</div></pre></td></tr></table></figure>
<p>然后会提示你设置 root 账户密码，第一次输入之后还要确认一次，一样两次输入不会有任何字符显示。输入完毕之后，启用 root 账户，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo passwd --unlock root</div></pre></td></tr></table></figure>
<p>然后会提示报错： passwd: password expiry information changed. ，原因是新版的系统默认禁止 ssh 登录 root 账户，我们需要修改一下配置文件。在终端输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/ssh/sshd_config</div></pre></td></tr></table></figure>
<p>用 Ctrl + W 搜索「 PermitRootLogin 」，找到之后将 PermitRootLogin without-password 改成 PermitRootLogin yes ，然后按 Ctrl + O 保存，回车之后退出编辑器。</p>
<p>GitHub 提供了三种让树莓派启动后自动运行 HomeBridge 服务的方法，我选择的是 init.d 的方式。打开 这个网页 ，将文件下载到本地，然后将 template 重命名为 homebridge （或者任何你想要的名字） ，放到树莓派目录 /etc/init.d 下。注意这里一定要</p>
<p>用 root 账户 ssh 登录Raspberry。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /etc/init.d</div><div class="line">vi homebridge</div></pre></td></tr></table></figure>
<p>点击键盘的 i 键，终端左下角出现 – INSERT – ，如下图所示。</p>
<p>将以下代码复制到终端：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">### BEGIN INIT INFO</div><div class="line"># Provides: homebridge</div><div class="line"># Required-Start:    $network $remote_fs $syslog</div><div class="line"># Required-Stop:     $remote_fs $syslog</div><div class="line"># Default-Start:     2 3 4 5</div><div class="line"># Default-Stop:      0 1 6</div><div class="line"># Short-Description: Start daemon at boot time</div><div class="line"># Description:       Enable service provided by daemon.</div><div class="line">### END INIT INFO</div><div class="line"></div><div class="line">dir=&quot;/home/pi&quot;</div><div class="line">cmd=&quot;DEBUG=* /usr/local/bin/homebridge&quot;</div><div class="line">user=&quot;pi&quot;</div></pre></td></tr></table></figure>
<p>完成后保存，然后回到终端，依次输入以下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo chmod 755 /etc/init.d/homebridge</div><div class="line">sudo update-rc.d homebridge defaults</div></pre></td></tr></table></figure>
<p>现在，你可以在终端输入 HomeBridge ，等待服务运行之后关掉终端，看是否可以继续使用家庭 App 开关灯泡；或者重启一下树莓派，看看 HomeBridge 服务是否正常运行。</p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>将homebridge设置成随系统启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cd /</div><div class="line">sudo useradd --system homebridge</div><div class="line">sudo mkdir /var/homebridge</div><div class="line">sudo cp ~/.homebridge/config.json /var/homebridge/</div><div class="line">sudo cp -r ~/.homebridge/persist /var/homebridge</div><div class="line">sudo chmod -R 0777 /var/homebridge</div><div class="line">cd /etc/default</div><div class="line">sudo nano homebridge</div></pre></td></tr></table></figure>
<p>将下面的内容复制粘贴进去</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Defaults / Configuration options for homebridge</div><div class="line"># The following settings tells homebridge where to find the config.json file and where to persist the data (i.e. pairing and others)</div><div class="line">HOMEBRIDGE_OPTS=-U /var/homebridge</div><div class="line"></div><div class="line"># If you uncomment the following line, homebridge will log more</div><div class="line"># You can display this via systemd&apos;s journalctl: journalctl -f -u homebridge</div><div class="line"># DEBUG=*</div></pre></td></tr></table></figure>
<p>Ctrl+X，然后Y，回车，保存退出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /etc/systemd/system</div><div class="line">sudo nano homebridge.service</div></pre></td></tr></table></figure>
<p>将下面的内容复制粘贴进去</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Node.js HomeKit Server</div><div class="line">After=syslog.target network-online.target</div><div class="line">[Service]</div><div class="line">Type=simple</div><div class="line">User=homebridge</div><div class="line">EnvironmentFile=/etc/default/homebridge</div><div class="line">ExecStart=/usr/lib/node_modules/homebridge/bin/homebridge $HOMEBRIDGE_OPTS</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=10</div><div class="line">KillMode=process</div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<p>然后Ctrl+X，然后Y，回车，保存退出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd /</div><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo systemctl enable homebridge</div><div class="line">sudo systemctl start homebridge</div><div class="line">sudo systemctl status homebridge</div><div class="line">sudo reboot      ####重启树莓派####</div></pre></td></tr></table></figure>
<p>如果以上均成功运行，那么恭喜你，一切都大功告成。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenWRT之HomeKit]]></title>
      <url>http://cuiqingwei.github.io/2017/02/08/2017-02-08-OpenWRT%E4%B9%8BHomeKit/</url>
      <content type="html"><![CDATA[<h1 id="1-制备openwrt系统镜像"><a href="#1-制备openwrt系统镜像" class="headerlink" title="1.制备openwrt系统镜像"></a>1.制备openwrt系统镜像</h1><p>预编译的openwrt是musl的toolchain，而homebridge需要glibc的toolchain所以需要自己编译系统。</p>
<p>建议安装完成后开启ssh，直接用putty和winscp来传送文件和操作虚拟机更方便。<br>以下所有命令都是通过putty登陆虚拟机或使用虚拟机的terminal来执行的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt update</div></pre></td></tr></table></figure>
<p>安装编译系统需要的软件包:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt update</div></pre></td></tr></table></figure>
<p>下载openwrt最新代码，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git://github.com/openwrt/openwrt.git</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>将feeds.conf.default改名为feeds.conf</p>
<p>更新feeds部分的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update -a</div><div class="line">./scripts/feeds install -a</div></pre></td></tr></table></figure>
<blockquote>
<p>使用feeds文件夹替换掉openwrt，原版代码不带avahi的dev库，需要自己添加支持；<br>另外自带nodejs的版本低于5.0启动homebridge的时候会有个warning，一并更换成最新版。</p>
</blockquote>
<p>openwrt编译配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure>
<p>需要的软件包：<br>Advanced configuration options (for developers)  —&gt;<br>      Toolchain Options  —&gt;<br>         C Library implementation (Use musl)  —&gt;<br>            [X] Use (e)glibc<br>Base system  —&gt;<br>   block-mount、ca-certificates<br>Development —&gt;<br>   <m> gcc<br>   <m> make<br>Kernel modules  —&gt;<br>    Filesystems  —&gt;<br>       kmod-fs-exfat、kmod-fs-ext4、kmod-fs-ntfs、kmod-fs-vfat<br>    USB Support  —&gt;<br>       kmod-usb-storage-extras、kmod-usb2、kmod-usb3<br>Languages  —&gt;<br>    Node.js  —&gt;<br>        <m> node<br>    Python  —&gt;<br>        <m> python<br>Libraries  —&gt;<br>   libavahi-compat-libdnssd-dev<br>Network  —&gt;<br>    mosquitto<br>LuCi   —&gt;</m></m></m></m></p>
<pre><code>1. Collections  ---&gt;
   luci
</code></pre><p>保存后开始编译</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make V=s</div></pre></td></tr></table></figure>
<p>趁着时候没事干把准备好的U盘连入虚拟机，格式化成ext3/ext4格式，插到路由器的USB接口上。</p>
<p>刷入系统不再详述，不会搞的可以百度，这方面的教程遍地。<br>成功后进入路由器管理界面luci，system下将语言改为中文。设置路由器登陆密码，然后使用putty和winscp即可连接到路由器文件系统了。<br>将U盘查到路由器上等一会以后，从路由器管理界面找到如下位置，看到U盘的大小说明成功。</p>
<h1 id="2-openwrt-挂载overlay到U盘"><a href="#2-openwrt-挂载overlay到U盘" class="headerlink" title="2. openwrt 挂载overlay到U盘"></a>2. openwrt 挂载overlay到U盘</h1><ul>
<li>2.1. 添加必要软件</li>
</ul>
<p><strong>block-mount</strong><br><strong>kmod-fs-ext4</strong><br><strong>kmod-usb-ohci</strong><br><strong>kmod-usb-storage</strong><br><strong>fdisk</strong><br><strong>cfdisk</strong><br><strong>e2fsprogs</strong></p>
<p>可以在 <strong>menuconfig</strong> 通过输入 <strong>/</strong> 查找这些组件。</p>
<ul>
<li>2.2. 升级系统</li>
</ul>
<p><strong>sysupgrade -v xxxx-sysupgrade.bin</strong></p>
<ul>
<li>2.3. 分区操作</li>
</ul>
<p><strong>cfdisk</strong></p>
<p>分三个区<br>sda1（512M）为系统盘，相当于Windows系统的C盘；<br>sda2（128M)为交换分区，用于内存交换；<br>sda3(剩余)为存储区，主要放置较大文件</p>
<ul>
<li><p>2.4.格式化各分区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkfs.ext4 /dev/sda1 　　#将第一个分区格式化为ext3格式</div><div class="line">mkswap /dev/sda2    　　#将第二个分区格式化为swap交换分区</div><div class="line">mkfs.ext4 /dev/sda3 　　#将第三个分区格式化为ext3格式</div></pre></td></tr></table></figure>
</li>
<li><p>2.5.安装完成以后,挂载u盘.如下命令将默认的系统盘转移到u盘中.</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mount /dev/sda1 /mnt</div><div class="line">mkdir /tmp/root</div><div class="line">mount -o bind / /tmp/root</div><div class="line">cp /tmp/root/* /mnt -a</div><div class="line">umount /tmp/root</div></pre></td></tr></table></figure>
<ul>
<li>2.6.修改 /etc/config/fstab 文件,让系统启动自动挂载,修改成如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">config mount</div><div class="line">        option target   /overlay</div><div class="line">        option device   /dev/sda1</div><div class="line">        option fstype   ext4</div><div class="line">        option options  rw,sync</div><div class="line">        option enabled  1</div><div class="line">        option enabled_fsck 0</div></pre></td></tr></table></figure>
<ul>
<li>2.7.执行如下命令让其生效</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/fstab enable</div></pre></td></tr></table></figure>
<ul>
<li>2.8.重启后，执行df -h后如果发现/overlay挂载在/tmp/overlay-disabled上的解决方案：</li>
</ul>
<p><strong>rm /tmp/overlay-disabled/etc/extroot.md5sum</strong></p>
<p>或者删除/tmp/overlay-disabled目录下的所有系统文件，按照第2.5重新操作重启。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Raspberry安装HAP-NodeJS]]></title>
      <url>http://cuiqingwei.github.io/2017/02/08/2017-02-08-Raspberry%E5%AE%89%E8%A3%85HAP-NodeJS/</url>
      <content type="html"><![CDATA[<h1 id="下载-Raspbian"><a href="#下载-Raspbian" class="headerlink" title="下载 Raspbian"></a>下载 Raspbian</h1><p><a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="external">https://www.raspberrypi.org/downloads/raspbian/</a></p>
<h1 id="制作-TF-card"><a href="#制作-TF-card" class="headerlink" title="制作 TF card"></a>制作 TF card</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">df -h</div><div class="line">diskutil unmount /dev/disk2s1</div><div class="line">diskutil list</div><div class="line">dd bs=4m if=2017-01-11-raspbian-jessie.img of=/dev/rdisk2</div><div class="line">diskutil unmountdisk /dev/disk2</div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>note：新的img默认没有打开ssh，在tf卡根目录新建名称为 ssh 的文件夹解决</p>
</blockquote>
<h1 id="登录树莓派"><a href="#登录树莓派" class="headerlink" title="登录树莓派"></a>登录树莓派</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh pi@raspberrypi.local</div></pre></td></tr></table></figure>
<h1 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</div><div class="line">sudo vi /etc/apt/sources.list</div></pre></td></tr></table></figure>
<p>进入编辑界面，用 <strong>#</strong> 注释掉原来的源，添加下方的源。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.neusoft.edu.cn/raspbian/raspbian jessie main contrib non-free rpi</div></pre></td></tr></table></figure>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade -y</div></pre></td></tr></table></figure>
<h1 id="安装解决依赖"><a href="#安装解决依赖" class="headerlink" title="安装解决依赖"></a>安装解决依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install avahi-daemon avahi-discover libnss-mdns libavahi-compat-libdnssd-dev  build-essential -y</div><div class="line">service avahi-daemon start</div></pre></td></tr></table></figure>
<h1 id="增加nodejs源"><a href="#增加nodejs源" class="headerlink" title="增加nodejs源"></a>增加nodejs源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div></pre></td></tr></table></figure>
<h1 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd ~/Downloads</div><div class="line">wget http://nodejs.org/dist/v7.6.0/node-v7.6.0.tar.gz</div><div class="line">tar -xzf node-v7.6.0.tar.gz</div><div class="line">cd node-v7.6.0</div><div class="line">./configure</div><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<h1 id="克隆HAP-NodeJS源码"><a href="#克隆HAP-NodeJS源码" class="headerlink" title="克隆HAP-NodeJS源码"></a>克隆HAP-NodeJS源码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/KhaosT/HAP-NodeJS.git</div></pre></td></tr></table></figure>
<h1 id="安装node-gyp"><a href="#安装node-gyp" class="headerlink" title="安装node-gyp"></a>安装node-gyp</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g node-gyp</div></pre></td></tr></table></figure>
<h1 id="切换到HAP-NodeJS文件夹下，运行"><a href="#切换到HAP-NodeJS文件夹下，运行" class="headerlink" title="切换到HAP-NodeJS文件夹下，运行"></a>切换到HAP-NodeJS文件夹下，运行</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo npm istall</div><div class="line">node Core.js</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[夏利俊超级远投讲解]]></title>
      <url>http://cuiqingwei.github.io/2017/01/02/2017-01-02-%E5%A4%8F%E5%88%A9%E4%BF%8A%E8%B6%85%E7%BA%A7%E8%BF%9C%E6%8A%95%E8%AE%B2%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h1 id="《夏利俊路亚教室》之直柄竿超级远投"><a href="#《夏利俊路亚教室》之直柄竿超级远投" class="headerlink" title="《夏利俊路亚教室》之直柄竿超级远投"></a>《夏利俊路亚教室》之直柄竿超级远投</h1><div align="center"><br><iframe height="498" width="510" src="http://player.youku.com/embed/XMTg2Mzk2Njg4NA==" frameborder="0" 'allowfullscreen'=""></iframe><br></div>

<a id="more"></a>
<h1 id="《夏利俊路亚教室》之枪柄竿超级远投"><a href="#《夏利俊路亚教室》之枪柄竿超级远投" class="headerlink" title="《夏利俊路亚教室》之枪柄竿超级远投"></a>《夏利俊路亚教室》之枪柄竿超级远投</h1><div align="center"><br><iframe height="498" width="510" src="http://player.youku.com/embed/XMTg2Mzk2Njg4NA==" frameborder="0" 'allowfullscreen'=""></iframe><br></div><br># 《夏利俊路亚教室》之直柄竿精准远投<br><div align="center"><br><iframe height="498" width="510" src="http://player.youku.com/embed/XMTg4NzE4OTY4MA==" frameborder="0" 'allowfullscreen'=""></iframe><br></div><br># 《夏利俊路亚教室》之直柄竿正手侧抛<br><div align="center"><br><iframe height="498" width="510" src="http://player.youku.com/embed/XMjUxNjA0MTQ3Ng==" frameborder="0" 'allowfullscreen'=""></iframe><br></div><br># 《夏利俊路亚教室》之枪柄竿单手抛<br><div align="center"><br><iframe height="498" width="510" src="http://player.youku.com/embed/XMjY0MjM2Nzg2NA==" frameborder="0" 'allowfullscreen'=""></iframe><br></div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[路亚装逼指南]]></title>
      <url>http://cuiqingwei.github.io/2017/01/01/2017-01-01-%E8%B7%AF%E4%BA%9A%E8%A3%85%E9%80%BC%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p>何为<strong>路亚</strong>？你看有人站水边，竿尖挂个假鱼，抛出去，收回来，抛出去，再收，那就是了。</p>
<p><img src="/img/20170101/pjlure.jpg" alt=""></p>
<a id="more"></a>
<p>理论上，它是由<em>假鱼入水后模拟真鱼的泳姿，诱惑食肉鱼捕食到上钩的过程。</em> 其实本人看来，不全是。</p>
<blockquote>
<p>好比大晚上一醉酒哥们在你家楼下高声喧哗，你本是一慈善的人，此刻也恨不得一个啤酒瓶飞下去。</p>
</blockquote>
<p>路亚亦如是，老有个假货在你面前搔首弄姿游来游去，大鱼一看，怒了！给你狗日一口。这也就是为什么鲤鱼非路亚的对象鱼但是也经常上钩。</p>
<p><img src="/img/20170101/lure.jpg" alt=""></p>
<p>这里说如何<strong>装逼</strong>，本身这个运动就带有浓厚的装逼色彩，区别于台钓也就是我们常说的老头钓，<strong>一根杆，一团面，一个地方蹲一天</strong> 不同，路亚是不断的在运动，移动。</p>
<p><img src="/img/20170101/taidiao.jpg" alt=""></p>
<p>你经常看见很多初级爱好者，整个涉水服往水里一站。像模像样的在那搞，有的还弄什么防滑手套，顶个麦加巴斯的帽子防晒，腰间一个皮带，上面看得懂看不懂的工具一堆，上鱼了一定要吼一声:”中鱼！”，管他有没有把鱼吓跑。</p>
<p><img src="/img/20170101/tools.jpg" alt=""><br><img src="/img/20170101/zhuangbi.jpg" alt=""></p>
<p>初级爱好者最在乎的不是鱼，是<strong>距离</strong>。怎么说捏，你们看过<a href="http://baike.baidu.com/item/%E5%A4%A7%E6%B2%B3%E6%81%8B" target="_blank" rel="external">《大河恋》</a>吧，皮特演的那个电影，讲飞蝇钓的，有点类似路亚钓鱼，这个运动最骚的就是把鱼饵抛出去那一瞬间。</p>
<p><img src="/img/20170101/feiying.jpg" alt=""></p>
<p>初学者大部分姿势或者发力不对，不单抛出去没有距离，而且还导致鱼轮上的线缠住，这个他们叫炒线或者炒粉。你经常看见一哥们很帅气的一抛，然后硕大一个物体落水声，这就是炒粉了，然后你就看他焦头烂额的埋头在那理线，一般时间在5分钟，炒粉严重的你就看他拿剪刀在那剪线了。</p>
<p><img src="/img/20170101/chaofen.jpeg" alt=""></p>
<p>很快，熟练了，不炒粉了。想想要开始正儿八经搞了，开始抛投了，设备也换成顶级的了。好么，这下就真正开始关心抛投的距离了，看谁抛的远，这个30米，那个60米，越来越远。最后都可以一竿子打到对岸了，然后回过头一看，依然一天下来什么也没有。郁闷了，为什么捏？</p>
<blockquote>
<p>因为你喝醉了到人楼下去吼，想挨酒瓶子你得先知道这楼里还有没有住户啊，那楼都荒废十来年了，你吼一晚顶多冒个鬼出来吓吓你啊！</p>
</blockquote>
<p><img src="/img/20170101/zhaoyu.jpg" alt=""></p>
<p>然后,哥们明白了，路亚还有个关键，也是最要命的，<strong>找鱼！</strong> 你要知道那地方有没有鱼，有没有食肉鱼，在哪个水层，旁边有没有障碍导致你挂饵。</p>
<p>以上问题从发现到解决，几个月过去了，上论坛看视频找人带终于摸到路子了，碰到砸酒瓶的了。上鱼了！</p>
<p>这个时候你就又发现，初学者们在鱼出水那一瞬间不是用手去逮，一准要拿控鱼器夹着鱼嘴巴拉出水面。</p>
<p><img src="/img/20170101/yuhuo.jpg" alt=""></p>
<p>起来以后也一定是左手控鱼器扯鱼头，右手托着鱼的屁眼部平举，<strong>口含鱼竿</strong> 由同行的人拍照留念。然后把鱼平铺在地上，拿个宽40公分的大号软尺垫鱼下面展示尺寸，若没有尺子一定拿个矿泉水瓶子在旁边对比参照。</p>
<p><img src="/img/20170101/liangyu.jpg" alt=""></p>
<p>最后,末了特写鱼饵挂住鱼的位置，大部分照片都是看那鱼无辜的含着鱼饵上的三本钩，这个专业上叫 <strong>正口</strong>,一定要喊出来。</p>
<p><img src="/img/20170101/zhengkou.jpg" alt=""></p>
<p>其余的估计也不大会有人上图，譬如挂住鱼鳍啊，挂住屁股啊什么乱七八糟的部位，这个他们叫<strong>车祸</strong>。</p>
<p>如果水边干了一天除了丢十来个鱼饵什么也没有干到的，人叫<strong>打龟</strong>或者<strong>空军</strong>。</p>
<p><img src="/img/20170101/kongjun.jpg" alt=""></p>
<p>如果好久都没有钓到,就可以说是空军一号了！</p>
<h3 id="现在来讲讲顶级装逼者一般怎么搞"><a href="#现在来讲讲顶级装逼者一般怎么搞" class="headerlink" title="现在来讲讲顶级装逼者一般怎么搞?!"></a>现在来讲讲<strong>顶级装逼</strong>者一般怎么搞?!</h3><p><img src="/img/20170101/cheshang.jpg" alt=""></p>
<p>先你要明白一句话，<em>菜鸟爱扎堆，高手都独行。</em> 人不屑跟你讲什么，自己闷头搞就是。开个揽胜运动版，来到了水边，下车不着急取设备，先看，还拿望远镜看，看什么呢，看水流，看地形，看鱼的活跃程度；看完了还辨，辨天色，辨时间，辨风力。有的高手看辨，掉头开车就闪了。你问他为什么，答曰：”时候不对!”</p>
<p><img src="/img/20170101/cool.jpg" alt=""></p>
<p>时候对了又怎样捏，到后备箱拿出大号远征竿筒，打开里面顶级竿子轮子十来套，各种各样的线都有，旁边配以工具盒，里面你叫不出名的假饵100多尾，都是来自日本手工制作的，最便宜的也要150元一个。但是人就是放拿放着收藏的，不用，另外拿出个类似钱夹的东西，拉开一看，里面全10元一枚的国产亮片，问他为啥哟，答曰：“咱中国鱼，口糙，就吃这个。”</p>
<p><img src="/img/20170101/liangpian.jpg" alt=""></p>
<p>也不带涉水服，那是初学者跑不远，站水里提升距离的，人高手说了，大鱼经常就在眼皮下面，也不带帽子防晒什么的，傻逼才在水里站一天呢。</p>
<p>到岸边，穿线，上鱼饵，一系列动作一气呵成前后不到三分钟，先看准了位置，一个圈抛下去，也就10米不到，基本肉眼如果不是很好使，都看不见从哪入水的。</p>
<p>往回收线2米，竿尖一个剧烈的抖动，拉成新月状弧线，上鱼了。</p>
<p><img src="/img/20170101/zhongyu.png" alt=""></p>
<p>此刻一定要沉着，面无表情，千万不能暴露出一个月没有上鱼的兴奋，开始调整刹车，听这大鱼在水里攒劲拽线导致刹车发出的刺啦声。</p>
<p>时不时轻松的往回再收几圈，高手说这叫<strong>溜鱼</strong>，是那种一切尽在掌控的驾驭感，要把鱼最后一丝力气耗尽再出水，人玩得是境界。</p>
<p><img src="/img/20170101/liuyu.jpg" alt=""></p>
<p>拉了十分钟，鱼彻底服软了，随你拉吧，这个时候开始正式收线，出水了，人根本不用控鱼器什么的，直接轻松一带，鱼弹到岸边，取钩子。不拍照，尽管有一米来长，打死不拍，为什么呢，人几米的都搞过，一米朝上的根本不入流，跟只虾米一样。</p>
<p><img src="/img/20170101/fangsheng.jpg" alt=""></p>
<p>取完钩子，轻抚鱼背，拍拍头，轻轻放入水里，这叫 <strong>放流</strong>，是路亚倡导的从哪来往哪去，尽管嘴巴都扯的稀烂了，依然重复以上动作。才不像你们呢，10公分的鱼苗也抠里吧嗦的往家拿。</p>
<p><img src="/img/20170101/humian.jpg" alt=""></p>
<p>放完！站定，凝视湖面做沉思状，点一支小熊猫，抽一口，再深切的眺望夕阳，嘴角浮出一丝常人不易察觉的笑意。收竿，打火，走人！！！</p>
<blockquote>
<p>其实，说到路亚装逼。我个人最服的还是他！</p>
</blockquote>
<p><img src="/img/20170101/pj.jpg" alt=""><br><img src="/img/20170101/pj1.jpg" alt=""><br><img src="/img/20170101/pj2.jpg" alt=""></p>
<p><strong><font style="font-weight:bold;" color="red">声明</font>：文字原创非本人，但有稍作调整之处; 配图，为本人用心所为。以上图片均来自于网络！</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[谈谈用ASP.NET开发的大型网站有哪些架构方式]]></title>
      <url>http://cuiqingwei.github.io/2016/12/30/2016-12-30-%E7%94%A8ASP-NET%E5%BC%80%E5%8F%91%E7%9A%84%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%9C%89%E5%93%AA%E4%BA%9B%E6%9E%B6%E6%9E%84%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>在<a href="http://www.cnblogs.com/ms0017/archive/2011/07/26/2117676.html" target="_blank" rel="external">文章</a>里，列举了国内外用ASP.NET开发的大型网站有哪些。最后提到了用.NET开发的大型网站和LAMP/JAVA平台的成本比较。其实在很多时候，收费的不一定就比免费的成本更高。因为开发一个网站要使用哪个平台的技术更合适，需要考虑很多种情况（除了开发技术本身，还要考虑人工，开发效率，时间，后续的支持，维护等等），要综合计算成本才行。微软平台本身虽然是收费的，但总体的成本并非一定比LAMP/JAVA高，上篇文章列举的国内外的那么多基于ASP.NET开发的大型网站就是例证。尤其是在开发效率上，无论是C#开发语言，还是免费的开发工具（Visual Studio Express，或者MonoDevelop/SharpDevelop），.NET明显比其他两个平台更胜一筹。而这一点正是互联网企业所需要的。效率就是生产力。并且，由于有Mono (<a href="http://mono-project.org/" target="_blank" rel="external">http://mono-project.org/</a>) 这个开源平台的存在，.NET技术也可以在linux/BSD等开源服务器上使用。使.NET完全可以实现跨平台应用。据此，我们可以分Windows/Linux两种方式来架构我们的ASP.NET网站：</p>
<a id="more"></a>
<h1 id="一、Windows平台"><a href="#一、Windows平台" class="headerlink" title="一、Windows平台"></a>一、Windows平台</h1><p>在Windows平台下开发大型网站，很多人首先想到的是Microsoft软件高昂的许可费，觉得成本一定很高。其实，这里有个误区。我们开发ASP.NET网站，web服务器完全可以用Windows Werver的WEB版本Windows Web Server 2003/2008，它们并不贵，才3k多RMB。并且注意了，一个系统是一次性买，买了可以用N年，现在还有很多大型网站在用Win2003，想想已经用了多少年？而人员工资则是月付，几年下来成本也并不是很高。贵的地方，应该是SQLServer数据库和支持它的Windows Server企业版。它们确实很贵。但我们开发网站不一定非要用SQLServer啊。数据库可以使用在linux下部署mysql,postgresql等开源数据库，并且也可以考虑用mongodb等开源NOSQL数据库。一般的中大型网站有十几台web服务器就足够了(这里有2013年底的Stack Overflow服务器数据可参考),也就是3w多人民币而已啊！对于Stack Overflow这种规模的网站，这点钱应该也不算什么了吧。当然，如果你真能做到像myspace那种超大型的.NET网站，你应该可以直接找微软要优惠价来批量购买了。呵呵。</p>
<h1 id="二、Linux平台"><a href="#二、Linux平台" class="headerlink" title="二、Linux平台"></a>二、Linux平台</h1><p>如果真的不肯在服务器上花一分钱，就要用完全免费的。我劝你根本不必因此而放弃.NET强大的生产力，而选择其他平台，因为还有Mono。Mono现在已是suse,ubuntu,debian等linux发行版中的默认安装包(apt-get install mono-complete)，并且ubuntu本身就有很多代码是用c#写的。你可以通过类似Linux+Apache/Nginx+Mono的组合（或者用Jexus Web Server）来代替Windows+IIS来架构完全免费的ASP.NET WEB SERVER。目前国内外也有了很多基于mono开发的网站案例,如：<br><a href="http://www.stockren.com/" target="_blank" rel="external">http://www.stockren.com/</a><br><a href="http://www.msannu.cn/" target="_blank" rel="external">http://www.msannu.cn/</a><br>(此外，还有像Unity3D,Xamarin等更多国外知名公司在基于mono开发应用)</p>
<blockquote>
<p>在linux上架设mono的方法有很多，可以参考如下博文：<br>配置linux(apache) + mono 下运行 asp.net<br><a href="http://www.cnblogs.com/hcl0208/archive/2010/10/25/1860173.html" target="_blank" rel="external">http://www.cnblogs.com/hcl0208/archive/2010/10/25/1860173.html</a><br>Ubuntu10.10下Mono2.10+Nginx+fastcgi 部署asp.net网站<br><a href="http://www.cnblogs.com/xiaogangqq123/archive/2011/02/28/1967345.html" target="_blank" rel="external">http://www.cnblogs.com/xiaogangqq123/archive/2011/02/28/1967345.html</a></p>
</blockquote>
<h1 id="三、补充："><a href="#三、补充：" class="headerlink" title="三、补充："></a>三、补充：</h1><p>其实关于大型网站架构的文章网上有太多太多了。如下图，是国内某基于asp.net的大型网站的架构设计图，其实不管是.net还是java/LAMP，不管什么平台，道理都一样。</p>
<p><img src="http://pic002.cnblogs.com/images/2011/318793/2011110710022537.jpg" alt=""></p>
<p>在本架构图中，如果把IIS替换成apache,SqlServer替换成mysql，也一样成立。合理的架构是跟平台无关的。最看不惯的是某些业内所谓的高手，说大型网站用ASP.NET不行，没有JAVA/LAMP好。相信看了这个架构图，再想想 <strong>bing,hotmail,myspace,match,qidian,dangdang,m18,vancl</strong> 等等基于.net开发的大型网站案例，就应该闭上他们的嘴！大型网站的开发，人的能力和合理的架构才是关键所在！(<em>最近一个反例很能说明问题：用java开发的www.12306.cn相信大家都有目共睹。它是架构/人的能力的问题，还是语言/平台的问题？</em>)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于微软平台IIS/ASP.NET开发的大型网站有哪些?]]></title>
      <url>http://cuiqingwei.github.io/2016/12/30/2016-12-30-%E5%9F%BA%E4%BA%8E%E5%BE%AE%E8%BD%AF%E5%B9%B3%E5%8F%B0IIS-ASP-NET%E5%BC%80%E5%8F%91%E7%9A%84%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%9C%89%E5%93%AA%E4%BA%9B/</url>
      <content type="html"><![CDATA[<p>首先说明一下，本文绝不是要说Microsoft平台多么好，多么强。<br>只是要说明一下除了LAMP/JAVA平台，微软平台不至于像有些人说的，和想象的那么不堪！</p>
<a id="more"></a>
<p>下面一一列举几个:<br><a href="http://www.msn.com/" target="_blank" rel="external">http://www.msn.com/</a><br><a href="http://www.live.com/" target="_blank" rel="external">http://www.live.com/</a> (包括skydrive、hotmail等)<br><a href="http://www.bing.com/" target="_blank" rel="external">http://www.bing.com/</a></p>
<blockquote>
<p>根据comScore今年11月份的统计，微软网站已经超过雅虎、facebook成为仅此于Google的美国第二大网站。如果对这基于windows server/IIS/Asp.net构建的美国第二大网站，你们还说微软技术不能开发大型网站。那不觉得自己是在扯淡么？</p>
</blockquote>
<p><a href="http://www.godaddy.com/" target="_blank" rel="external">http://www.godaddy.com/</a> (全球最大域名注册商)<br><a href="http://www.MySpace.com/" target="_blank" rel="external">http://www.MySpace.com/</a><br><a href="http://www.match.com/" target="_blank" rel="external">http://www.match.com/</a> (世界最大婚恋网站)<br><a href="http://www.monster.com/" target="_blank" rel="external">http://www.monster.com/</a> (世界最大招聘网站,chinahr.com母公司)<br><a href="http://www.careerbuilder.com/" target="_blank" rel="external">http://www.careerbuilder.com/</a><br><a href="http://www.expedia.com/" target="_blank" rel="external">http://www.expedia.com/</a> (世界最大旅游网站,elong,kuxun母公司)<br><a href="http://www.newegg.com/" target="_blank" rel="external">http://www.newegg.com/</a><br><a href="http://www.buy.com/" target="_blank" rel="external">http://www.buy.com/</a><br><a href="http://www.pof.com/" target="_blank" rel="external">http://www.pof.com/</a><br><a href="http://www.ancestry.com/" target="_blank" rel="external">http://www.ancestry.com/</a> (世界最大的家谱网站,拥有全球最复杂的家谱tree)<br><a href="http://espn.go.com/" target="_blank" rel="external">http://espn.go.com/</a><br><a href="http://www.MSNBC.com/" target="_blank" rel="external">http://www.MSNBC.com/</a><br><a href="http://www.stackoverflow.com/" target="_blank" rel="external">http://www.stackoverflow.com/</a> (近两年火起来的技术问答网站,比Quora火的多啊)<br><a href="http://www.AngiesList.com/" target="_blank" rel="external">http://www.AngiesList.com/</a> (最近上市的美国著名点评网站)</p>
<blockquote>
<p>可能有人马上就能举出facebook,yahoo等国外大型网站来反驳我。尤其是对没落的myspace，更是嗤之以鼻。认为是使用微软技术的反面教材。其失败的原因之一就是因为用了微软技术做开发。但我想请问一下：当初myspace如日中天，为全球第一社交网站，facebook还未成气候时，你们当初有谁说它用了微软技术，将来就会失败？有谁说过？！且不说它失败的原因不是微软技术的错，相反，它使用微软技术，能做到上亿的用户，世界最大的社交网站。难道不更能说明微软技术的成功么？现在有多少大型网站能达到当初myspace的规模？屈指可数！并且，我相信如果它做到了现在 facebook的规模，用微软技术也能找到支撑的办法！</p>
</blockquote>
<p><a href="http://www.Dell.com/" target="_blank" rel="external">http://www.Dell.com/</a><br><a href="http://www.CA.com/" target="_blank" rel="external">http://www.CA.com/</a><br><a href="http://www.McAfee.com/" target="_blank" rel="external">http://www.McAfee.com/</a><br><a href="http://www.SAP.com/" target="_blank" rel="external">http://www.SAP.com/</a></p>
<blockquote>
<p>很多人看了肯定会说，这都是一些官网啊。又不是什么大型网站，有什么说服力。请注意了，Dell的官网可是电子商务—卖电脑的。CA, 迈克菲本身是安全领域的公司，SAP是全球顶级ERP提供商。他们为啥要用“安全性最差”的Microsoft技术开发其网站呢？不怕网站被黑了丢人？</p>
</blockquote>
<p><a href="http://www.360buy.com/" target="_blank" rel="external">http://www.360buy.com/</a> (京东商城)<br><a href="http://www.dangdang.com/" target="_blank" rel="external">http://www.dangdang.com/</a> (当当)<br><a href="http://www.vancl.com/" target="_blank" rel="external">http://www.vancl.com/</a> （凡客）<br><a href="http://www.m18.com/" target="_blank" rel="external">http://www.m18.com/</a> （麦考林）<br><a href="http://www.newegg.com.cn/" target="_blank" rel="external">http://www.newegg.com.cn/</a> (新蛋)<br><a href="http://www.yifu.com/" target="_blank" rel="external">http://www.yifu.com/</a><br><a href="http://www.letao.com/" target="_blank" rel="external">http://www.letao.com/</a> (乐淘)<br><a href="http://mall.sina.com.cn/" target="_blank" rel="external">http://mall.sina.com.cn/</a> (新浪商城)<br><a href="http://www.redbaby.com.cn/" target="_blank" rel="external">http://www.redbaby.com.cn/</a><br><a href="http://www.moonbasa.com/" target="_blank" rel="external">http://www.moonbasa.com/</a> (梦芭莎)<br><a href="http://www.no5.com.cn/" target="_blank" rel="external">http://www.no5.com.cn/</a><br><a href="http://www.99read.com/" target="_blank" rel="external">http://www.99read.com/</a><br><a href="http://www.coo8.com/" target="_blank" rel="external">http://www.coo8.com/</a> (库巴，国美旗下)<br><a href="http://www.yintai.com/" target="_blank" rel="external">http://www.yintai.com/</a><br><a href="http://www.5173.com/" target="_blank" rel="external">http://www.5173.com/</a><br><a href="http://www.b2b.cn/" target="_blank" rel="external">http://www.b2b.cn/</a><br><a href="http://www.Ftuan.com/" target="_blank" rel="external">http://www.Ftuan.com/</a><br><a href="http://www.dazhe.cn/" target="_blank" rel="external">http://www.dazhe.cn/</a><br><a href="http://www.tiantian.com/" target="_blank" rel="external">http://www.tiantian.com/</a></p>
<blockquote>
<p>相信很多人都认识到了这一点，国内大部分主流的大型电子商务网站都是用ASP.NET开发的。他们的流量，像360buy等虽然比不上taobao，但千万级的规模是肯定有的，绝对属于大型网站。其安全性，稳定性，性能等等，不比taobao差。</p>
</blockquote>
<p><a href="http://www.ips.com/" target="_blank" rel="external">http://www.ips.com/</a> (环迅支付)<br><a href="http://www.icbc.com.cn/" target="_blank" rel="external">http://www.icbc.com.cn/</a><br><a href="http://www.cmbchina.com/" target="_blank" rel="external">http://www.cmbchina.com/</a><br><a href="https://pbsz.ebank.cmbchina.com/CmbBank_GenShell/UI/GenShellPC/Login/Login.aspx" target="_blank" rel="external">https://pbsz.ebank.cmbchina.com/CmbBank_GenShell/UI/GenShellPC/Login/Login.aspx</a> (招商网银)<br><a href="http://www.95599.cn/" target="_blank" rel="external">http://www.95599.cn/</a><br><a href="https://easyabc.95599.cn/SlfRegPer/netBank/zh_CN/entrance/logon.aspx" target="_blank" rel="external">https://easyabc.95599.cn/SlfRegPer/netBank/zh_CN/entrance/logon.aspx</a> (农行网银)<br><a href="http://www.boc.cn/" target="_blank" rel="external">http://www.boc.cn/</a></p>
<blockquote>
<p>有人说银行的官网不是关键应用，但不知道网银是不是呢？</p>
</blockquote>
<p><a href="http://www.ctrip.com/" target="_blank" rel="external">http://www.ctrip.com/</a> (携程)<br><a href="http://www.elong.com/（艺龙）" target="_blank" rel="external">http://www.elong.com/（艺龙）</a><br><a href="http://www.lotour.com/" target="_blank" rel="external">http://www.lotour.com/</a><br><a href="http://www.17u.cn/" target="_blank" rel="external">http://www.17u.cn/</a><br><a href="http://www.uzai.com/" target="_blank" rel="external">http://www.uzai.com/</a></p>
<blockquote>
<p>主流的在线旅游/票务网站</p>
</blockquote>
<p><a href="http://www.sdo.com/" target="_blank" rel="external">http://www.sdo.com/</a> (盛大在线)<br><a href="http://www.qidian.com/" target="_blank" rel="external">http://www.qidian.com/</a> (起点中文网)<br><a href="http://www.58.com/" target="_blank" rel="external">http://www.58.com/</a> (58同城)<br><a href="http://www.hexun.com/" target="_blank" rel="external">http://www.hexun.com/</a> (和讯)<br><a href="http://www.mtime.com/" target="_blank" rel="external">http://www.mtime.com/</a><br><a href="http://www.yeshj.com/" target="_blank" rel="external">http://www.yeshj.com/</a><br><a href="http://www.eastmoney.com/" target="_blank" rel="external">http://www.eastmoney.com/</a><br><a href="http://www.stockstar.com/" target="_blank" rel="external">http://www.stockstar.com/</a><br><a href="http://feixin.10086.cn/" target="_blank" rel="external">http://feixin.10086.cn/</a> (中国移动飞信<a href="http://www.fetion.com.cn/" target="_blank" rel="external">http://www.fetion.com.cn/</a>)<br><a href="http://mail.10086.cn/" target="_blank" rel="external">http://mail.10086.cn/</a> (中国移动139邮箱)<br><a href="http://passport.189.cn/" target="_blank" rel="external">http://passport.189.cn/</a> （中国电信）<br><a href="http://www.cnblogs.com/" target="_blank" rel="external">http://www.cnblogs.com/</a><br><a href="http://www.csdn.net/" target="_blank" rel="external">http://www.csdn.net/</a><br><a href="http://www.chinahr.com/" target="_blank" rel="external">http://www.chinahr.com/</a><br><a href="http://www.zhaopin.com/" target="_blank" rel="external">http://www.zhaopin.com/</a> (智联招聘)<br><a href="http://www.soufun.com/" target="_blank" rel="external">http://www.soufun.com/</a> (搜房)<br><a href="http://www.dichan.com/" target="_blank" rel="external">http://www.dichan.com/</a> (新浪地产)<br><a href="http://nbadata.sports.qq.com/" target="_blank" rel="external">http://nbadata.sports.qq.com/</a> (腾讯NBA)<br><a href="http://www.autohome.com.cn/" target="_blank" rel="external">http://www.autohome.com.cn/</a> (汽车之家)<br><a href="http://www.bitauto.com/" target="_blank" rel="external">http://www.bitauto.com/</a><br><a href="http://www.39.net/" target="_blank" rel="external">http://www.39.net/</a><br><a href="http://3g.cn/" target="_blank" rel="external">http://3g.cn/</a></p>
<p>总之一句话，拿那些如：性能、安全、稳定、效率等等作为原因来攻击微软平台，是绝对站不住脚的！其实大家都心里清楚，ASP.NET和LAMP/JAVA相比，最大不同只不过是前者是收费的，而后者是开源免费的。仅此而已！</p>
<p>补充：<br>1、关于成本的讨论，可以看一下<a href="http://www.cnblogs.com/ms0017/archive/2011/08/17/Microsoft-NET-Mono-MySQL-MVC-Linux-Large-WebSite.html" target="_blank" rel="external">谈谈用ASP.NET开发的大型网站有哪些架构方式</a>。<br>2、相信很多人（包括我自己）都认为微软Windows在桌面OS上无敌，在服务器上不行，在服务器OS上Linux是老大。可惜事实却是：在服务器操作系统上Windows Server也是老大！这里有IDC对2009，2010两年服务器操作系统的市场份额统计，在最近两年里Windows在全球服务器OS的市场份额已经是第一，并且还在稳步上升中。<br><a href="http://blog.csdn.net/ms_net/article/details/6634295" target="_blank" rel="external">http://blog.csdn.net/ms_net/article/details/6634295</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GoAhead移植到OpenWRT]]></title>
      <url>http://cuiqingwei.github.io/2016/11/17/2016-12-15-GoAhead%E7%A7%BB%E6%A4%8D%E5%88%B0OpenWRT/</url>
      <content type="html"><![CDATA[<h1 id="make-menuconfig"><a href="#make-menuconfig" class="headerlink" title="make menuconfig"></a>make menuconfig</h1><p><img src="/img/20161215/menuconfig.jpg" alt=""><br><a id="more"></a></p>
<h1 id="ipk"><a href="#ipk" class="headerlink" title="ipk"></a>ipk</h1><p><img src="/img/20161215/goahead-ipk.jpg" alt=""></p>
<h1 id="run"><a href="#run" class="headerlink" title="run"></a>run</h1><p><img src="/img/20161215/openwrt.jpg" alt=""></p>
<h1 id="goahead运行效果"><a href="#goahead运行效果" class="headerlink" title="goahead运行效果"></a>goahead运行效果</h1><p><img src="/img/20161215/goahead2.5.jpg" alt=""></p>
<blockquote>
<p><a href="http://www.right.com.cn/forum/thread-203861-1-1.html" target="_blank" rel="external">http://www.right.com.cn/forum/thread-203861-1-1.html</a><br><a href="http://www.amobbs.com/thread-5665404-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-5665404-1-1.html</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Contiki-CC2538-CoAP]]></title>
      <url>http://cuiqingwei.github.io/2016/11/17/2016-11-17-Contiki-CC2538-CoAP/</url>
      <content type="html"><![CDATA[<div align="center"><br><iframe height="498" width="510" src="http://player.youku.com/embed/XMTgyNDA3NDAzNg==" frameborder="0" 'allowfullscreen'=""></iframe><br></div>

<a id="more"></a>
<h1 id="Mote1"><a href="#Mote1" class="headerlink" title="Mote1"></a>Mote1</h1><h3 id="build-rp-border-router"><a href="#build-rp-border-router" class="headerlink" title="build rp-border-router"></a>build rp-border-router</h3><p>cd ~<br>cd contiki/examples/ipv6/rpl-border-router</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/contiki/examples/ipv6/rpl-border-router$ git diff .</div><div class="line">diff --git a/examples/ipv6/rpl-border-router/border-router.c b/examples/ipv6/rpl</div><div class="line">index 90b1fdf..f7d565c 100644</div><div class="line">--- a/examples/ipv6/rpl-border-router/border-router.c</div><div class="line">+++ b/examples/ipv6/rpl-border-router/border-router.c</div><div class="line">@@ -54,7 +54,8 @@</div><div class="line"> #include &lt;string.h&gt;</div><div class="line"> #include &lt;ctype.h&gt;</div><div class="line">-#define DEBUG DEBUG_NONE</div><div class="line">+//#define DEBUG DEBUG_NONE</div><div class="line">+#define DEBUG DEBUG_PRINT</div><div class="line"> #include &quot;net/ip/uip-debug.h&quot;</div><div class="line"> static uip_ipaddr_t prefix;</div><div class="line">diff --git a/examples/ipv6/rpl-border-router/project-conf.h b/examples/ipv6/rpl-</div><div class="line">index ec3eb3f..1f4f8c9 100644</div><div class="line">--- a/examples/ipv6/rpl-border-router/project-conf.h</div><div class="line">+++ b/examples/ipv6/rpl-border-router/project-conf.h</div><div class="line">@@ -64,4 +64,7 @@</div><div class="line"> #define WEBSERVER_CONF_CFS_CONNS 2</div><div class="line"> #endif</div><div class="line">+//#define RF_CORE_CONF_CHANNEL    25</div><div class="line">+#define RF_CORE_CONF_CHANNEL    26</div><div class="line">+</div><div class="line"> #endif /* PROJECT_ROUTER_CONF_H_ */</div></pre></td></tr></table></figure>
<p>make TARGET=cc2538dk all</p>
<h3 id="program-cc2538-select-reset-on-CC2538DK"><a href="#program-cc2538-select-reset-on-CC2538DK" class="headerlink" title="program cc2538,(select + reset on CC2538DK)"></a>program cc2538,(select + reset on CC2538DK)</h3><p>../../../tools/cc2538-bsl/cc2538-bsl.py -v -e -w border-router.bin</p>
<h3 id="push-reset-button-see-console-print"><a href="#push-reset-button-see-console-print" class="headerlink" title="push reset button, see console print"></a>push reset button, see console print</h3><p>../../../tools/sky/serialdump-linux -b115200 /dev/ttyUSB0</p>
<h1 id="Mote2"><a href="#Mote2" class="headerlink" title="Mote2"></a>Mote2</h1><h3 id="build-er-rest-example"><a href="#build-er-rest-example" class="headerlink" title="build er-rest-example"></a>build er-rest-example</h3><p>cd ~<br>cd contiki/examples/er-rest-example<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/contiki/examples/er-rest-example$ git diff .</div><div class="line">diff --git a/examples/er-rest-example/project-conf.h b/examples/er-rest-example/project-conf.h</div><div class="line">index adcb75e..facd2fb 100644</div><div class="line">--- a/examples/er-rest-example/project-conf.h</div><div class="line">+++ b/examples/er-rest-example/project-conf.h</div><div class="line">@@ -40,25 +40,26 @@</div><div class="line"> #define __PROJECT_ERBIUM_CONF_H__</div><div class="line"></div><div class="line"> /* Custom channel and PAN ID configuration for your project. */</div><div class="line">-/*</div><div class="line">+</div><div class="line">    #undef RF_CHANNEL</div><div class="line">    #define RF_CHANNEL                     26</div><div class="line"></div><div class="line">    #undef IEEE802154_CONF_PANID</div><div class="line">    #define IEEE802154_CONF_PANID          0xABCD</div><div class="line">- */</div><div class="line">+</div><div class="line"> /* IP buffer size must match all other hops, in particular the border router. */</div><div class="line">-/*</div><div class="line">+</div><div class="line">    #undef UIP_CONF_BUFFER_SIZE</div><div class="line">    #define UIP_CONF_BUFFER_SIZE           256</div><div class="line">- */</div><div class="line">+</div><div class="line"> /* Disabling RDC and CSMA for demo purposes. Core updates often</div><div class="line">    require more memory. */</div><div class="line"> /* For projects, optimize memory and enable RDC and CSMA again. */</div><div class="line"> #undef NETSTACK_CONF_RDC</div><div class="line">-#define NETSTACK_CONF_RDC              nullrdc_driver</div><div class="line">+//#define NETSTACK_CONF_RDC              nullrdc_driver</div><div class="line">+#define NETSTACK_CONF_RDC              contikimac_driver</div><div class="line"> #undef RPL_CONF_MAX_DAG_PER_INSTANCE</div><div class="line"> #define RPL_CONF_MAX_DAG_PER_INSTANCE     1</div><div class="line">@@ -68,7 +69,8 @@</div><div class="line"> #define UIP_CONF_TCP                   0</div><div class="line"> #undef NETSTACK_CONF_MAC</div><div class="line">-#define NETSTACK_CONF_MAC     nullmac_driver</div><div class="line">+//#define NETSTACK_CONF_MAC     nullmac_driver</div><div class="line">+#define NETSTACK_CONF_MAC     csma_driver</div><div class="line"> /* Increase rpl-border-router IP-buffer when using more than 64. */</div><div class="line"> #undef REST_MAX_CHUNK_SIZE</div></pre></td></tr></table></figure></p>
<p>make TARGET=cc2538dk all</p>
<h3 id="program-cc2538-select-reset-on-CC2538DK-1"><a href="#program-cc2538-select-reset-on-CC2538DK-1" class="headerlink" title="program cc2538,(select + reset on CC2538DK)"></a>program cc2538,(select + reset on CC2538DK)</h3><p>../../../tools/cc2538-bsl/cc2538-bsl.py -p /dev/ttyUSB1 -v -e -w er-example-server.bin</p>
<h3 id="push-reset-button-see-console-print-1"><a href="#push-reset-button-see-console-print-1" class="headerlink" title="push reset button, see console print"></a>push reset button, see console print</h3><p>../../../tools/sky/serialdump-linux -b115200 /dev/ttyUSB1</p>
<h1 id="run-tunslip6"><a href="#run-tunslip6" class="headerlink" title="run tunslip6"></a>run tunslip6</h1><p>cd ~<br>cd contiki/examples/ipv6/rpl-border-router</p>
<p>sudo ../../../tools/tunslip6 aaaa::1/64 -s /dev/ttyUSB0</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">********SLIP started on ``/dev/ttyUSB0&apos;&apos;</div><div class="line">opened tun device ``/dev/tun0&apos;&apos;</div><div class="line">ifconfig tun0 inet `hostname` mtu 1500 up</div><div class="line">ifconfig tun0 add aaaa::1/64</div><div class="line">ifconfig tun0 add fe80::0:0:0:1/64</div><div class="line">ifconfig tun0</div><div class="line">tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  </div><div class="line">          inet addr:127.0.1.1  P-t-P:127.0.1.1  Mask:255.255.255.255</div><div class="line">          inet6 addr: fe80::1/64 Scope:Link</div><div class="line">          inet6 addr: aaaa::1/64 Scope:Global</div><div class="line">          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1</div><div class="line">          RX packets:0 errors:0 dropped:0 overruns:0 frame:0</div><div class="line">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</div><div class="line">          collisions:0 txqueuelen:500</div><div class="line">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</div><div class="line"></div><div class="line">*** Address:aaaa::1 =&gt; aaaa:0000:0000:0000</div><div class="line">Got configuration message of type P</div><div class="line">Setting prefix aaaa::</div><div class="line">created a new RPL dag</div><div class="line">Server IPv6 addresses:</div><div class="line"> aaaa::212:4b00:5af:8444</div><div class="line"> fe80::212:4b00:5af:8444</div></pre></td></tr></table></figure>
<h1 id="ping6"><a href="#ping6" class="headerlink" title="ping6"></a>ping6</h1><p>ping6 aaaa::212:4b00:5af:84e0</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">PING aaaa::212:4b00:5af:84e0(aaaa::212:4b00:5af:84e0) 56 data bytes</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=1 ttl=63 time=1013 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=2 ttl=63 time=126 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=3 ttl=63 time=126 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=4 ttl=63 time=126 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=5 ttl=63 time=125 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=6 ttl=63 time=120 ms</div></pre></td></tr></table></figure>
<h1 id="firefox"><a href="#firefox" class="headerlink" title="firefox"></a>firefox</h1><p><img src="/img/20161117/coap1.png" alt=""><br><img src="/img/20161117/coap2.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Contiki-CC2538]]></title>
      <url>http://cuiqingwei.github.io/2016/11/09/2016-11-09-Contiki-CC2538/</url>
      <content type="html"><![CDATA[<h1 id="InstantContiki3-0-for-CC2538dk"><a href="#InstantContiki3-0-for-CC2538dk" class="headerlink" title="InstantContiki3.0 for CC2538dk"></a>InstantContiki3.0 for CC2538dk</h1><p>继 <strong>2013</strong> 年<a href="http://www.amobbs.com/thread-5515866-1-1.html" target="_blank" rel="external">InstantContiki2.6 for cc2530dk</a>,再写个关于<strong>cc2538dk</strong>的。</p>
<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ol>
<li>下载安装预装有Contiki的 <em>InstantContiki3.0</em> Ubuntu虚拟机</li>
</ol>
<ul>
<li>可参考 -&gt;<a href="http://www.amobbs.com/thread-5515866-1-1.html" target="_blank" rel="external">InstantContiki2.6 for cc2530dk</a></li>
<li>也可见官网 -&gt; <a href="http://www.contiki-os.org/start.html" target="_blank" rel="external">http://www.contiki-os.org/start.html</a></li>
</ul>
<ol>
<li>安装驱动，一般插上板子后会自动安装（无非cp210x、pl2303、ft232、ch341），可以通过以下命令查看：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ lsusb</div></pre></td></tr></table></figure>
</li>
</ol>
<p>一般会得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/contiki$ lsusb</div><div class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</div><div class="line">Bus 002 Device 014: ID 10c4:ea60 Cygnal Integrated Products, Inc. CP210x UART Bridge / myAVR mySmartUSB light</div><div class="line">Bus 002 Device 013: ID 0e0f:0008 VMware, Inc.</div><div class="line">Bus 002 Device 003: ID 0e0f:0002 VMware, Inc. Virtual USB Hub</div><div class="line">Bus 002 Device 002: ID 0e0f:0003 VMware, Inc. Virtual Mouse</div><div class="line">Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="cc2538demo"><a href="#cc2538demo" class="headerlink" title="cc2538demo"></a><strong>cc2538demo</strong></h1><p>官方原网址：<br><a href="https://github.com/contiki-os/contiki/blob/master/platform/cc2538dk/README.md" target="_blank" rel="external">https://github.com/contiki-os/contiki/blob/master/platform/cc2538dk/README.md</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/contiki/examples/cc2538dk</div><div class="line">make</div></pre></td></tr></table></figure>
<h1 id="下载烧录-cc2538-demo-bin"><a href="#下载烧录-cc2538-demo-bin" class="headerlink" title="下载烧录 cc2538-demo.bin"></a>下载烧录 cc2538-demo.bin</h1><p><img src="/img/20161109/contiki4.png" alt=""></p>
<p>所用工具</p>
<ul>
<li><a href="http://www.ti.com/tool/flash-programmer" target="_blank" rel="external">SmartRF Flash Programmer 2</a></li>
<li><a href="http://www.ghostyu.com/product/41" target="_blank" rel="external">XDS110-Lite</a></li>
</ul>
<p>可以在window下通过smartRF Flash programmer 2来下载border-router.bin文件到cc2538中</p>
<p><img src="/img/20161109/contiki0.png" alt=""></p>
<p>也可以在Linux下通过串口bootloader安装border-router.elf，其中波特率要设置为115200,8N1。<br>如果想通过串口直接下载，需要手动的设置使能 bootloader，然后使用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ makecc2538-demo.upload</div></pre></td></tr></table></figure>
<p>对于官方demo板的方法：按住select键，并复位板子。</p>
<p>另外，通过make cc2538-demo.lst 可以看到编译的信息，有助于调试代码。</p>
<h1 id="串口打印"><a href="#串口打印" class="headerlink" title="串口打印"></a>串口打印</h1><p>由于linux中换行以 <strong>\n</strong> 结尾（用minicom的可忽略）。而windows以 <strong>\r\n</strong> 结尾，在Windows中调试例程需要修改串口调试工具中的设置。</p>
<p>例如 <strong>putty</strong> 中,[ <strong>\n</strong> 转换为 <strong>\r\n</strong> ]修改设置见下图：</p>
<p><img src="/img/20161109/contiki1.png" alt=""></p>
<p>当然，还有最爱 <strong>SecureCRT</strong> 设置如下：</p>
<p><img src="/img/20161109/contiki2.png" alt=""></p>
<h1 id="rpl-border-router-边界路由器"><a href="#rpl-border-router-边界路由器" class="headerlink" title="rpl-border-router 边界路由器"></a><strong>rpl-border-router</strong> 边界路由器</h1><h3 id="1-编译"><a href="#1-编译" class="headerlink" title="1.编译"></a>1.编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/contiki/examples/ipv6/rpl-border-router</div><div class="line">make TARGET=cc2538dk</div></pre></td></tr></table></figure>
<p>##3 2.节点IEEE/RIME/IPv6地址</p>
<p>节点一般会根据它们的IEEE地址（MAC地址）来确定它们的IPV6地址，这个IEEE地址可能直接从cc2538的info页读取到，也可以通过硬编码得到，用户可以在编译的时候定义一个2字节的的值，这个值将用于IEEE地址的两个最低有效位。</p>
<p>设置IEEE地址来源——info页或者硬编码，可以通过定义 <strong>~/contiki/platform/cc2538dk/contiki-conf.h</strong> 中的 <strong>IEEE_ADDR_CONF_HARDCODED</strong> 设定<br><em>如果为0</em> ——从info页中得到；<br><em>如果为1</em> ——从硬编码中得到，即从IEEE_ADDR_CONF_ADDRESS得到。</p>
<p>当然，也可以重新定义IEEE的最低两位地址，通过：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ make NODEID=0x8888</div></pre></td></tr></table></figure>
<p>此外，还可以设置使不同的节点具有不同的IEEE地址。<strong>IPv6中MAC地址不可以重复</strong>！</p>
<h3 id="3-测试ipv6-border-router"><a href="#3-测试ipv6-border-router" class="headerlink" title="3.测试ipv6 border router"></a>3.测试ipv6 border router</h3><p>（1）修改border-router.c</p>
<p>将#define DEBUG <em>DEBUG_NONE</em> 改为 #define DEBUG <strong>DEBUG_PRINT</strong></p>
<p>（2）在project-conf.h中定义了UIP的最大缓冲值（UIP_CONF_BUFFER_SIZE），可以将它改为更大或删除这句话，从而允许更多的的值。</p>
<p>（3）编译：<strong>make TARGET=cc2538dk</strong>，<em>因为不是在cc2538的工程中编译，所以需要加上目标平台</em>。</p>
<p>（4）下载烧录，参考上面。</p>
<p>（5）编译<a href="http://blog.csdn.net/gulansheng/article/details/43062191" target="_blank" rel="external">tunslip6</a>,测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd  ~/contiki/tools/</div><div class="line">make tunslip6</div><div class="line">sudo ./tunslip6 aaaa::1/64 -s /dev/ttyUSB0</div></pre></td></tr></table></figure>
<p>执行后，不出意外的话看到router的IPV6地址：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/contiki/tools$ sudo ./tunslip6 aaaa::1/64 -s /dev/ttyUSB0</div><div class="line">[sudo] password for user:</div><div class="line">********SLIP started on ``/dev/ttyUSB0&apos;&apos;</div><div class="line">opened tun device ``/dev/tun0&apos;&apos;</div><div class="line">ifconfig tun0 inet `hostname` mtu 1500 up</div><div class="line">ifconfig tun0 add aaaa::1/64</div><div class="line">ifconfig tun0 add fe80::0:0:0:1/64</div><div class="line">ifconfig tun0</div><div class="line">tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  </div><div class="line">          inet addr:127.0.1.1  P-t-P:127.0.1.1  Mask:255.255.255.255</div><div class="line">          inet6 addr: fe80::1/64 Scope:Link</div><div class="line">          inet6 addr: aaaa::1/64 Scope:Global</div><div class="line">          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1</div><div class="line">          RX packets:0 errors:0 dropped:0 overruns:0 frame:0</div><div class="line">          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</div><div class="line">          collisions:0 txqueuelen:500</div><div class="line">          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</div><div class="line">*** Address:aaaa::1 =&gt; aaaa:0000:0000:0000</div><div class="line">Got configuration message of type P</div><div class="line">Setting prefix aaaa::</div><div class="line">created a new RPL dag</div><div class="line">Server IPv6 addresses:</div><div class="line"> aaaa::212:4b00:5af:84e0</div><div class="line"> fe80::212:4b00:5af:84e0</div></pre></td></tr></table></figure>
<p>（6）通信测试</p>
<p><strong>Ping6</strong> 测试</p>
<p><em><font color="red">ping6 aaaa::212:4b00:5af:84e0</font></em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/6lbr/examples/cc2538dk$ ping6 aaaa::212:4b00:5af:84e0</div><div class="line">PING aaaa::212:4b00:5af:84e0(aaaa::212:4b00:5af:84e0) 56 data bytes</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=1 ttl=64 time=21.1 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=2 ttl=64 time=21.5 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:84e0: icmp_seq=3 ttl=64 time=21.1 ms</div></pre></td></tr></table></figure>
<p>打开浏览器，地址栏输入 <a href="http://[aaaa::212:4b00:5af:84e0]/" target="_blank" rel="external">http://[aaaa::212:4b00:5af:84e0]/</a> 网页访问测试：</p>
<h3 id="节点联网"><a href="#节点联网" class="headerlink" title="节点联网"></a>节点联网</h3><p>（1）编译，下载烧录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/contiki/examples/webserver-ipv6</div><div class="line">make TARGET=cc2538dk NODEID=&lt;value&gt;</div></pre></td></tr></table></figure>
<p>（2）查看</p>
<p>打开浏览器，地址栏输入 <a href="http://[aaaa::212:4b00:5af:84e0]/" target="_blank" rel="external">http://[aaaa::212:4b00:5af:84e0]/</a> 查看节点：</p>
<p>Neighbors<br>fe80::212:4b00:5af:8444<br>Routes<br><strong>aaaa::212:4b00:5af:8444</strong> /128 (via fe80::212:4b00:5af:8444) 1792s</p>
<p><img src="/img/20161109/contiki5.png" alt=""></p>
<p>（3）ping6测</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/6lbr/examples/cc2538dk$ ping6 aaaa::212:4b00:5af:8444</div><div class="line">PING aaaa::212:4b00:5af:8444(aaaa::212:4b00:5af:8444) 56 data bytes</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=2 ttl=63 time=95.9 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=3 ttl=63 time=340 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=4 ttl=63 time=91.2 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=5 ttl=63 time=90.9 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=6 ttl=63 time=86.7 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=7 ttl=63 time=82.2 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=8 ttl=63 time=82.3 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=9 ttl=63 time=82.0 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=10 ttl=63 time=77.3 ms</div><div class="line">64 bytes from aaaa::212:4b00:5af:8444: icmp_seq=11 ttl=63 time=77.4 ms</div></pre></td></tr></table></figure>
<p>（4）也可 <strong>curl</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/6lbr/examples/cc2538dk$ curl -g http://[aaaa::212:4b00:5af:84e0]/</div><div class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;ContikiRPL&lt;/title&gt;&lt;/head&gt;&lt;body&gt;</div><div class="line">Neighbors&lt;pre&gt;fe80::212:4b00:5af:8444</div><div class="line">&lt;/pre&gt;Routes&lt;pre&gt;</div><div class="line">aaaa::212:4b00:5af:8444/128 (via fe80::212:4b00:5af:8444) 1773s</div></pre></td></tr></table></figure>
<p>（5）<strong>wget</strong> 下载 <em>index.html</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~/6lbr/examples/cc2538dk$ wget http://[aaaa::212:4b00:5af:84e0]/</div><div class="line">--2016-11-09 07:27:24--  http://[aaaa::212:4b00:5af:84e0]/</div><div class="line">Connecting to [aaaa::212:4b00:5af:84e0]:80... connected.</div><div class="line">HTTP request sent, awaiting response... 200 OK</div><div class="line">Length: unspecified [text/html]</div><div class="line">Saving to: ‘index.html’</div><div class="line"></div><div class="line">    [ &lt;=&gt;                                   ] 192         --.-K/s   in 0.1s    </div><div class="line"></div><div class="line">2016-11-09 07:27:24 (1.59 KB/s) - ‘index.html’ saved [192]</div></pre></td></tr></table></figure>
<p> （6）半导体芯片越做越小，性能越强悍；系统协议越精减，越精简优化。webserver跑在单芯片上也就不稀奇了！</p>
<p> <img src="/img/20161109/contiki6.png" alt=""><br> <img src="/img/20161109/contiki7.png" alt=""><br> <img src="/img/20161109/contiki8.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于Contiki-Cooja的6lbr模拟仿真]]></title>
      <url>http://cuiqingwei.github.io/2016/10/29/2016-10-29-%E5%9F%BA%E4%BA%8EContiki-Cooja%E7%9A%846lbr%E6%A8%A1%E6%8B%9F%E4%BB%BF%E7%9C%9F/</url>
      <content type="html"><![CDATA[<h1 id="Instant-Contiki-2-7"><a href="#Instant-Contiki-2-7" class="headerlink" title="Instant Contiki 2.7"></a>Instant Contiki 2.7</h1><p>下载、安装… 具体请查看链接-&gt;<a href="http://www.contiki-os.org/start.html" target="_blank" rel="external">http://www.contiki-os.org/start.html</a></p>
<h1 id="Java版本"><a href="#Java版本" class="headerlink" title="Java版本"></a>Java版本</h1><p>打开（<em>Ctrl+Alt+T</em>）超级终端，键入 <strong>java -version</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">user@instant-contiki:~$ java -version</div><div class="line">java version &quot;1.7.0_25&quot;</div><div class="line">OpenJDK Runtime Environment (IcedTea 2.3.10) (7u25-2.3.10-1ubuntu0.12.04.2)</div><div class="line">OpenJDK Client VM (build 23.7-b01, mixed mode, sharing)</div></pre></td></tr></table></figure>
<h1 id="安装网桥管理工具-bridge-utils-包"><a href="#安装网桥管理工具-bridge-utils-包" class="headerlink" title="安装网桥管理工具 bridge-utils 包"></a>安装网桥管理工具 <strong>bridge-utils</strong> 包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install bridge-utils</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="获取6lbr代码，初始化子模块"><a href="#获取6lbr代码，初始化子模块" class="headerlink" title="获取6lbr代码，初始化子模块"></a>获取<a href="http://cetic.github.com/6lbr" target="_blank" rel="external">6lbr</a>代码，初始化子模块</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone --recursive https://github.com/cetic/6lbr</div><div class="line">cd 6lbr/examples/6lbr</div></pre></td></tr></table></figure>
<h1 id="在6lbr源目录，执行以下命令："><a href="#在6lbr源目录，执行以下命令：" class="headerlink" title="在6lbr源目录，执行以下命令："></a>在6lbr源目录，执行以下命令：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make TARGET=native all</div><div class="line">make tools</div></pre></td></tr></table></figure>
<h1 id="启动一个-1-BR-COOJA-实例"><a href="#启动一个-1-BR-COOJA-实例" class="headerlink" title="启动一个 1-BR COOJA 实例"></a>启动一个 <strong>1-BR COOJA</strong> 实例</h1><p><font style="font-weight:bold;" color="red">警告：</font> 默认Instant Contiki 2.7环境中没有添加serial2pty插件，添加方法是：</p>
<ul>
<li>运行cooja</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/6lbr/tools/cooja</div><div class="line">ant run</div></pre></td></tr></table></figure>
<p>Settings -&gt; External tools paths… 添加<br><strong>;[CONTIKI_DIR]/tools/cooja/apps/serial2pty</strong></p>
<p><img src="/img/20161029/6lbr1.png" alt=""></p>
<p>设置完成后，关闭。运行下面命令，启动实例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd examples/6lbr/test</div><div class="line">make cooja-small</div></pre></td></tr></table></figure></p>
<p><img src="/img/20161029/6lbr2.png" alt=""></p>
<p>运行成功，console会输出如下结尾的信息，详见下图：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">INFO [main] (Serial2Pty.java:116) - serialpty;open;9;/dev/pts/11</div><div class="line">INFO [main] (Serial2Pty.java:116) - serialpty;open;10;/dev/pts/12</div><div class="line">INFO [main] (Serial2Pty.java:116) - serialpty;open;11;/dev/pts/13</div><div class="line">INFO [main] (Serial2Pty.java:116) - serialpty;open;12;/dev/pts/14</div></pre></td></tr></table></figure>
<p><img src="/img/20161029/6lbr3.png" alt=""></p>
<p>通过鼠标右击节点，也可打开其他节点的串口监控，如下图所示：</p>
<p><img src="/img/20161029/6lbr4.png" alt=""></p>
<h1 id="运行一个6lbr实例"><a href="#运行一个6lbr实例" class="headerlink" title="运行一个6lbr实例"></a>运行一个6lbr实例</h1><p>Cooja <em>Simulation control</em> 点击 <strong>Start</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd examples/6lbr/test</div><div class="line">sudo make launch-6lbr-router-1-cooja</div></pre></td></tr></table></figure>
<p>运行后，终端键入 <strong>ifconfig</strong> 会发现多了 <a href="/2015/07/06/2015-07-06-OpenWRT下ifconfig各接口说明">br0网桥接口</a></p>
<p><img src="/img/20161029/6lbr5.png" alt=""></p>
<p><strong>如果要避免重复输出</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Fetching MAC address</div><div class="line">Fetching MAC address</div></pre></td></tr></table></figure>
<p>可以</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/6lbr/examples/6lbr/test/conf-templates</div><div class="line">vi cooja-1-router.conf</div></pre></td></tr></table></figure>
<p>最后两行，指定日志写入 <strong>/var/log/6lbr.log</strong>，如下图所示：</p>
<p><img src="/img/20161029/6lbr6.png" alt=""></p>
<h1 id="访问6lbr-webserver-界面"><a href="#访问6lbr-webserver-界面" class="headerlink" title="访问6lbr webserver 界面"></a>访问6lbr <strong>webserver</strong> 界面</h1><p>打开浏览器，地址栏输入 <strong>[bbbb::100]</strong> 回车，看到如下界面就算成功了！</p>
<p><img src="/img/20161029/6lbr7.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用Travis CI、MkDocs自動部署Blog至GitHub Pages]]></title>
      <url>http://cuiqingwei.github.io/2016/10/27/2016-10-27-%E5%88%A9%E7%94%A8Travis-CI%E3%80%81MkDocs%E8%87%AA%E5%8B%95%E9%83%A8%E7%BD%B2Blog%E8%87%B3GitHub-Pages/</url>
      <content type="html"><![CDATA[<h1 id="技术要点"><a href="#技术要点" class="headerlink" title="技术要点"></a>技术要点</h1><h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p><a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a>免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。</p>
<h3 id="MkDocs"><a href="#MkDocs" class="headerlink" title="MkDocs"></a>MkDocs</h3><p><a href="http://markdown-docs-zh.readthedocs.io/zh_CN/latest/" target="_blank" rel="external">MkDocs</a>是一个用于创建项目文档的 快速, 简单 , 完美华丽 的静态站点生成器. 文档源码使用 Markdown 来撰写, 用一个 YAML 文件作为配置文档.</p>
<h3 id="Travis-CI"><a href="#Travis-CI" class="headerlink" title="Travis CI"></a>Travis CI</h3><p><a href="https://travis-ci.org/" target="_blank" rel="external">Travis CI</a>，是一个专门为开源项目打造的持续集成环境。<br>如果你有一个放在github上的开源项目，Travis CI简直就是一个完美的CI选择。<br><a id="more"></a></p>
<h1 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h1><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>源码存放处 <a href="https://github.com/cuiqingwei/iotknowledges" target="_blank" rel="external">https://github.com/cuiqingwei/iotknowledges</a><br>页面存放处 <a href="https://github.com/iotknowledges/iotknowledges.github.io" target="_blank" rel="external">https://github.com/iotknowledges/iotknowledges.github.io</a></p>
<font color="red">通过 <strong>Travis CI</strong> 部署的 <strong>MkDocs</strong> 环境将 <strong>iotknowledges</strong> 源码编译成静态页面并发布到 <strong>iotknowledges.github.io</strong></font>

<h3 id="1-创建一个GitHub-Pages"><a href="#1-创建一个GitHub-Pages" class="headerlink" title="1.创建一个GitHub Pages"></a>1.创建一个GitHub Pages</h3><p>  1.1 安装git工具<br>    <a href="http://windows.github.com/" target="_blank" rel="external">http://windows.github.com/</a><br>    <a href="http://mac.github.com/" target="_blank" rel="external">http://mac.github.com/</a></p>
<p>  1.2 两种pages模式</p>
<pre><code>① User/Organization Pages 个人或公司站点
  - 1) 使用自己的用户名，每个用户名下面只能建立一个；
  - 2) 资源命名必须符合这样的规则username/username.github.com；
  - 3) 主干上内容被用来构建和发布页面.
② Project Pages 项目站点
  - 1) gh-pages 分支用于构建和发布；
  - 2) 如果user/org pages使用了独立域名，那么托管在账户下的所有project pages将
       使用相同的域名进行重定向，除非project pages使用了自己的独立域名；
  - 3) 如果没有使用独立域名，project pages将通过子路径的形式提供服务username.github.com/projectname；
  - 4) 自定义404页面只能在独立域名下使用，否则会使用User Pages 404；
  - 5) 创建项目站点步骤：
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/USERNAME/PROJECT.git PROJECT</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div><div class="line">$ git add .</div><div class="line">$ git commit -a -m &quot;First pages commit&quot;</div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
</code></pre><p>  1.3. 可以通过User/Organization Pages建立主站，而通过Project Pages挂载二级应用页面。</p>
  <font color="blue">由于我是按照Organization名字命名的Pages，Repository名字是 <em>iotknowledges.github.io</em></font>

<p>  <img src="/img/20161027/github1.png" alt=""><br>  <img src="/img/20161027/github2.png" alt=""></p>
  <font color="blue"><strong>至此，Project Pages建立完成，用来存放MkDocs生成的静态页面！</strong></font>  

<h3 id="2-建立存放源码的Repository并关联Travis-CI"><a href="#2-建立存放源码的Repository并关联Travis-CI" class="headerlink" title="2. 建立存放源码的Repository并关联Travis CI"></a>2. 建立存放源码的Repository并关联Travis CI</h3><p>  2.1 创建iotknowledges</p>
<p>  登录GitHub，点击 <strong>New repository</strong> 新建即可，具体方法步骤多说！</p>
<p>  2.2 生成Token</p>
<p>  在GitHub账户的Settings里生成</p>
<p>  <img src="/img/20161027/github3.png" alt=""><br>  <img src="/img/20161027/github4.png" alt=""></p>
<h3 id="3-Travis-CI工程的Settings-添加环境变量"><a href="#3-Travis-CI工程的Settings-添加环境变量" class="headerlink" title="3. Travis CI工程的Settings,添加环境变量"></a>3. Travis CI工程的Settings,添加环境变量</h3><p>  登录 <a href="https://travis-ci.org/" target="_blank" rel="external">https://travis-ci.org/</a> 点击 <font color="green"> <strong>Sign in with GitHub</strong> </font> 用存放源码的github账号登录</p>
<p>  添加一个环境变量(Environment Variable)，命名为 <strong>GITHUB_API_KEY</strong> ，之后将刚刚生成的Token复制进去，这在之后会用到。接下来你还需要创建两个环境变量作为Push的身份，一个是你的名字，还有一个是你的邮箱，当然如果对邮箱和名字没什么隐私那不设置也可以。这两个变量可以分别命名为 <strong>GITHUB_EMAIL</strong> 和 <strong>GITHUB_NAME</strong>。GITHUB_NAME请务必注意设置成你Profile链接里的那个名字，即<a href="https://github.com/[user_name]这里这个值。设置完之后，注意要把下面那个“*Display" target="_blank" rel="external">https://github.com/[user_name]这里这个值。设置完之后，注意要把下面那个“*Display</a> value in build log<em>”关掉，否则这一安全措施就没用了。还有一点，记得把“</em>Build pull requests*”关掉，否则在有Pull Request的时候不论其是否合格都会自动将Pages更新。</p>
<p>  <img src="/img/20161027/github5.png" alt=""></p>
<h3 id="4-配置-travis-yml"><a href="#4-配置-travis-yml" class="headerlink" title="4. 配置.travis.yml"></a>4. 配置.travis.yml</h3><p>  由于MkDocs使用的是Python，所以先在文件开头加上：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">language: python</div><div class="line">python:</div><div class="line">-  3.5</div></pre></td></tr></table></figure>
<p>  这里我使用的是Python 3.5，如果有插件不兼容的话可以切换成2.7。之后是初始化设置：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">install:</div><div class="line">  - pip install mkdocs</div></pre></td></tr></table></figure>
<p>  接下来是构建：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">script:</div><div class="line">  - mkdocs build --clean</div></pre></td></tr></table></figure>
<p>  生成的最终网站会在site目录内，–clean参数保证构建的时候site文件夹内没有多余文件，否则可能会导致各种奇怪的问题。</p>
<p>  接下来就是最重要的部署环节了，脚本需要放在after_success阶段内：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">after_success:  |</div><div class="line">  if [ -n &quot;$GITHUB_API_KEY&quot; ]; then</div><div class="line">    cd &quot;$TRAVIS_BUILD_DIR&quot;</div><div class="line">    cd site</div><div class="line">    git init</div><div class="line">    git add .</div><div class="line">    git -c user.name=$GITHUB_NAME -c user.email=$GITHUB_EMAIL commit -m &quot;Auto Deployment&quot;</div><div class="line">    git push -f -q https://$GITHUB_NAME:$GITHUB_API_KEY@github.com/[user_name]/[repo_name] [branch]</div><div class="line">    cd &quot;$TRAVIS_BUILD_DIR&quot;</div><div class="line">  fi</div></pre></td></tr></table></figure>
<p>  首先上来先要保证 <strong>GITHUB_API_KEY</strong> 这个环境变量存在，之后进入到构建目录，再用相对位置进入构建好的site网站目录。接着就直接在本地创建一个repo，然后commit，push到需要的repo。注意[user_name]是repo所在的用户名，[repo_name]是GitHub Pages所在的repo。[branch]这里如果是用户或者Organization的GitHub Pages的话就填 master，如果是工程的GitHub Pages的话就填gh-pages。最后返回构建目录。</p>
<p>  由于push的时候有<font color="red"><strong>-f</strong></font>参数，GitHub上的历史都将被复写，并且因为我们是本地新创建的一个repo，所有历史都是空的，所以构建完成之后每次在GitHub上都只能看到一个commit ，如果成功的话，应该每次更新源码工程之后等一两分钟都能看到你自己在GitHub Pages所在的工程或者分支自动发送的commit，如果失败的话可以看一下下面完整的 <strong>.travis.yml</strong> 文件：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">language: python</div><div class="line">python:</div><div class="line">  -  3.5</div><div class="line">install:</div><div class="line">  - pip install mkdocs</div><div class="line">script:</div><div class="line">  - mkdocs build --clean</div><div class="line">after_success:  |</div><div class="line">  if [ -n &quot;$GITHUB_API_KEY&quot; ]; then</div><div class="line">    cd &quot;$TRAVIS_BUILD_DIR&quot;</div><div class="line">    cd site</div><div class="line">    git init</div><div class="line">    git add .</div><div class="line">    git -c user.name=$GITHUB_NAME -c user.email=$GITHUB_EMAIL commit -m &quot;Auto Deployment&quot;</div><div class="line">    git push -f -q https://$GITHUB_NAME:$GITHUB_API_KEY@github.com/iotknowledges/iotknowledges.github.io master</div><div class="line">    cd &quot;$TRAVIS_BUILD_DIR&quot;</div><div class="line">  fi</div></pre></td></tr></table></figure>
<ol>
<li><p>build 状态，提交代码后可以到 <a href="https://travis-ci.org/" target="_blank" rel="external">https://travis-ci.org/</a> 查看进度情况</p>
<p><img src="/img/20161027/github6.png" alt=""></p>
<p><a href="https://iotknowledges.github.io/" target="_blank" rel="external">https://iotknowledges.github.io/</a></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linkit-smart-7688-build]]></title>
      <url>http://cuiqingwei.github.io/2016/10/16/2016-10-16-linkit-smart-7688-build/</url>
      <content type="html"><![CDATA[<h1 id="linkit-smart-feed"><a href="#linkit-smart-feed" class="headerlink" title="linkit-smart-feed"></a>linkit-smart-feed</h1><p>This feeds holds the SDK wifi driver and the config/meta package for the LinkIt Smart 7688 (Duo)</p>
<h1 id="Build-the-firmware-from-sources"><a href="#Build-the-firmware-from-sources" class="headerlink" title="Build the firmware from sources"></a>Build the firmware from sources</h1><p>This section describes how to build the firmware for LinkIt Smart 7688 and LinkIt Smart 7688 Duo from source codes.<br><a id="more"></a></p>
<h3 id="Host-environment"><a href="#Host-environment" class="headerlink" title="Host environment"></a>Host environment</h3><p>The following operations are performed under a Ubuntu LTS 14.04.3 environment. For a Windows or a Mac OS X host computer, you can install a VM for having the same environment:</p>
<ul>
<li>Download Ubuntu 14.04.3 LTS image from <a href="http://www.ubuntu.com" target="_blank" rel="external">http://www.ubuntu.com</a></li>
<li>Install this image with VirtualBox (<a href="http://virtualbox.org" target="_blank" rel="external">http://virtualbox.org</a>) on the host machine. 50GB disk space reserved for the VM is recommanded</li>
</ul>
<h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h3><p>In the Ubuntu system, open the <em>Terminal</em> application and type the following commands:</p>
<ol>
<li><p>Install prerequisite packages for building the firmware:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install git g++ make libncurses5-dev subversion libssl-dev gawk libxml-parser-perl unzip wget python xz-utils</div></pre></td></tr></table></figure>
</li>
<li><p>Download OpenWrt CC source codes:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone git://git.openwrt.org/15.05/openwrt.git</div></pre></td></tr></table></figure>
</li>
<li><p>Prepare the default configuration file for feeds:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd openwrt</div><div class="line">$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure>
</li>
<li><p>Add the LinkIt Smart 7688 feed:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ echo src-git linkit https://github.com/MediaTek-Labs/linkit-smart-7688-feed.git &gt;&gt; feeds.conf</div></pre></td></tr></table></figure>
</li>
<li><p>Update the feed information of all available packages for building the firmware:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./scripts/feeds update</div></pre></td></tr></table></figure>
</li>
<li><p>Install all packages:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./scripts/feeds install -a</div></pre></td></tr></table></figure>
</li>
<li><p>Prepare the kernel configuration to inform OpenWrt that we want to build an firmware for LinkIt Smart 7688:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ make menuconfig</div></pre></td></tr></table></figure>
<p> <strong> Select the options as below: </strong></p>
<pre><code>- Target System: `Ralink RT288x/RT3xxx`
- Subtarget: `MT7688 based boards`
- Target Profile: `LinkIt7688`
</code></pre><p> <img src="/img/20161016/1.png" alt=""></p>
<p> Save and exit (<strong><font color="red">use the deafult config file name without changing it</font></strong>)</p>
</li>
</ol>
<ol>
<li><p>Start the compilation process:</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ make V=99</div></pre></td></tr></table></figure>
</li>
<li><p>After the build process completes, the resulted firmware file will be under <code>bin/ramips/openwrt-ramips-mt7688-LinkIt7688-squashfs-sysupgrade.bin</code>. Depending on the H/W resources of the host environment, the build process may <strong>take more than 2 hours</strong>.</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[路亚水滴轮的速比的选择]]></title>
      <url>http://cuiqingwei.github.io/2016/10/13/2016-10-13-%E8%B7%AF%E4%BA%9A%E6%B0%B4%E6%BB%B4%E8%BD%AE%E7%9A%84%E9%80%9F%E6%AF%94%E7%9A%84%E9%80%89%E6%8B%A9/</url>
      <content type="html"><![CDATA[<blockquote>
<p>大家在购买轮子时，估计很多人都是首先关注轮子的价格，再关注轮子的牌子、外观、线容量、轴承数等，然后在各论坛到处问“XX的轮怎样？用过的说说！”结果，最后听了一大堆意见后最终还是进了一个价格自己可以接受的轮而不管轮子怎样了；或者受一些钓友的影响，入了一个超出了预算的牌子轮子却不是最适合自己的；或者入了一个价格差不多，只是多了一个或几个轴承的杂牌三无轮子而其它质量极差。鲜少有人（特别是新人）关注轮子的齿轮转速比，或者有关注，但却不是先决条件。</p>
</blockquote>
<a id="more"></a>
<h3 id="在此抛砖引玉，聊聊轮子的转速比。"><a href="#在此抛砖引玉，聊聊轮子的转速比。" class="headerlink" title="在此抛砖引玉，聊聊轮子的转速比。"></a>在此抛砖引玉，聊聊轮子的转速比。</h3><p>转速比，通俗的来讲就是轮子的主副齿轮的转速比；例如6.3:1，意思就是：摇柄轴上的大齿轮转一圈，轮轴上的小齿轮就要转6.3圈。速比的设计除可以快速收线外，还有“四两拨千斤”的功能。大概可以这样理解：我用1牛的力来转把手，那么鱼要用出6.3牛的力才能不让我转动。<br>高转速比，可以快速收紧余线；中鱼时快速拉出障碍区；大水域快速搜索等有无可比拟的优势；但在控制一些硬饵泳姿时，或要求慢拖时，不如低转速比好控制。此外，转速比越高，同样拉力的情况下，摇起来就越费力；原因是高转速比把力量转换成高速，道理正如变速自行车一样。你别不相信，不用很大的鱼就让你发现，再多的轴承都是转不动了。（想象一下，你一定见过有人在溜鱼时做抽竿动作，为什么要做抽竿的动作呢？）<br>说到这里，大家每次钓鱼都在用到转速比，但你真正的了解过它吗？例如一些钓友在说操作手法时，“慢收+轻抖”。这个当中的“慢收”实在太笼统了。有些会说的具体一些，屁如“一秒转动一圈摇把”，还是没人具体意义；只有说到“我的轮子转速比是6.3:1，每秒转一圈摇把”才算是具体化。好，说到这里，我估计99.9%的人都不知自己转一圈摇把到底卷了多少线回来，也即是你的饵游动的速度是多少米每秒？</p>
<p>当然，实际钓鱼时也不用真的精确到零点几米每秒。只要粗略的知道，天长日久后，不管什么时候，需要什么速度，才最可能上鱼，已经深深的铬在你的潜意识里了。随便拿起一套装备，看看转速比就清楚自己该怎样操作了。</p>
<p>看似很复杂，其实也很简单。一般人的装备都不多，常见的轮子的转速比也就是那几个。以纺车轮为例，我的一个纺车转速比是6.2:1，线杯最大外径是40mm；2号尼龙线在绕线器转一圈时卷的线长度约为126mm(40<em>3.14),实测为130.8mm；摇把转一圈时收线约130</em>6.3=825mm；即0.825米；一米有多长大家总有个概念吧？经过这样一个计算，你是不是心里清楚自己的饵是“受伤的小鱼”还是“水中潜艇”呢？</p>
<blockquote>
<p><strong>摘要</strong>：进来有些朋友在网上询问关于双轴卷线器（水滴轮、鼓型轮）应该如何搭配竿子，速比快慢该如何选择的问题。关于选择双轴卷线器（水滴or鼓型轮）速比的常识进来有些朋友在网上询问关于双轴卷线器（水滴轮、鼓型轮）应该如何搭配竿子，速比快慢该如何选择的问题</p>
</blockquote>
<p><img src="/img/20161013/Lipless-Baits-Ready-to-Rock.jpg" alt=""></p>
<h3 id="何谓速比？何谓高速比？何谓低速比呢？"><a href="#何谓速比？何谓高速比？何谓低速比呢？" class="headerlink" title="何谓速比？何谓高速比？何谓低速比呢？"></a>何谓速比？何谓高速比？何谓低速比呢？</h3><p>通常速比标识的参数代表了：我们手柄摇一圈线杯转动几圈，例如：7.0：1那么就是手柄转动一圈线杯转动7圈。<br><strong>高速比、低速比：一般高速比低速比没有明显的界限，通常6.3：1（含）以下我们称为低速比，7.0：1以上的算作高速比。</strong><br>低速比的优势：通常职业钓手使用Swimbait、spinnerbait、crank、minnow时候会选择低速比轮子。因为在操控诸如上述所谓搜索饵时候，低速比可以更好更均匀的控制拟饵的回收速度，并且就我们通常所使用的浮水CRANK、水面popper等等在特定的时候也会去做一些点对点的攻击，并不是一味的大面积快速搜索。所以这个时候低速比的轮子就体现出了拟饵在局域水面上的优势，不至于手柄轻轻一动就窜出老远。<br>高速比的优势：高速比轮子的特点就是回收拟饵的速度较快，在作合的一瞬间具有相当的爆发力。这个特点刚好符合我们用jighead或Texas在障碍区里作钓中鱼时要强调刺鱼的爆发力和迅速将于带离标点的要求。所以在大多数钓手软虫作钓障碍区时都会选用较快速比的轮子。但是也有特殊情况，例如在重障碍的草区：通常唠叨中障碍的草区都会使用比较大号的jig，并且中鱼时难免会连鱼带草一起搂。类似于雷强。这个时候为保证轮子足够的绞力已经能容纳更多的强力钓线，在这种地方作钓JIGhead或者大型Texas时很多钓手会选用低速比的较大容线量轮子。<br>以上是双轴卷线器的最基本的实用的常识，但愿对于初学的朋友们会选择轮子时候会有所帮助。但是也不排除在一些特殊情况时候对于轮子的选择会遇到一些特殊的变化。这里我不多赘述。等到大家遇到了新的问题时候我们再共同探讨。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[常用路亚线的区别]]></title>
      <url>http://cuiqingwei.github.io/2016/10/13/2016-10-13-%E5%B8%B8%E7%94%A8%E8%B7%AF%E4%BA%9A%E7%BA%BF%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<h2 id="尼龙线"><a href="#尼龙线" class="headerlink" title="尼龙线"></a>尼龙线</h2><p>台钓中使用最多的也是尼龙线。尼龙的化工原料为PA，和PE一样是石油的下游产品。与PE不同的是，尼龙线一般为单股线，这种线的特点刚好与PE线相反。尼龙线的优点是由于有一定的延展性，抛投和中鱼的时候不易断线，由于生产技术已经发展了近70年的历史，成本低，产量大，相比PE线要便宜很多。最后一点是尼龙表面圆滑，对线环的磨损可以降到最低。</p>
<a id="more"></a>
<p>延展性同样也是尼龙线的缺点，在某些鱼讯轻微的场合，尼龙线不能及时将中鱼信号传达给钓手，从而失去最佳的起杆机会。另外，同样拉力的情况下，尼龙线比PE的线径更粗，从而影响路亚的抛投距离（<em>当然这个问题并不一定完全适用，需要根据具体的情况来，不过在高磅数的尼龙线与高磅数PE线做对比的话，高磅数的PE占些优势，因其相同的高磅数的线，高磅数PE线径更细一些，也就可以更加节省线杯的空间容下更多的线，并且线径也更细利于高磅数线的抛投</em>）。</p>
<p><img src="/img/20161013/fishing-line.jpg" alt=""></p>
<h2 id="PE线"><a href="#PE线" class="headerlink" title="PE线"></a>PE线</h2><p>PE线是指用多股化纤编织后浸胶制成的钓线，俗称编织线(BRAIDED OR CORD LINE)，最早见的就是“大力马”。<br>这种钓线的生产方式是：将多条微细纤维(如：达克龙纤维、功夫龙纤维或大力马纤维或其它聚乙烯化合物的PE纤维…等)以机器来编织而成，所以这种钓线的线体呈现纤维规则交叉的纹路，只要你将线体取出审视一番就可以清楚的发现其线体结构上的特色。<br>这种线的优点是，相同拉力的的情况下线径比尼龙要细很多，同样我们使用12磅的尼龙和12 磅的PE，因为PE的线径更细，能够抛投的更远。在实际钓场中，风力是影响路亚抛投距离的重要因素，PE同样因为相同拉力下线径更细的特点，能够将风阻的影响减小。除此之外，PE几乎没有延展性，在中鱼的时候能够在第一时间将信号传达给钓手。还有就是PE线更加耐磨。<br>但正像所有事物都有其两面性一样，PE并不是没有任何缺点。PE第一个缺点是没有延展性。这个特性在能够将中鱼信号迅速传达给钓手的同时，也经常导致跑鱼或放枪。玩过台钓的朋友都知道，中鱼后钓竿上要保持一定的力量，鱼才不易脱钩，杆软不易断线跑鱼，但是起鱼慢；杆硬起鱼快，但是容易断线跑鱼。同样，你可以把线看作杆的延伸，鱼线有一定的延展性，就像钓竿比较软一样，能够保证在鱼左冲右突的时候始终保持一定的力量，而PE就像比较硬的杆，遛鱼的余地比较小从而导致脱钩或断线。另外现在有厂家为了使用更细的线径达到更强的拉力，在PE中掺加金属丝，虽然拉力得到了加强，但是线的延展性和柔软度进一步降低，同时还容易磨损导环。</p>
<h2 id="碳线（氟碳线）"><a href="#碳线（氟碳线）" class="headerlink" title="碳线（氟碳线）"></a>碳线（氟碳线）</h2><p>碳线是由含有氟和碳成分的树脂抽丝加工而成，碳线的特性是高比重、切水快、光的折射率非常低几乎看不到，没有吸水性，抗紫外线和耐久性要比尼龙线强很多，因为碳线的物理特性为非常低的延展性和高比重，可以让饵迅速到达所需要的水层，并且因延展性很低所以也就提供了良好的灵敏度。因碳线对光的折射率几乎为0，所以会降低鱼的敏感性，让鱼能放心的将饵食入口中。碳线适合搭配软饵钓组使用，比如：无铅钓组、WACKY、德州钓组，却不太适合搭配某一些特殊的硬饵或水面系的路亚。不过碳线也不是没有缺点，因为通常比较硬（特别是高磅数的碳线），如果作为主线使用要注意纺车轮上建议使用的主线不要超过10磅，水滴轮或鼓轮如有特殊需要最好也不要超过20磅（当然特殊情况下可以用到更高的磅数作为主线，并不是完全不可以），碳线也可以当做前导线来使用，因为碳线比较耐磨，可以搭配PE线，弥补PE不耐磨的缺点。</p>
<p><img src="/img/20161013/钓线攻略.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何选择一根适合自己的BASS竿]]></title>
      <url>http://cuiqingwei.github.io/2016/10/13/2016-10-13-%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E4%B8%80%E6%A0%B9%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E7%9A%84BASS%E7%AB%BF/</url>
      <content type="html"><![CDATA[<blockquote>
<p>随着路亚钓法的日益增温，人们对于路亚钓的了解也渐渐深入，随之而来的就是对钓具方面的需求更加的细化和理性，但是对于路亚之类舶来钓法，虽然大家对于路亚竿的基本情况有所了解，还是有很多地方对于入门的童鞋们来讲还是有些无所适从，特别是大嘴黑鲈钓法中对于钓竿的选择上往往会出现一些迷茫和误解，并且有时候还会因为不太了解BASS竿的特性而造成不必要的花销，下面我们就搜集了一些资料与大家探讨和参考，希望能对大家有所帮助。</p>
</blockquote>
<h1 id="BASS竿的整体分类"><a href="#BASS竿的整体分类" class="headerlink" title="BASS竿的整体分类"></a>BASS竿的整体分类</h1><h3 id="关于Bass竿的硬度（POWER）"><a href="#关于Bass竿的硬度（POWER）" class="headerlink" title="关于Bass竿的硬度（POWER）"></a>关于Bass竿的硬度（POWER）</h3><p>BASS竿分为直柄竿与枪柄竿，直柄竿需搭配纺车轮，枪柄竿搭配鼓轮或水滴轮。<br>通常直柄竿的硬度从UL-MH，枪柄竿的硬度从L-XXH。从抛投的角度来说，枪柄竿不适合抛投重量特别轻的拟饵，但由于适合抛投微物的水滴轮出现，枪柄竿已经可以顺利抛投1克左右的钓组。</p>
<h4 id="路亚竿硬度（POWER）的表示方式："><a href="#路亚竿硬度（POWER）的表示方式：" class="headerlink" title="路亚竿硬度（POWER）的表示方式："></a>路亚竿硬度（POWER）的表示方式：</h4><p><img src="/img/20161013/路亚竿硬度.png" alt=""><br><img src="/img/20161013/power-action-chart.png" alt=""></p>
<h3 id="关于Bass竿的调性（ACTION）"><a href="#关于Bass竿的调性（ACTION）" class="headerlink" title="关于Bass竿的调性（ACTION）"></a>关于Bass竿的调性（ACTION）</h3><p>很多路亚爱好者在路亚竿调性的理解上存在着误区，大家通常认为Bass竿的硬度如M、MH等就是鱼竿的调性，其实不然。鱼竿的调性代表鱼竿曲线变化，从S到F表示鱼竿在适当受力后的弯曲点越来越靠近竿梢。<br>调性越快的Bass竿鱼讯和操竿动作的传导越直接明确，但竿身的缓冲能力越差、越容易断线或脱钩。相反调性越慢的Bass竿，它的缓冲能力越好，但传达受力状况和控线动态的能力越差。另外调性也会影响钓组的抛投，一般而言调性越快越适合抛轻的钓组。而越重的钓组越适合慢调Bass竿抛投。<br>慢调路亚竿弯曲点在鱼竿的中后部，依靠鱼竿的整体受力发力，因此鱼竿的整体感觉比较柔和。通常“1 / 9调”和“2 / 8调”的Bass竿通称为快调（Fast Action），“3 / 7调”的Bass竿通称为中调（Medium Action），“4 / 6调”和“5 / 5调”的Bass竿通称为慢调（Through Action）。在使用软饵钓组中，为了精准捕捉鱼讯和细腻操控拟饵，一般使用快调Bass竿。使用硬饵钓组更多是为追求泳姿表现，或在小范围内呈现大幅度动作，通常使用慢调Bass竿。泛用型Bass竿或有抛投要求的Bass竿一般为中调。<br>选择什么调性的Bass竿通常是由使用的钓法、钓组决定。慢调路亚竿在控饵时可充分消减鱼饵在水中振动带来的阻力，竿子比较有粘性中鱼后可以充分享受与鱼搏斗带来的快感。由于慢调的鱼竿感度偏低，因此多用在使用三本钩的硬饵钓组上。快调路亚竿由于感度较高，通常用于使用单钩的软饵钓组。</p>
<p><img src="/img/20161013/blanks_action-NEW.gif" alt=""></p>
<h4 id="路亚竿调性（ACTION）的表示方式："><a href="#路亚竿调性（ACTION）的表示方式：" class="headerlink" title="路亚竿调性（ACTION）的表示方式："></a>路亚竿调性（ACTION）的表示方式：</h4><p><img src="/img/20161013/路亚竿调性.png" alt=""></p>
<h4 id="不同调性Bass竿特性不同，选择搭配合适的推荐钓组如下："><a href="#不同调性Bass竿特性不同，选择搭配合适的推荐钓组如下：" class="headerlink" title="不同调性Bass竿特性不同，选择搭配合适的推荐钓组如下："></a>不同调性Bass竿特性不同，选择搭配合适的推荐钓组如下：</h4><p><img src="/img/20161013/调性配钓组.png" alt=""><br><img src="/img/20161013/fishing-rod-action.gif" alt=""></p>
<h1 id="软饵竿和硬饵竿特性介绍"><a href="#软饵竿和硬饵竿特性介绍" class="headerlink" title="软饵竿和硬饵竿特性介绍"></a>软饵竿和硬饵竿特性介绍</h1><blockquote>
<p>Bass钓的拟饵主要分为软饵与硬饵，软饵与硬饵在水中呈现方式的不同，决定不同的钓组选择搭配不同的Bass竿。软饵通常搭配单钩，硬饵通常搭配三本钩，这也是选择快慢调Bass竿的一个重要因素。</p>
</blockquote>
<h2 id="软饵竿通常调性偏快，主要原因如下："><a href="#软饵竿通常调性偏快，主要原因如下：" class="headerlink" title="软饵竿通常调性偏快，主要原因如下："></a>软饵竿通常调性偏快，主要原因如下：</h2><h3 id="感度高"><a href="#感度高" class="headerlink" title="感度高"></a>感度高</h3><p>软饵与硬饵最大的不同就是软饵需要以更自然的方式将饵呈现在鱼的眼前，以降低鱼的警惕从而对软饵发起攻击。这时我们就需要感知度较高的软饵竿进行操控才能随心所欲地控制软饵动作，并且了解它在水下的情况。对于好的钓手而言，软饵钓组在水底每一次触碰都能清楚的反应到钓手的头脑之中。感度好的软饵竿更容易察觉目标鱼的轻微咬口。在使用软饵作钓的时候，我们通常以较慢的过程去操控它，以求软饵在水下呈现最自然的状态，此时也通常是目标鱼发动攻击之时。由于环境等众多因素，我们作钓的时候经常会遇到低活性鱼，他们在对饵发动攻击的时候一般都不是那么凶猛，不宜让钓手察觉，所以我们就需要感度好的快调软饵竿进行作钓。</p>
<h3 id="刺鱼得力"><a href="#刺鱼得力" class="headerlink" title="刺鱼得力"></a>刺鱼得力</h3><p>我们在使用软饵作钓时，都希望软饵搭配的单钩在作合刺鱼的一瞬间能钉牢鱼的口腔，这样才不易跑鱼，快调软饵竿更容易做到这一点。举个例子，假如我们在使用快调竿作合刺鱼时，理论上鱼钩一端本应有1米的刺鱼位移，实际情况下我们可能会获得0.8米的刺鱼位移，这样才能使上力直至刺破鱼的上膛。但若使用慢调竿用同样的幅度作合刺鱼时，由于鱼竿调性偏慢，无形之中会削弱我们在这过程之中所做的功和机械能，本应有1米的刺鱼位移，事实上可能还不到0.5米，甚至更少，这样我们所使用的单钩就不容易发挥最大功效并刺破鱼嘴，从而导致跑鱼。</p>
<h3 id="抛投精确"><a href="#抛投精确" class="headerlink" title="抛投精确"></a>抛投精确</h3><p>我们在使用软饵作钓的时候需要对标点的精确打击，一支调性较快的钓竿有利于精确地抛投。在使用软饵作钓的时候，我们使用Pitching（荡抛）的频率往往要高于其他任何一种抛投。因为我们想准确的打击标点，这样才能有最好的钓获。一根竿身较挺/调性较快的软饵竿有利于我们寻找这种对软饵精确抛投的感觉，这应该是每一位钓手都想要的。</p>
<h2 id="提高感度，减少操控硬饵的强度"><a href="#提高感度，减少操控硬饵的强度" class="headerlink" title="提高感度，减少操控硬饵的强度"></a>提高感度，减少操控硬饵的强度</h2><p>硬饵（尤其是Crankbait等摆动幅度较大的硬饵）在水中有比较大的摆动幅度或较高的摆动频率，传导到钓竿上会产生很高的振动频率或很大的水阻力。一支慢调硬饵竿能够有效的减缓这一现象，让你在操控硬饵时更轻松，并提高感度。</p>
<h3 id="减小冲击力"><a href="#减小冲击力" class="headerlink" title="减小冲击力"></a>减小冲击力</h3><p>我们在使用硬饵中鱼的时候，饵上的三本钩有时刺的不是那么牢固，这时就需要较慢调性的钓竿来操控硬饵了。因为较慢的调性，在刺鱼瞬间以及鱼在水下挣扎之时可减小外部所带来的冲击力，这样可以避免遭受硬力导致脱钩。</p>
<h3 id="利于远投"><a href="#利于远投" class="headerlink" title="利于远投"></a>利于远投</h3><p>很多时候我们使用硬饵搜索岸边，在很多情况下我们依旧需要把硬饵远投才能获得理想的钓获。例如在炎热的夏季使用深水Crankbait，我们必须给饵留出下潜所需的一定距离直至设定泳层，让饵尽可能长的游动在设定泳层里，这样上鱼的几率会大大的增加，所以这时我们需要远投性能好的钓竿。若远投性能不好，饵刚扔出去没还有收到设定的泳层就已经到我们的脚边上了，那样就不会有很好的效果。调性偏慢的钓竿腰弹性较大，更利于抛投更远的距离。</p>
<h1 id="七种武器"><a href="#七种武器" class="headerlink" title="七种武器"></a>七种武器</h1><blockquote>
<p>Bass竞技比赛中常用的钓组有Crankbait，Rubber jig，Jerkbait，无铅，倒吊，Finesse jig（此处所指的Finesse jig是2g~5g范围内的小型Rubber jig），Neko。以上七种钓组所匹配的七套装备，基本能够应对鲈鱼钓比赛大多数情况。</p>
</blockquote>
<h2 id="Crankbait-钓竿"><a href="#Crankbait-钓竿" class="headerlink" title="Crankbait 钓竿"></a>Crankbait 钓竿</h2><p>我通常选择Regular调性的鱼竿配合一个低速比的水滴轮来操控Crankbait，这套装备还适合操控VIB。<br>作钓中根据不同的情况可能需要搭配各种类型的线，但是如果考虑到其泛用性，我会倾向于选择10-12LB的氟碳线。如果在冬季和初春的时期，我会考虑降低线组的直径而选择6-8LB鱼线。反之在夏季和秋季，考虑要让你的饵更多的停留或经过障碍物和水草附近，我会加大线径使用12-14LB甚至更粗的线。</p>
<h2 id="Rubber-jig钓竿"><a href="#Rubber-jig钓竿" class="headerlink" title="Rubber jig钓竿"></a>Rubber jig钓竿</h2><p>Extra fast调性的钓竿配合一个高速比的水滴轮，我能钓Jig以及德州，还有科罗拉多钓组。<br>季节以及水域情况不同所需要钓竿的硬度也有不同的要求。比如我所作钓的水域是以岩石结构为主而岸边的障碍相对比较少的情况下，我会选择M调;如果是湖泊型的水域那就意味着水域内有相当数量的水草，这时我就会选择MH硬度的钓竿;如若水域内有大量的水草区域且水草以水面水草为主，比如以菱角、蓼草、水花生等水面型水草为主而组成的障碍，以及岸边树枝垂入水中和没入水中的杂树所组成的重型障碍，这时候我就需要一根强力的钓竿，才可以有效的将鱼从障碍中拔出来。此时我通常需要一支H或者XH的杆子方能周旋应付了。<br>所搭配的线组由弱到强我将其分为三个档次：</p>
<ul>
<li>岩石为主的水体—8-10LB氟碳线</li>
<li>湖泊类水线下水草为主的水体—12-14LB氟碳线</li>
<li>水面障碍倒树以及水线上水草为主的水体—14-20LB氟碳或65LB的PE线</li>
</ul>
<h2 id="Jerkbait钓竿"><a href="#Jerkbait钓竿" class="headerlink" title="Jerkbait钓竿"></a>Jerkbait钓竿</h2><p>Fast调性的鱼竿配合中等速比的水滴轮，我可以用它钓Jerkbait，中小型Shad，Spinnerbait，Buzzbait。<br>可以说Jerkbait主要是在冷水中作钓的利器，但全年当中大多数时间都能够使用它有效地捕获到那些体型相对大的鲈鱼，当然应对不同的情况所使用的技法以及饵的类型都有一些细微的变化，在这里就不一一详解了。跟Jerkbait一样，Shad也是相对比较通用的一种反应饵，适合针对压力场或是天冷的季节。匀速的缓收以及抽/停都能获得不错的咬口。<br>在面对水草边缘的时候同样能够用来操作Spinnerbait 和Buzzbait，如果水草相对比较重的话就要有针对性的选择钓竿了。</p>
<h2 id="无铅钓组钓竿"><a href="#无铅钓组钓竿" class="headerlink" title="无铅钓组钓竿"></a>无铅钓组钓竿</h2><p>L调Fast的钓竿配合2000-2500型浅线杯纺车轮是我最常用的选择。这里所指的无铅钓组，并非是单指Wacky钓组。通常我在无铅钓组的择饵上会选择长条型的软饵作钓，会选择用曲柄钩直穿的方法而非是使用Wacky的方法挂在面条虫的中间位置。这种无铅的方法比较适合在水岸比较复杂的情况下使用，其防挂性能与障碍的通过性都特别好，可以纵向地控饵犹如一条小鱼在水岸边的障碍边悄声窜过。也可以垂直的作钓，让其缓慢的垂直呈现自然落下的姿态。当然你也可以用他进行Wacky钓组的作钓，垂直地呈现你的软饵。<br>对于无铅钓竿，我的要求是有灵敏的竿先以及有力却又不至于太过刚性的腰身，在远距离中鱼的时候能够有效的作合刺穿鲈鱼的口腔，中鱼后又能够一定程度的缓冲鲈鱼的一次次强烈洗腮。绵而不失其灵动，刚直却韧劲十足。<br>通常我会选择使用4-6LB的氟碳线，又或者选择10LB的蜘蛛侠氟碳混合编织线加6LB前导氟碳线来作钓，混合编织线能够更好地把握住那些远距离的咬口，其低延展性能够有效捕捉住那些细微的就食动作。</p>
<h2 id="倒吊钓组钓竿"><a href="#倒吊钓组钓竿" class="headerlink" title="倒吊钓组钓竿"></a>倒吊钓组钓竿</h2><p>对于这一钓组，我想国内大多钓手都非常熟知乃至于精通。我喜欢使用L调Fast的纺车竿配合2500S的纺车轮进行作钓，这钓组对于深水作钓和压力场作钓表现出的成绩都是相当优秀的。它能在原地做出更多的动作以诱惑那些警惕不愿开口的鲈鱼，也能够针对作钓区域作出有效的纵向搜索。</p>
<p>根据不同场地的需求，可以选择自己所设定的软饵在预想的区域内尽可能自然的呈现。同时也可以配合鱼探进行垂直的定点位的呈现去钓获鲈鱼，而我在使用这一钓组的时候大多数时间会选择配合鱼探做垂直呈现的作钓。大多数时候我们都会选择使用倒吊钓组来进行结构作钓，相对的都是开阔水域，此时我会选择使用4-6LB的氟碳线。</p>
<h2 id="Finesse-Jig钓组钓竿"><a href="#Finesse-Jig钓组钓竿" class="headerlink" title="Finesse Jig钓组钓竿"></a>Finesse Jig钓组钓竿</h2><p>我会选择使用Extra fast调性的Bait finesse钓竿配合微物水滴轮来进行作钓，它可以搭配使用Finesse jig，小型Tube，小型德州等钓组。<br>此装备的优点是可以进行精确落点的抛投，很多时候一个精准的抛投是获得咬口的重要因素，而且更小的饵确实是可以获得更多的咬口，Bait finesse钓法便如此应运而生。</p>
<h2 id="Neko钓组钓竿"><a href="#Neko钓组钓竿" class="headerlink" title="Neko钓组钓竿"></a>Neko钓组钓竿</h2><p>我会选择一根Extra fast的钓竿和2000S的纺车轮，配合4LB氟碳线来作钓。除了Neko钓组外，我还可以用它来钓1g多的JIG和Super finesse的倒吊（2~3寸的饵配合1-2g的倒吊铅）应对极限条件下的深水作钓。<br>Neko钓组是为数较少的一种针对深水作钓的最佳选择，可它以在水温低于7摄氏度的情况下依然能够捕获一定数量的咬口，可以非常慢速的在水下呈现软饵的自然状态。其垂直落底的特性也是我对于结构作钓时的不二选择。针对国内众多压力钓场都有着不俗的表现。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[善用路亚软饵]]></title>
      <url>http://cuiqingwei.github.io/2016/10/13/2016-10-13-%E5%96%84%E7%94%A8%E8%B7%AF%E4%BA%9A%E8%BD%AF%E9%A5%B5/</url>
      <content type="html"><![CDATA[<p>在路亚世界里，软饵的搭配种类比较多功能性也不尽相同，但是它们的共同之处 就在于—引诱鱼饵上钩，无论是以动作逼真引诱还是以动作激怒鱼儿。 但是这些动作都需要人来赋予它，不然再好的路亚软饵也是枉然。</p>
<p>说之前先声明，这是给各位刚刚玩的盆友们准备的，各位老鸟们还请海涵！</p>
<a id="more"></a>
<p><img src="/img/20161013/orka-shad-tail92.jpg" alt=""></p>
<p>首先呢，就先 从模拟自然界中的动作讲一下吧，这个问题就在于钓友们手上的灵活多变操控了 ，一般比较常用也是比较有效的方式有三种：</p>
<p><strong>1，跳</strong></p>
<p><strong>2，拖</strong></p>
<p><strong>3，停</strong></p>
<p><em>第一种，跳，顾名思义就如同我们人跳舞一样，饵也需要在水下跳舞引诱鱼 的注意，让它们觉得这东西有点好奇，看着有些意思，进而进行试探 最后咬钩。 “跳”的方法就是手持竿子，将竿子用手腕的力量上下挑动，使饵在水下呈现出 上下跳跃的姿态 这种跳跃的幅度可大可小，不用拘泥于形式，可以夸张的大幅度 ，也可以用轻微的小幅度挑动来模拟一些落入水中的昆虫幼虫或其他小生物。</em></p>
<p><em>第二种，拖，拖动饵在水下移动，让饵自然呈现一种在底层游动的状态，引诱鱼 前来试探，这种方法对付一些底层伏击型的鱼类比较有效果。也会对钓手们了解 水底的地形有帮助。操作方法 就是慢慢摇轮，让其软饵在水下慢慢游走。</em></p>
<p><em>第三种，停，这个动作非常重要 有时候你一直在操控软饵时，鱼可能没有动作， 只会盯着看，往往就是在你停顿的瞬间，鱼会突然发动攻击。当然停顿的时间没 有固定的，需要大家自行体会根据不同的环境来随时调整。</em></p>
<p>而将这三者结合起来：跳-拖-停 重复使用的时候，往往会对鱼造成极大的诱惑性 ，可以使中鱼率大大增加，特别是在鱼境况不好的压力钓场上，往往路亚软饵钓 组会发挥极大地作用，大家可以在操控软饵的时候想想一下软饵在水下的动作会 是怎样的，充分发挥自己的想象力，努力去改造软饵在水下的状态，最简单的方 法就是找一个透明的玻璃鱼缸灌满水将软虫钓组放入浴缸里进行调试，已达到你 想要的理想效果，所以软饵钓组各位一定要掌握一下，当你熟悉了路亚软饵钓组 的你肯定会爱上它的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[几种常用有效的线结介绍]]></title>
      <url>http://cuiqingwei.github.io/2016/10/13/2016-10-13-%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E6%9C%89%E6%95%88%E7%9A%84%E7%BA%BF%E7%BB%93%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在路亚钓的过程中，线结是比较基础的一项技能，正确的使用和绑制一种线结关系到你作钓的成功与否，对于连接路亚的线结目前有很多种绑制方式，但是不是所有的方式都是可靠或优秀的，有因为大家都知道线的拉力磅数一般指的是直线拉力值，但是在线打结后的拉力值会降低不少，如果没有一个有效的线结的话，你打结后的线的拉力值可能会降到原来值的50%甚至更低，那样势必会影响整个线组的强度。</p>
</blockquote>
<p>现在就介绍几种比较简便且对钓线本身拉力值损失较小的常见线结供参考，这些线结特别适用于尼龙线或氟碳线。</p>
<a id="more"></a>
<p><img src="/img/20161013/线结1.jpg" alt=""></p>
<p>IMPROVED CLINCH KNOT 这个线结比较常见 绑起来也比较简单，适合的绑的东西也比较多，比如连接钓钩、路亚、JIG 等等都是可以的。</p>
<p>首先将线穿过线孔（可以穿一次也可以穿过两次）然后将穿出来一端的线绕着主线绕上5圈（缠绕圈数可以根据需要来，一般5圈足够），最后在穿过绕线预留的空间，慢慢拉紧即可。这个线结经过测试，可以保留大约近95%的强度，并且比较方便绑制各类路亚和配件。</p>
<p><img src="/img/20161013/线结2.jpg" alt=""></p>
<p>PALOMAR KNOT 此线结也是个很简单的线结，但是强度却非常可靠，它可以保留钓线95%以上的强度，比较适合连接别针、中小型路亚以及钓钩等等，但是要是用此线结绑比较大的路亚，可能需要预留的线要比较长绑起来可能略有不便，绑这个线结的方法也很简单，看图即可了解。</p>
<p><img src="/img/20161013/线结3.jpg" alt=""></p>
<p>NON-SLIP LOOP KNOT 这个线结的特点是赋予连接的路亚或鱼钩较大的自由性，因为这个线结并不是完全锁死固定在连接环上的，而是有空间，这样可以让一些水中姿态较大路亚在水中拥有更多的自由摆动空间，具体方法是先将主线上打一个简单的小节但不要拉紧，然后将下端预留出来的线穿过线孔，然后再顺势穿过刚才在主线上打的那个小结的孔，随后将穿过小结孔的线绕在主线上5圈左右，最后再穿过主线上打结的小孔，拉紧即可。</p>
<p><img src="/img/20161013/线结4.jpg" alt=""></p>
<p>BLOOD KNOT 这个线结是可以将两段不同磅数的钓线连接，它可以用于连接前导线，比较适合连接两根差距不是很大的钓线，比如15磅和20磅左右这样的情况，不太适合用于连接15磅连接50磅的钓线。它的绑法也很简单，直接看图就好了。</p>
<p><img src="/img/20161013/线结5.jpg" alt=""></p>
<p>SURGEON’S KNOT 这个线结与上一个线结的用途一样，绑法也比较简单，打结也比较快速，具体绑法如下图。不过要注意绑这个结，有一端的线要比另一端的线要短一些才可以，这样才能方便的在小结里面缠绕。</p>
<p><img src="/img/20161013/线结6.jpg" alt=""></p>
<p><strong>简单的与线杯连接</strong></p>
<p>这是主线与线杯连接打结的，也是很简单的一种方式，无论双轴卷线器还是纺车轮都可以使用，具体方法可以看图所示。</p>
<p><em>再附上3种线结：</em></p>
<p><img src="/img/20161013/线结7.jpg" alt=""><br><img src="/img/20161013/线结8.jpg" alt=""><br><img src="/img/20161013/线结9.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[路亚竿的硬度与调性你是否混淆]]></title>
      <url>http://cuiqingwei.github.io/2016/10/12/2016-10-12-%E8%B7%AF%E4%BA%9A%E7%AB%BF%E7%9A%84%E7%A1%AC%E5%BA%A6%E4%B8%8E%E8%B0%83%E6%80%A7%E4%BD%A0%E6%98%AF%E5%90%A6%E6%B7%B7%E6%B7%86/</url>
      <content type="html"><![CDATA[<h2 id="路亚竿的硬度"><a href="#路亚竿的硬度" class="headerlink" title="路亚竿的硬度"></a>路亚竿的硬度</h2><p>选择路亚竿的时候大部分钓友会关注：长度、调性、外观做工质量、品牌与价格。其中“调性”普遍会被大家想到“M、ML、MH”等英文缩写，也经常有卖家或者钓友这样称呼：“这支竿是M调的，那支竿是MH调的”等等，实际上这些英文缩写说的不是路亚竿的调性而是硬度，英文称“<font color="red"><strong>Power</strong> <em>（最大负荷）</em></font>” 。</p>
<p>路亚竿的 <font color="red"><strong>硬度</strong> <em>（最大负荷）</em></font>就是我们通常说的ML、M、MH等“调性”，是指的路亚竿的最大负荷值以及适合抛投饵重的范围。路亚竿的硬度由软到硬大概分为几个等：<em>UUL-UL-L-ML-M-MH-H-XH-XXH</em>。其中“<strong>M</strong>”为分界线，以上为软，以下为硬。</p>
<p>路亚竿的硬度分类如下：<br>    UUL——Ultra Ultra light极软<br>    UL——Ultra light超软<br>    L——Light 软<br>    ML——Medium light 中软<br>    M——Medium 中等<br>    MH——Medium heavy 中硬<br>    H——Heavy 硬<br>    XH——Extra heavy 超硬<br>    XXH——Extra extra heavy 超超硬</p>
<h2 id="路亚竿的调性"><a href="#路亚竿的调性" class="headerlink" title="路亚竿的调性"></a>路亚竿的调性</h2><p>上面说了路亚竿的调性区别于硬度，但什么是路亚竿的调性呢？国内钓友对台钓竿相对比较了解，常说的台钓竿的调性如46、37、28、19调等，是表示钓竿中鱼受力时，竿身的弯曲点越来越靠近前稍。路亚竿的调性也可以这样理解，有类似的数值表示这样的参数，只是因为路亚钓法源于欧美，欧美关于调性的叫法不同而已。</p>
<p>路亚竿 <font color="red"><strong>调性</strong></font>，以英文单词“<font color="red"><strong>Action</strong></font>”表示，<font color="blue"><em>钓竿中鱼受力竿身的弯曲点越来越靠近前稍，称调性越快，反之调性越慢，以中调作为快慢调的分界线</em></font>，</p>
<p>详细介绍如下：<br>    S——Slow 慢速调<br>    MR——Medium Regular 中慢调<br>    R——Regular 中调<br>    MF——Medium Fsst 中快调<br>    F——Fast 快调<br>    F+——Fast+ 快调+<br>    XF——Extra Fast 超快调  </p>
<blockquote>
<p>路亚竿的硬度和调性，是根据不同钓场和需求设定的，不同的厂家有不同的设计理念，现在普遍流行的是快调路亚竿，竿稍纤细而灵敏，利于感知水下鱼的就饵动作，但有些厂家把竿稍越做越细？调性快就真的好么？其实不然，针对不同钓场和对象鱼，应该有不同的配置方式。比如重草区雷强钓法，此时应该选用慢调硬竿；而使用软虫钓组时，为了感知水下轻微动作则应该选择中软的快调竿等等。    </p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[活鱼放血]]></title>
      <url>http://cuiqingwei.github.io/2016/10/11/2016-10-11-%E6%B4%BB%E9%B1%BC%E6%94%BE%E8%A1%80/</url>
      <content type="html"><![CDATA[<p>鱼的鳃部是血管较集中的位置，在这里下刀比其它部位较好些。<br>用刀往两边的鳃盖下部边缘处也就是靠鱼腹部的方向用力往下切上一刀，此时流出血后放到清水中让其游动，这样能使鱼体内的血液加速流出体外，使鱼体内的血达到最少量，这样的排放后血的鱼较少鱼的腥味，在吃食上味道鲜美。<strong>其次放血后的鱼易于保鲜不易变质变坏。</strong></p>
<a id="more"></a>
<p><img src="/img/20161011/fish.jpg" alt=""></p>
<p><em>大多数人杀鱼时不懂得放血，其实杀鱼一定要记得放血，这样杀好的鱼才会鲜嫩不腥。因为鱼肉或其它肉类食材之所以会有腥味，归根到底还是血里有腥味，如果把血放掉一些腥味就会减轻许多了。</em></p>
<blockquote>
<embed src="http://player.youku.com/player.php/sid/XMTQ1Mzg4NjAwMA==/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[个人路亚装备]]></title>
      <url>http://cuiqingwei.github.io/2016/10/10/2016-10-10-%E4%B8%AA%E4%BA%BA%E8%B7%AF%E4%BA%9A%E8%A3%85%E5%A4%87/</url>
      <content type="html"><![CDATA[<h1 id="路亚竿"><a href="#路亚竿" class="headerlink" title="路亚竿"></a>路亚竿</h1><p><strong><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.Jvl32R&amp;id=520196909891&amp;_u=c154cj1987f" target="_blank" rel="external">LRT702MHC</a></strong>  <em>领峰 2015款 魂系列  订制版一体式软木柄</em></p>
<blockquote>
<p>真正意义上的软饵以及岸钓远投竿，拥有超敏锐的快调竿尖和强有力的竿身不单只是精确抛投，<br>更是拥有良好感知水底结构的能力和从咬口开始一气呵成将鱼从水底拔出来的迸发力。<br>并且拥有20克亮片80+直线距离的远投能力。</p>
</blockquote>
<a id="more"></a>
<p><img src="/img/20161010/LRT702MHC.jpg" alt=""></p>
<p> <strong><a href="https://item.taobao.com/item.htm?spm=a1z0k.6846577.0.0.lvKUtC&amp;id=38551093007&amp;_u=t2dmg8j26111" target="_blank" rel="external">CWS702MH</a></strong> <em>Berkley /美国贝克力</em></p>
<p> <img src="/img/20161010/CWS702MH.jpg" alt=""></p>
<p><strong><a href="https://detail.tmall.com/item.htm?id=36807472493&amp;spm=a1z09.2.0.0.uapaU2&amp;_u=c154cj1d09c" target="_blank" rel="external">LMS001-662M</a></strong> <em>鱼猎人征途系列</em></p>
<p><img src="/img/20161010/LMS001-662M.jpg" alt=""></p>
<p><strong><a href="https://item.taobao.com/item.htm?spm=a1z0d.6639537.1997196601.113.Q7PwbK&amp;id=522011254955" target="_blank" rel="external">LYNN FISHING LURE/小林路亚 2.03米枪柄</a></strong></p>
<p><img src="/img/20161010/LYNN-L.jpg" alt=""></p>
<p><strong><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.HzLi42&amp;id=534294970180&amp;_u=s154cj11be9" target="_blank" rel="external">Major SKR-B862ML</a></strong> <em>马牌</em></p>
<p>钓竿长度：2米58 节数：2节 饵重：10-30克 线重：8-14磅 PE:0.8-2号 调性：中调</p>
<p><img src="/img/20161010/SKR-B862ML.png" alt=""></p>
<p><strong><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.HzLi42&amp;id=17264821075&amp;_u=s154cj10d82" target="_blank" rel="external">LRC664M</a></strong> <em>贝克力四节便携竿</em></p>
<p>全长：1.98m节数：4收缩长度：52.5cm饵重：7-21g适合线重：8-20LB含碳量：95% 自重：136g</p>
<p><img src="/img/20161010/LRC664M.jpg" alt=""></p>
<p><strong><a href="hhttps://item.jd.com/12301115424.html" target="_blank" rel="external">SHIMANO EXPRIDE 1016M-2</a></strong> <em>17款EXPRIDE FUJI富士SIC导环 路亚竿 2.08米M枪柄(1610M-2)</em></p>
<p><img src="/img/20161010/EXP-1610M-2.jpg" alt=""></p>
<h1 id="渔线轮"><a href="#渔线轮" class="headerlink" title="渔线轮"></a>渔线轮</h1><p><strong><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.uapaU2&amp;id=525599654852&amp;_u=c154cj1c6bf" target="_blank" rel="external">TATULA CT TYPE R 100HS</a></strong>  <em>DAIWA大蜘蛛美版水滴轮</em></p>
<p><img src="/img/20161010/TATULA-CT-100HS.jpg" alt=""></p>
<p><strong><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.uapaU2&amp;id=14816583709&amp;_u=c154cj143ab" target="_blank" rel="external">SIENNA 2500FD</a></strong> <em>禧玛诺4轴纺车渔轮 马来西亚产</em></p>
<p><img src="/img/20161010/SN2500FD.jpg" alt=""></p>
<p><strong><a href="https://item.taobao.com/item.htm?spm=a1z0d.6639537.1997196601.42.Q7PwbK&amp;id=7704001910" target="_blank" rel="external">RYOGA 1016</a></strong> <em>DAIWA达瓦顶级鼓轮</em></p>
<blockquote>
<p>可选替换部件：</p>
<ol>
<li>Daiwa (达亿瓦) RCSB线杯 鼓式轮适用</li>
<li>Daiwa (达亿瓦) RCSB 单柄摇柄 鼓式轮适用</li>
<li>Daiwa (达亿瓦) RCSB 双柄摇柄 鼓式轮适用</li>
</ol>
</blockquote>
<p><img src="/img/20161010/RYOGA.png" alt=""></p>
<p><strong><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.HzLi42&amp;id=520734861061&amp;_u=s154cj10930" target="_blank" rel="external">Mentaniu DC HG</a></strong> <em>禧玛诺蒙塔尼DC 2015</em></p>
<p><img src="/img/20161010/MetaniumDC.png" alt=""><br><img src="/img/20161010/MetaniumDC1.png" alt=""></p>
<p><strong><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.6c818473iizZfR&amp;id=545441440003&amp;_u=m154cj14da2" target="_blank" rel="external">SHIMANO New EXSENCE DC XG</a></strong> <em>禧玛诺海水DC 2017</em></p>
<p><img src="/img/20161010/EXSENCE DC.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Kali Linux Live USB on MAC]]></title>
      <url>http://cuiqingwei.github.io/2016/10/10/2016-10-10-Kali-Linux-Live-USB-on-MAC/</url>
      <content type="html"><![CDATA[<ol>
<li>download Kali Linux iso images from <a href="http://www.kali.org/downloads/" target="_blank" rel="external">http://www.kali.org/downloads/</a></li>
<li>Format the usb stick in disk utility as msdos</li>
<li>Open Terminal Window and run the following</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">➜  ~ diskutil list</div><div class="line">/dev/disk0 (internal, physical):</div><div class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></div><div class="line">   0:      GUID_partition_scheme                        *128.0 GB   disk0</div><div class="line">   1:                        EFI EFI                     209.7 MB   disk0s1</div><div class="line">   2:                  Apple_HFS OS X                    127.2 GB   disk0s2</div><div class="line">   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3</div><div class="line">/dev/disk1 (internal, physical):</div><div class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></div><div class="line">   0:      GUID_partition_scheme                        *500.1 GB   disk1</div><div class="line">   1:                        EFI EFI                     209.7 MB   disk1s1</div><div class="line">   2:                  Apple_HFS WORK                    400.0 GB   disk1s2</div><div class="line">   3:                  Apple_HFS DATA                    99.6 GB    disk1s3</div><div class="line">/dev/disk2 (external, physical):</div><div class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></div><div class="line">   0:     FDisk_partition_scheme                        *8.0 GB     disk2</div><div class="line">   1:                 DOS_FAT_32 KALI                    8.0 GB     disk2s1</div></pre></td></tr></table></figure>
<a id="more"></a>
<ol>
<li>my USB device is /dev/disk2, Then unmount disk by diskutil command</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">➜  ~ diskutil umountDisk /dev/disk2</div><div class="line">Unmount of all volumes on disk2 was successful</div></pre></td></tr></table></figure>
<ol>
<li>You may have to run this as sudo</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo dd <span class="keyword">if</span>=kali-linux-2016.2-amd64.iso of=/dev/disk2 bs=512 conv=noerror,sync</div><div class="line">6009312+0 records <span class="keyword">in</span></div><div class="line">6009312+0 records out</div><div class="line">3076767744 bytes transferred <span class="keyword">in</span> 2227.332489 secs (1381369 bytes/sec)</div></pre></td></tr></table></figure>
<p>Waiting for complete<br>When It success</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[路亚绑法]]></title>
      <url>http://cuiqingwei.github.io/2016/10/09/2016-10-09-%E8%B7%AF%E4%BA%9A%E7%BB%91%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="渔轮绑法"><a href="#渔轮绑法" class="headerlink" title="渔轮绑法"></a>渔轮绑法</h1><p><img src="/img/20161009/渔轮上线绑法.jpg" alt=""></p>
<a id="more"></a>
<p><img src="/img/20161009/渔轮上线绑法1.jpg" alt=""></p>
<h1 id="路亚饵绑法"><a href="#路亚饵绑法" class="headerlink" title="路亚饵绑法"></a>路亚饵绑法</h1><ul>
<li>圣地亚哥果酱扣（San Diego Jam Knot）</li>
</ul>
<p><img src="/img/20161009/圣地亚哥果酱扣.jpg" alt=""></p>
<ul>
<li>帕罗玛扣（Palomar Knot）</li>
</ul>
<p><img src="/img/20161009/帕罗玛扣.jpg" alt=""><br><img src="/img/20161009/帕罗玛扣8字环.jpg" alt=""></p>
<blockquote>
<p>参考视频（28分处开始看）<br><a href="http://player.youku.com/player.php/Type/Folder/Fid//Ob//sid/XODYzMjE2ODAw/v.swf" target="_blank" rel="external">http://player.youku.com/player.php/Type/Folder/Fid//Ob//sid/XODYzMjE2ODAw/v.swf</a></p>
</blockquote>
<h1 id="前导线绑法"><a href="#前导线绑法" class="headerlink" title="前导线绑法"></a>前导线绑法</h1><p><img src="/img/20161009/前导线绑法.gif" alt=""><br><img src="/img/20161009/前导线绑法.jpg" alt=""></p>
<h1 id="曲柄钩绑法"><a href="#曲柄钩绑法" class="headerlink" title="曲柄钩绑法"></a>曲柄钩绑法</h1><p><img src="/img/20161009/曲柄钩绑法.jpg" alt=""></p>
<blockquote>
<p><strong>参考链接</strong><br>什么是曲柄钩 <a href="http://www.aidiao.com/baike/3171.html" target="_blank" rel="external">http://www.aidiao.com/baike/3171.html</a><br>曲柄钩绑法 <a href="http://www.diaoyu123.com/luyarumen/87864.html" target="_blank" rel="external">http://www.diaoyu123.com/luyarumen/87864.html</a><br>德州钓组 <a href="http://www.rensheng2.com/150000/141260.shtml" target="_blank" rel="external">http://www.rensheng2.com/150000/141260.shtml</a><br>最容易的倒钓组绑法 <a href="http://www.lure123.com/news/0/550-1.shtml" target="_blank" rel="external">http://www.lure123.com/news/0/550-1.shtml</a><br>视屏演示 <a href="http://v.ku6.com/show/K91_Gmh5Vi-0TKEgDnCvSg...html?from=my" target="_blank" rel="external">http://v.ku6.com/show/K91_Gmh5Vi-0TKEgDnCvSg...html?from=my</a></p>
</blockquote>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><strong>Fishing Knots</strong> <em><a href="http://www.netknots.com/fishing_knots" target="_blank" rel="external">http://www.netknots.com/fishing_knots</a></em><br><strong>路亚鱼线的绑法</strong> <em><a href="http://www.diaoyur.com/a/2013/1140.html" target="_blank" rel="external">http://www.diaoyur.com/a/2013/1140.html</a></em><br><strong>小汐打GT节</strong>  <em><a href="http://v.youku.com/v_show/id_XODg5MzExMzQw.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XODg5MzExMzQw.html</a></em><br><strong>简单快速的前导线结AK结</strong> <em><a href="http://v.youku.com/v_show/id_XNzMwNjU1NDYw.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XNzMwNjU1NDYw.html</a></em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenWRT开源硬件汇总]]></title>
      <url>http://cuiqingwei.github.io/2016/10/08/2016-10-08-OpenWRT%E5%BC%80%E6%BA%90%E7%A1%AC%E4%BB%B6%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<h1 id="Arduino-Yun"><a href="#Arduino-Yun" class="headerlink" title="Arduino Yún"></a>Arduino Yún</h1><p><a href="https://www.arduino.cc/en/Main/ArduinoBoardYun" target="_blank" rel="external">https://www.arduino.cc/en/Main/ArduinoBoardYun</a><br>cpu: Atheros AR9331 @400MHZ (含ATmega32U4)<br>ram:  64MB DDR2<br>flash: 16MB<br>wifi: 150Mbit Wi-Fi 1T1R 2.4 GHz</p>
<h1 id="LinkIt-Smart-7688-Duo"><a href="#LinkIt-Smart-7688-Duo" class="headerlink" title="LinkIt Smart 7688 Duo"></a>LinkIt Smart 7688 Duo</h1><p><a href="https://www.seeedstudio.com/LinkIt-Smart-7688-Duo-p-2574.html" target="_blank" rel="external">https://www.seeedstudio.com/LinkIt-Smart-7688-Duo-p-2574.html</a><br>cpu: MT7688 @580MHZ (含ATmega32U4)<br>ram:  128MB DDR2<br>flash: 32MB<br><a id="more"></a></p>
<h1 id="IntoRobot-Atom"><a href="#IntoRobot-Atom" class="headerlink" title="IntoRobot Atom"></a>IntoRobot Atom</h1><p><a href="http://shop.intorobot.com/index.php?route=product/product&amp;product_id=43" target="_blank" rel="external">http://shop.intorobot.com/index.php?route=product/product&amp;product_id=43</a><br>cpu: MT7620N @580MHZ (含STM32F103)<br>ram:  512Mbit DDR2<br>flash: 128Mbit</p>
<h1 id="WRTnode"><a href="#WRTnode" class="headerlink" title="WRTnode"></a>WRTnode</h1><p><a href="http://www.wrtnode.cc/index.html" target="_blank" rel="external">http://www.wrtnode.cc/index.html</a><br>-WRTnode1<br>cpu: MT7620N @580MHZ<br>ram:  512Mbit DDR2<br>flash: 128Mbit<br>wifi: 300Mbit Wi-Fi 2T2R 802.11n 2.4 GHz<br>-WRTnode2R<br>cpu: MT7688AN @580MHZ (含STM32F103)<br>ram:  256MB DDR2<br>flash: 32MB<br>-WRTnode2P<br>cpu: MT7628 @580MHZ<br>ram:  128MB DDR2<br>flash: 16MB<br>-WRTnodeHI<br>cpu: ARM Cortex A7 @600MHZ 支持Neon加速，集成FPU<br>ram:  512MB DDR3<br>flash: 32MB</p>
<h1 id="MMZ558"><a href="#MMZ558" class="headerlink" title="MMZ558"></a>MMZ558</h1><p><a href="http://www.compex.com.sg/product/mmz558/" target="_blank" rel="external">http://www.compex.com.sg/product/mmz558/</a><br>cpu:   QCA9558 @700MHZ<br>ram:  128MB DDR2<br>flash: 16MB</p>
<h1 id="WPJ428"><a href="#WPJ428" class="headerlink" title="WPJ428"></a>WPJ428</h1><p><a href="http://www.compex.com.sg/product/wpj428/" target="_blank" rel="external">http://www.compex.com.sg/product/wpj428/</a><br>cpu:   IPQ4028 ARM V7 @710MHZ<br>ram:  256MB DDR2<br>flash: 16MB<br>NAND flasn: 128MB</p>
<h1 id="AmazingBOX"><a href="#AmazingBOX" class="headerlink" title="AmazingBOX"></a>AmazingBOX</h1><p><a href="http://www.a-box.com.cn/product.php" target="_blank" rel="external">http://www.a-box.com.cn/product.php</a><br>cpu:   Marvell Armada370 @1.2GHZ 含FPU，双流水线技术<br>ram:  1GB DDR3<br>flash: 1GB</p>
<h1 id="RTNAS-V3"><a href="#RTNAS-V3" class="headerlink" title="RTNAS V3"></a>RTNAS V3</h1><p><a href="http://www.openwrt.org.cn/bbs/thread-15472-1-1.html" target="_blank" rel="external">http://www.openwrt.org.cn/bbs/thread-15472-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[拟饵手法]]></title>
      <url>http://cuiqingwei.github.io/2016/10/08/2016-10-08-%E6%8B%9F%E9%A5%B5%E6%89%8B%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="全泳层饵的泳层基础知识"><a href="#全泳层饵的泳层基础知识" class="headerlink" title="全泳层饵的泳层基础知识"></a>全泳层饵的泳层基础知识</h3><p>全泳层饵，顾名思义，理论上可以作钓所有水层，从水表到水底，钓者有完全的决定权，这与 <strong>米诺[MINNOW]</strong> 或 <strong>摇滚[CRANK]</strong> 有明确的潜行深度明显不同。</p>
<blockquote>
<p>沉水铅笔、VIB、各类金属饵，都是全泳层饵。</p>
</blockquote>
<a id="more"></a>
<p><img src="/img/20161008/全泳层饵1.png" alt=""></p>
<p><strong>设定目标水层</strong> 全泳层饵理论上是全泳层，但到了实战的时候，钓者的每一次抛投都必定有一个目标水层，可以是多少米深，也可以只是一个读数。准确到达预设的目标水层是全泳层饵操控的灵魂！</p>
<p>确定作钓目标水层深度可以采取读秒或者读数法。</p>
<ul>
<li>读秒法</li>
</ul>
<p>在明确了解饵的下沉速度时，用读秒法可以确定水层并估测水深。如“诡道4#”的80mm沉水铅笔，每2秒下沉1m，如果抛出触底读秒是8，那么水深大致就在4m左右，当你把目标水层设定在离底1m时，抛出后读秒到6就正好到达目标水层。</p>
<ul>
<li>读数法</li>
</ul>
<p>目标水层就是你内心的一个读数，和饵的下沉速度无关，可以任意运用到任何一款全泳层饵。抛出全泳层饵后即以你最喜欢的节奏稳定读数，触底时的读数就是深度。如读数是20，深度就是20，如果目标水层设定在下层，则饵落水后读到17-18就OK了，读到19就搜底了，如果想钓中层，读到10就OK。在这里水深多少米已经没有了意义。</p>
<p><img src="/img/20161008/全泳层饵2.png" alt=""></p>
<p><strong>确定收线速度</strong> 收线快慢直接决定饵行进过程中泳层的变化！快了泳层变浅，游向水面；慢了泳层变深，往水底钻。具体情况因饵的不同而不同，需要作钓者体验感知。</p>
<p>通常情况下，自重比较大的全泳层饵需要相对比较快的速度才能保持在一定的泳层，比如各类大克重的金属饵，必须以高速操控，因此在鱼活性不高的时候，效果有限，而对于翘嘴鲌这类目标鱼，实战中低速操控往往比高速状态更具诱惑性；反之，比重相对轻的全泳层饵，如沉水铅笔，收线速度很慢也能保持一定的泳层，呈现优异的泳姿，这在低水温环境或者目标鱼活性不高时，尤其重要，特别适合翘嘴鲌作钓。</p>
<h3 id="VIB"><a href="#VIB" class="headerlink" title="VIB"></a>VIB</h3><p><img src="/img/20161008/VIB1.png" alt=""></p>
<p>竿尖上举和下指，对于VIB的操控来说你会有明显不同的感觉。上举时，震颤感更加明显，即便慢速收线时也有强烈手感，让你敏锐准确地掌控饵在水下的状态。</p>
<p><img src="/img/20161008/VIB2.png" alt=""></p>
<p>VIB是全泳层饵，抛出后等待时间的不同，让VIB下沉的深度也不同，实战中根据需要确定目标水层。<em>具体请参阅“全泳层饵的泳层基础知识”</em></p>
<p><img src="/img/20161008/VIB3.png" alt=""></p>
<p>对于颤游也可以在路亚抛出后让其自由下沉至轻轻触底，随后竿尖朝下缓缓收线，水底的路亚似一条无悠无虑觅食的小鱼，随后抬高竿尖，迅速轻轻一抽，路亚就似猛地受惊向上逃窜的小鱼，瞬间就勾起庸懒的猎食者最疯狂的追咬！VIB易挂底，因此钓线建议用2＃的PE＋5＃碳前导，这样挽救的机会比较大。</p>
<blockquote>
<p>逗逗vib</p>
</blockquote>
<p><img src="/img/20161008/逗逗VIB.jpg" alt=""><br><img src="/img/20161008/逗逗VIB1.jpg" alt=""><br><img src="/img/20161008/逗逗VIB2.jpg" alt=""></p>
<h3 id="沉水铅笔"><a href="#沉水铅笔" class="headerlink" title="沉水铅笔"></a>沉水铅笔</h3><p><img src="/img/20161008/沉水铅笔.jpg" alt=""></p>
<blockquote>
<p>沉水铅笔最致命的杀伤力就是能够完美实现作钓者随心所欲的操控，真正体现你的作钓思路。<br>铅笔、米诺和颤游的强强联合，表层到底部，不论何种方式操控，中鱼！匀速收线，缓慢摇摆，如毫无戒心游着的小鱼，猎食鱼岂肯错过；小抽猛拉，如鱼逃窜，高频小抽特别是“狗步”操控时，如同垂死的小鱼最后无力的挣扎，而猛拉再稍加停顿时，又如四处游逃还被吓呆的小鱼，诱惑无可抵挡；下沉自颤，头部下倾，加上腹尾两枚银色三本钩鱼鳍般的同频颤动，目标鱼最易从腹下发动雷霆一击，多数腹钩中鱼，而“自沉”配合“匀收”或“小抽”，则可在水层中进行“W”搜索，全泳层出击!  </p>
</blockquote>
<h4 id="沉水铅笔的慢速平拖搜索（路亚翘嘴强力推荐）-难度系数★"><a href="#沉水铅笔的慢速平拖搜索（路亚翘嘴强力推荐）-难度系数★" class="headerlink" title="沉水铅笔的慢速平拖搜索（路亚翘嘴强力推荐）　难度系数★"></a>沉水铅笔的慢速平拖搜索（路亚翘嘴强力推荐）　<em>难度系数★</em></h4><p><img src="/img/20161008/沉水铅笔1.png" alt=""></p>
<p><strong>搜索中上层</strong> 路亚抛出后即收或者稍等再匀速收线，多数情况下竿尖向下或水平，匀速缓速收线，不需要任何点抽的动作，保持匀速，这在作钓翘嘴过程中非常有效，对轻易不肯就饵的压力鱼尤其有效，低水温环境下作钓也有出色表现！</p>
<ol>
<li><p>沉水铅笔抛出后等待时间的长短，直接决定了沉水铅笔的搜索水层，等待时间越长，路亚下沉深度越大，搜索的目标水层就越深。</p>
</li>
<li><p>具体操控时，如果水下深浅变化比较均匀，但平收过程中却有触底、挂底、挂水草或螺蛳等，说明收线速度偏慢，铅笔无法保持一定的水层，潜行深度不断增加直至探底。</p>
</li>
<li><p>如果掌控了一定的收线速度并能使铅笔保持在一定的水层后，在平收过程中如果发生挂底或挂草等情形，则说明水下存在一定的深浅变化结构，而这样的区域则是路亚精细作钓时，需要重点搜索的区域。</p>
</li>
</ol>
<p><img src="/img/20161008/沉水铅笔2.png" alt=""></p>
<p><strong>搜索近底层</strong> 路路亚抛出触底后，轻轻向上一挑，保持一定的速度匀速收线，在触底时竿尖向上轻轻一挑后继续收线。如果收线感觉异样，可能是挂到水底杂物，需要立即收回重抛，挂到杂物的饵是没鱼攻击的。</p>
<p>当在近底平收过程中一到某点就发生触底情形，则说明水下存在一定的由深急浅结构，而如果此前频频有触底，一到某区域就完全没有触底的感觉，则可能是由浅急深。这些区域都是路亚精细作钓时，需要重点搜索的区域。</p>
<p>探明这样的水下结构后，对于由浅急深区域，可以有意暂停收线待饵自颤下沉后再向上挑竿带起，在下沉和上挑过程中均有极高的中鱼机率。而对于由深急浅的结构，在撞到结构前或者撞到结构后，轻轻带起铅笔，往往在挑竿的时候会有令人惊喜的一击！</p>
<h4 id="沉水铅笔的M型搜索-难度系数★★"><a href="#沉水铅笔的M型搜索-难度系数★★" class="headerlink" title="沉水铅笔的M型搜索　难度系数★★"></a>沉水铅笔的M型搜索　<em>难度系数★★</em></h4><p><img src="/img/20161008/沉水铅笔3.png" alt=""></p>
<p>路亚抛出后稍等下沉，视需要下沉到一定深度后，人面向水面，收紧余线，向上扬竿，力度视情况需要，可重可轻，然后放下竿尖松线，再让路亚下沉；路亚搜索深度范围很大，适合大水面搜索鱼所在泳层，在鱼索饵意愿不积极时，这种轻缓的手法非常有效。</p>
<p><img src="/img/20161008/沉水铅笔4.png" alt=""></p>
<p>上图操作手法的变式，在路亚下沉到目标水层后，先连续两下轻抽钓竿，随后向上高高扬竿，在这连续三抽过程中，卷线器是不收线的，随后放低竿子再收紧余线。这种操作手法，逼真模拟小鱼逃窜，运用到搜索底层时，效果非凡，鳜鱼类的也特别喜欢攻击。使用这个操作时，手法宜轻缓，这样在目标鱼警戒心高或者活力较低的冬天时，会收到出其不意的效果。</p>
<h4 id="沉水铅笔的侧身快抽-难度系数★★"><a href="#沉水铅笔的侧身快抽-难度系数★★" class="headerlink" title="沉水铅笔的侧身快抽　难度系数★★"></a>沉水铅笔的侧身快抽　<em>难度系数★★</em></h4><p><img src="/img/20161008/沉水铅笔5.png" alt=""></p>
<p>最常用的操控方式，抛出让沉水铅笔到达目标水层后，侧身横抽，挥动竿尖幅度每次约50cm，复位，收紧余线，隔一秒再抽一次，如此反复。与“M”型操控不同的是，路亚表现出水平方向上的左窜右逃的交替，似小鱼毫无戒心的游玩，攻取水库、湖泊的翘嘴鲌效果突出，对于海水类目标鱼就如岸投小铁板，效果亦佳。</p>
<p><img src="/img/20161008/沉水铅笔6.png" alt=""></p>
<p>上图操作手法的变式，也是侧身横抽，但幅度变小，每次约20cm，频率加快到一秒一次，此时即便是沉水铅笔，也是贴水表急窜，在群鱼争食的活跃期最受欢迎，中鱼率明显高出许多。这个手法抽动的力度大一些时，经常能“车祸”各种鱼，尤以鲢鱼为多，勿忘放流。</p>
<h3 id="浮水铅笔"><a href="#浮水铅笔" class="headerlink" title="浮水铅笔"></a>浮水铅笔</h3><p><img src="/img/20161008/浮水铅笔.jpg" alt=""></p>
<blockquote>
<p>浮水铅笔的“狗步/dogwalk”操控</p>
</blockquote>
<p><img src="/img/20161008/浮水铅笔1.png" alt=""></p>
<p>路亚抛出后，面向水面，收紧余线，轻抖腕缓劲地向下一压竿尖，竿尖幅度大约20-30cm，托竿向上复位，同时小收一圈或半圈线（纺车轮四分之一或三分之一圈），一定注意不能多收，再抖腕轻轻向下一压，一压一托共一秒，连续不断。整组动作有如推太极，毫不费力，假如几竿下来就手酸，那么操作就有问题。“溜狗步”最大的困难是收线与抽竿的不配合，初期练习时，可以在收紧余线后，侧身向后按上面节奏抽竿不收线，观察狗步状态，再用心揣摩练习。</p>
<p><img src="/img/20161008/浮水铅笔2.png" alt=""></p>
<p>与上图操作相比，加快频率，一秒2抽，减小幅度，每次约10cm，同时抽竿时略带力度，收线节奏与抽竿保持同步，连续不断，要领也是收线与抽竿的配合，此时的浮水铅笔表现在水面小幅急速左右摆，动静非常大，能够将远处的鱼诱惑过来一通猛咬，对大口鲈、海鲈、鳡鱼有特别的诱惑力，但这个钓法对翘嘴似乎效果不好–除非大水面翘嘴群集争食。</p>
<h3 id="波趴（Popper）"><a href="#波趴（Popper）" class="headerlink" title="波趴（Popper）"></a>波趴（Popper）</h3><p><img src="/img/20161008/ropper.jpg" alt=""></p>
<p>如果你从来没有操控过波扒或者总感觉不好，那么，请你先打一个响指，对，响指！用心感受发力的方式，随后，轻握拳抖腕（注意是抖腕，而不是挥动手臂），找到刚刚打响指时发力的感觉，多试几次，这就是波扒操控的核心！找一枝M或MH的竿子来试试吧！</p>
<p><img src="/img/20161008/ropper1.png" alt=""></p>
<p>最常用的操作，竿尖指水收紧钓线，短程发力抽竿后再卷线，1秒1抽，抽竿幅度每次约20-40cm，使波扒前进的距离短（约10cm)但撞出的水花大，整个操作要有节奏，力度恰当，末端发力，每次收线要少。此时波扒表现在前进方向上左右两侧交替撞水，动静非常大，诱惑力超凡！</p>
<p><img src="/img/20161008/ropper2.png" alt=""></p>
<p>竿尖指水，抽动的力度与幅度增大，每次的间隔时间延长至1-2秒，波扒呈现一定的钻水动作，水花减少，但水下气泡显著增多，在目标鱼活性较低或者警觉性较高时，有非常出色的效果。</p>
<blockquote>
<p>推荐链接</p>
</blockquote>
<p><a href="http://www.lure123.com/school/25/212-1.shtml" target="_blank" rel="external">认识常用路亚假饵及操作手法</a><br><a href="http://www.diaoyur.com/a/2013/1198.html" target="_blank" rel="external">路亚一些假饵的操作方法图文介绍</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[路亚术语]]></title>
      <url>http://cuiqingwei.github.io/2016/10/08/2016-10-08-%E8%B7%AF%E4%BA%9A%E6%9C%AF%E8%AF%AD/</url>
      <content type="html"><![CDATA[<p><strong>路亚</strong> 钓鱼取名来源为 <strong>Lure</strong> 的音译，即 <em>假饵钓鱼</em>，是模仿弱小生物引发大鱼攻击的一种方法。讲究技巧，需要竿、饵、轮的综合操作。在整个过程中，钓者是在做全身运动，同时路亚装备简洁，干净环保，与传统钓法有着极大的差异。路亚钓在欧洲非常盛行，自2007年我国也逐渐兴起路亚钓，被越来越多的钓鱼爱好者所喜爱。</p>
<a id="more"></a>
<p>路亚钓法是一种以现代科技辅以人类智慧的新兴钓法，更充分将环境、气候、鱼类习性等因素加以综合考虑，才能在自然环境中透过操作，使假饵能发挥引诱对象鱼觅食的作用，从某个程度来说，也就是做到了真正的“以假乱真”。</p>
<p>从最广义的分类来说，除了活饵、粉饵外、只要在挂钩端搭配人造材料物（如金属、塑料）的钓鱼方法，就能将之理解为路亚钓法，由于路亚钓法的对象多为掠食性的鱼种，不管是毛钩拟饵钓中，或是利用显著的特征侵占对象鱼地盘，激起对象鱼攻击习性而上钩的钓法，都属于路亚钓法的一环。因此吸引对象鱼的注意，是路亚钓法里十分重要的一环。</p>
<p>一般来说，路亚在水中吸引鱼的方法不外乎是透过颜色、光线、拥泳形、声响等几种方式来完成。为了使这些因素能在水中充分发挥作用，就必须使假饵不断的来回游动，探索，因此反复的抛饵、收饵，便成了路亚钓与其他钓鱼方法，在活动上最为明显的区隔特征，在国外特别是欧美等国家，路亚钓就如同其它的户外活动，被赋予动态，竞技的形象，而成为一种家喻户晓的户外运动。</p>
<p>国内近几年来，由于消费水平的提高，钓鱼人口增加的情形下，再加上环保意识的抬头，路亚钓已俨然成为一股新兴的钓游趋势，无论从硬饵、软饵的使用来看，路亚器材的操作简易性更是大幅降低了许多想进入钓鱼活动初学者的门槛，进而吸引更多人的参与，享受更多的钓鱼乐趣，并与国际潮流接轨。</p>
<h1 id="路亚分类"><a href="#路亚分类" class="headerlink" title="路亚分类"></a>路亚分类</h1><p>谈到路亚钓，不免让人好奇什么是路亚钓，路亚有哪些种类呢？从分类上来说明，路亚分为六大系统，分别是栓型饵（plug）、铁板路亚（Jig)、钢丝饵（WireBait）、生物型软饵（Soft Bait）、橡胶铅头钩（RubberJig），而这些各自的系列中，又有许多不同的差异，例如同样是栓形路亚，里面还区分为鱼型路亚(Minnow)、水表路亚（TopWater）、搅泥路亚（Crank）、颤泳路亚（Vibration），可说是非常细腻，透过附图的分类表，相信各位读者可以对路亚的形态以及分类有了初步的认识。</p>
<p><img src="/img/20161008/lure.jpeg" alt=""></p>
<h1 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h1><p><strong>炒粉</strong> = 也叫炸线，新手初学水滴轮时常发生<br><strong>放枪</strong> = 抛投时断线，拟饵飞得无影无踪.使用PE线时发生较多<br><strong>放流</strong> = 钓鱼是为了享受钓鱼的过程，而不是鱼，保证鱼资源的钓之不完，钓友们钓鱼的乐趣也就钓之不尽了。当然，钓后放流并不是阻止大家将钓到的鱼带回享用!而是不希望大家做出一网打尽,赶尽杀绝的行为,因为你所能吃掉的鱼与所能钓到的鱼在数量上是不成正比的。<br><strong>正口</strong> = 拟饵在目标鱼嘴里，证明该鱼确实对拟饵发起过正面攻击<br><strong>打龟</strong> = 也叫空军,指没钓上目标鱼而归<br><strong>破龟</strong> = 一直打龟很久后中鱼<br><strong>破处</strong> = 玩家的第一次中鱼<br><strong>车祸</strong> = 钓上鱼后发现钩子在鱼嘴以外的地方<br><strong>深喉</strong> = 鱼饵被全吃进到喉咙，已经在腮附近<br><strong>米级</strong> = 指目标鱼身长超过100cm以上，简称米级<br><strong>强奸</strong> = 指在对自己装备和技术自信的情况下，采用不溜鱼而直接拉上岸的方法称为强奸。另外在遇上大鱼时被清杯断线也称强奸，不过是被鱼强奸<br><strong>清杯</strong> = 又称 <em>脱裤子</em>，指遇上大鱼将泄力锁死的情况下仍将线杯的线全部拉出<br><strong>炸水</strong> = 操作水面系拟饵时目标鱼冲出水面吃饵产生的水花简称炸水<br><strong>洗腮</strong> = 对象鱼逃生伎俩之一，指对象鱼中钩后主动冲出水面，摇摆头部欲挣脱鱼钩的束缚，此种情形以鲈鱼居多。应对办法：一是将鲈鱼拉离其原居水层时不要太超之过急；二是将竿尖压入水中控线。<br><strong>打桩</strong> = 鱼中钩后赖在河底不动<br><strong>作合</strong> = 也就是 <strong>扬杆</strong> 每位玩家最期待的哟<br><strong>爆箱</strong> = 鱼儿满箱，箱子装不下啦<br><strong>标点</strong> = 寻找藏鱼的地方也就是下竿的地方<br>左/右手轮：杆子不分左右！左手摇的是左手轮。右手摇的是右手轮<br><strong>打黑</strong> = 是指雷强钓法<br><strong>雷强</strong> =  路亚黑鱼的专业叫法，源自日本。日本反黑鱼，叫做雷鱼。 黑鱼一类的鱼也叫雷鱼，由于其栖息的场所水面大多有水草覆盖，只能用蛙路亚，但是蛙路亚呢，因为需要防挂草，所以钩尖隐藏，需要暴力扬竿刺穿黑鱼上颚，加上黑鱼生理结构的特性，上颚几乎全是骨头，很难刺穿，所以要求竿子很硬，很暴力，加上炸水后的读秒（可别说读秒也不知道），黑鱼会钻回水草深处，所以要求竿子有足够的强度连草带蛙一起拖上来，加上一般就算暴力扬竿还是有可能没有刺穿，所以需要很迅速的直接拖上来，这样的结果就是动作很强悍，太牛B了，所以很爽，也因为上面的原因，一般竿子无法做到这点，所以有专业的雷竿！用强这个字来阐述这种钓黑鱼的方法，一点也不过分，所以，就叫雷强<br><strong>中地球</strong> ＝ 假饵钩到水下的障碍物而拉不出时称为中地球，也就是挂底</p>
<h1 id="路亚词典"><a href="#路亚词典" class="headerlink" title="路亚词典"></a>路亚词典</h1><h3 id="通用类"><a href="#通用类" class="headerlink" title="通用类"></a>通用类</h3><p>HIT - （中）<br>GET - （上）<br>BREAK - （断）<br>RELEASE - （放回）<br>CATCH &amp; RELEASE - （钓后放回）<br>BOATGAME - 艇钓… OFFSHORE GAME<br>SHORE GAME - （岸钓）<br>LIGHTGAME - （小物钓）<br>SHORE JIGGING -（岸边铁板路亚钓）<br>TROLLING - （假饵拖钓）<br>CASTING - （拋掷）<br>SINKING(S) - （下沉）<br>SUSPEND(SP) - （悬浮）<br>FLOATING(F) - （浮水）<br>TOP WATER(TP) - （水面）<br>QUICK - （快）<br>SLOW - （慢）<br>BOUNCE（水底跳动）<br>UNDER HAND PITCH（反手抛投）<br>ITCH（抛投）</p>
<h3 id="钓具类"><a href="#钓具类" class="headerlink" title="钓具类"></a>钓具类</h3><p>ROD - 釣竿<br>ULTRA LIGHT (UL) - 超轻<br>LIGHT (L) - 轻<br>MEDIUM LIGHT (ML) - 中轻<br>MEDIUM (M) - 中<br>MEDIUM HARD (MH) - 中硬<br>HARD (H) - 硬<br>REEL - 钓轮… 转线器… 鲛…<br>HOOK - 勾<br>LURE - 路亚… 假饵… 拟饵…<br>GRIP - 夹…<br>PLIERS - 钳…<br>SINKER - 助沉物<br>SPINNING - 纺车式/直绞<br>BAITCAST - 双轴式/橫绞<br>JIG HEAD（铅头钩）</p>
<h3 id="假饵类"><a href="#假饵类" class="headerlink" title="假饵类"></a>假饵类</h3><p>SOFTBAIT(SB) - 软饵<br>HARDBAIT(HB) - 硬饵<br>BIGBAIT - 较大的饵<br>MINNOW - 米諾… 鰷魚型<br>SHAD - 鲱鱼型<br>CRANKBAIT - 摇摆型<br>VIBRA - 頻震型<br>POPPER - 撞水/爆竹型<br>PENCIL - 笔型<br>BANANA BOAT - 滑行船型<br>BOTTLE - 瓶型<br>CHUGGER - 叉口型<br>SPLASHING - 弹跳型<br>LIPLESS - 冇舌板型<br>SPOON - 匙型<br>JOINTED - 多节型<br>SWISHER - 旋叶噪音型<br>SPINNERBAIT - 覆合式旋转亮片型<br>WILLOW BLADE - 柳叶型转片<br>COROLADO BLADE - 科罗拉多型转片<br>BUZZBAIT - 嘈音螺旋型<br>SWIMBAIT - 游泳型<br>JERKBAIT - 抽动型<br>JIGHEAD - 汲头勾<br>RUBBERJIG - 橡胶裙摆汲头勾<br>WORM - 虫型软饵<br>GRUB - 蛆型软饵<br>LEECH - 蛭型软饵<br>SLUG - 蛞蝓型软饵<br>TUBE - 管型软饵<br>LIZARD - 蠑螈型软饵<br>CRAW FISH - 螫蝦型软饵<br>SHRIMP - 蝦型软饵<br>TAIL - 有尾型软饵<br>DOUBLE TAIL - 雙尾型软饵<br>FROG - 蛙型软饵<br>RUBBER JIG（胡须佬）</p>
<h3 id="钓组类"><a href="#钓组类" class="headerlink" title="钓组类"></a>钓组类</h3><p>NO SINKER RIG - 冇重型<br>TEXAS RIG - 德州钓组<br>SOUTH CAROLINA RIG - 南卡钓组<br>FLORIDA RIG - 福罗里达钓组<br>SPLITSHOT RIG - 分体式钓组<br>WACKY RIG –<br>JIGHEAD RIG –铅头钩钓组<br>DWONSHOT RIG –倒吊钓组<br>LADY RIG -</p>
<h3 id="鱼种类（海水）"><a href="#鱼种类（海水）" class="headerlink" title="鱼种类（海水）"></a>鱼种类（海水）</h3><p>AMBERJACK - 章雄(红甘)<br>BARRAMUNDI - 盲鰽… 金目鲈<br>DOLPHINFISH - 鬼头刀<br>FLATHEAD - 牛秋<br>FLOUNDER - 地寶… 左口.. 鰈魚… 鮃魚<br>GROUPER - 斑<br>GIANT TREVALLY(GT) - 牛廣<br>QUEENFISH - 黃祥<br>RED SNAPPER - 红油<br>RED DRUM - 红鼓… 星鲈<br>ROCKFISH(RF) - 根鱼<br>SABER FISH - 牙帶鱼… 白帶鱼… 太刀鱼<br>SEABASS - 海鲈… 百花鲈… 七星鲈<br>SKIPJACK TUNA - 正鲣<br>YELLOWFIN TUNA - 黃鳍杜仲… 黃鳍鮪</p>
<h3 id="鱼种类（淡水）"><a href="#鱼种类（淡水）" class="headerlink" title="鱼种类（淡水）"></a>鱼种类（淡水）</h3><p>Pseudorasbora parva - 麦穗鱼、尖嘴仔、车栓仔、尖嘴鱼仔<br>SNAKEHEAD - 蛇头鱼… 鳢鱼… 生鱼<br>BLACKBASS(BB) - 黑鲈… 加州鲈<br>Gymnocypris przewalskii - 青海湖裸鲤<br>Alligator Gar - （鳄雀鳝）<br>Chinoodsalm on - 王鲑（大鳞大马哈鱼）<br>Pirarucu - （巨骨舌鱼）<br>Wels - （六须鲇）<br>Taimen - （哲罗鱼）<br>Huchen - （多瑙河哲罗）<br>Leuciscus idus - （高体雅罗鱼）<br>SquafIObarb us curriCulus - 赤眼鳟<br>Culter alburnus（Topmouth culter ） - 翘嘴鲌<br>Korean piscivorous chub （Opsariichthys bidens Gunther）- 马口鱼<br>Elopichthys bambusa （Yellowcheck carp）- 鳡鱼<br>Amur pike - 狗鱼<br>Striped mullet - 鲻（乌头）<br>dogtooth - 犬齿鱿</p>
<h1 id="有关饵"><a href="#有关饵" class="headerlink" title="有关饵"></a>有关饵</h1><p><strong>与材质有关：</strong><br>Hard Bait,硬饵；Soft Bait,软饵；<br><strong>与泳层有关：</strong><br>Top Water Bait，水面系列，不会下沉，包括大多数Pencil (铅笔)，还有Popper(波扒)等；<br>F-Float，浮水；浮水形的路亚，是在收线或抽动时下潜（通过压水板的作用），停下来时，路亚会慢慢上浮到水面；<br>S-sinking，路亚的重量大于浮力，入水后会一直下沉到水底；<br>SP-suspend，悬浮型，入水后会缓慢下潜到某个深度。<br>Shallow，浅水；MIdWater，中层；Deep Water，深水；<br><strong>与环境有关：</strong><br>FW-Fresh Water，淡水用饵；<br>SW-Salt Water，海水用饵。<br><strong>与泳姿有关：</strong><br>VIB-Vibrate，振动，颤动；<br><strong>与声音有关：</strong><br>Rattle-发出格格声；（如Rattle Snake，响尾蛇）<br><strong>与形状有关：</strong><br>lip-舌板，lipless-无舌板；<br>Pencil，铅笔，无舌板；Popper，波扒；Minnow ，米诺，一种鱼型硬饵；</p>
<p>Crank-摇摆型，多指肥仔那一类；<br>Prop-Propeller，带螺旋桨的一类；<br>Spoon/blade,指铁片类；<br>Spinner，旋转铁片；<br>Jig-铅头钩，多指上下急动，乱跳；Jigging，玩铁板；<br>Drop shot-倒吊；<br>Buzz Bait-发出响声的一类；</p>
<h1 id="中英文对照"><a href="#中英文对照" class="headerlink" title="中英文对照:"></a>中英文对照:</h1><p>FHARD BAITS (硬式路亞):<br>MINNOW(米诺型)﹐<br>CRANK (曲折行進型)﹐<br>POPPER (撞水型)﹐<br>PANCEL (鉛筆型)﹐<br>VIBE (震動型)<br>SOFT BAITS (軟式路亞) ﹕<br>WORM﹐TRAILER﹐GRUB﹐CRAW﹐LIZARD﹐TUBE﹐JERKBAIT﹐PANFISH﹐FROG (有些無中文)<br>WIRE BAITS (金屬線組合型路亞) ﹕<br>SPINNERBAIT (螺旋型)﹐<br>IN-LINE SPINNERBAIT (IN-LINE螺旋型)﹐<br>BUZZBAIT (嘈音螺旋型)<br>SPOON (匙型路亞)<br>JIGBAIT (鐵板路亞)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[IoT知识点汇总]]></title>
      <url>http://cuiqingwei.github.io/2016/05/13/2016-05-13-IoT%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<h2 id="IoT-Struct"><a href="#IoT-Struct" class="headerlink" title="IoT Struct"></a>IoT Struct</h2><div align="center"><br><img src="/img/20160513/struct.jpg" alt="IoT Struct"><br></div>

<a id="more"></a>
<h2 id="IoT-Protocol"><a href="#IoT-Protocol" class="headerlink" title="IoT Protocol"></a>IoT Protocol</h2><table>
<thead>
<tr>
<th>Protocol</th>
<th>CoAP</th>
<th>XMPP</th>
<th>RESTful HTTP</th>
<th>MQTT</th>
</tr>
</thead>
<tbody>
<tr>
<td>Transport</td>
<td>UDP</td>
<td>TCP</td>
<td>TCP</td>
<td>TCP</td>
</tr>
<tr>
<td>Messaging</td>
<td>Request/Response</td>
<td>Publish/Subscribe Request/Response</td>
<td>Request/Response</td>
<td>Publish/Subscribe Request/Response</td>
</tr>
<tr>
<td>2G, 3G, 4G Suitability (1000s nodes)</td>
<td>Excellent</td>
<td>Excellent</td>
<td>Excellent</td>
<td>Excellent</td>
</tr>
<tr>
<td>LLN Suitability (1000s nodes)</td>
<td>Excellent</td>
<td>Fair</td>
<td>Fair</td>
<td>Fair</td>
</tr>
<tr>
<td>Compute Resources</td>
<td>10Ks RAM/Flash</td>
<td>10Ks RAM/Flash</td>
<td>10Ks RAM/Flash</td>
<td>10Ks RAM/Flash</td>
</tr>
<tr>
<td>Success Storied</td>
<td>Utility Field Area Networks</td>
<td>Remote management of consumer white goods</td>
<td>Smart Energy Profile 2 (premise energy management/home services)</td>
<td>Extending enterprise messaging into IoT applications</td>
</tr>
</tbody>
</table>
<h3 id="CoAP"><a href="#CoAP" class="headerlink" title="CoAP"></a>CoAP</h3><p><div align="center"><br><img src="/img/20160513/coap.jpg" alt="coap"><br></div><br>CoAP是受限制的应用协议(Constrained Application Protocol)的代名词。在最近几年的时间中，专家们预测会有更多的设备相互连接，而这些设备的数量将远超人类的数量。在这种大背景下，物联网和M2M技术应运而生。虽然对人而言，连接入互联网显得方便容易，但是对于那些微型设备而言接入互联网非常困难。在当前由PC机组成的世界，信息交换是通过TCP和应用层协议HTTP实现的。但是对于小型设备而言，实现TCP和HTTP协议显然是一个过分的要求。为了让小设备可以接入互联网，CoAP协议被设计出来。CoAP是一种应用层协议，它运行于UDP协议之上而不是像HTTP那样运行于TCP之上。CoAP协议非常的小巧，最小的数据包仅为4字节。</p>
<h3 id="XMPP"><a href="#XMPP" class="headerlink" title="XMPP"></a>XMPP</h3><p>XMPP是一种基于标准通用标记语言的子集XML的协议，它继承了在XML环境中灵活的发展性。因此，基于XMPP的应用具有超强的可扩展性。经过扩展以后的XMPP可以通过发送扩展的信息来处理用户的需求，以及在XMPP的顶端建立如内容发布系统和基于地址的服务等应用程 序。而且，XMPP包含了针对服务器端的软件协议，使之能与另一个进行通话，这使得开发者更容易建立客户应用程序或给一个配好系统添加功能。</p>
<h3 id="RESTful-HTTP"><a href="#RESTful-HTTP" class="headerlink" title="RESTful HTTP"></a>RESTful HTTP</h3><p>REST 指的是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计就是 RESTful。</p>
<p>Web 应用程序最重要的 REST 原则是，客户端和服务器之间的交互在请求之间是无状态的。从客户端到服务器的每个请求都必须包含理解请求所必需的信息。如果服务器在请求之间的任何时间点重启，客户端不会得到通知。此外，无状态请求可以由任何可用服务器回答，这十分适合云计算之类的环境。客户端可以缓存数据以改进性能。</p>
<h3 id="MQTT"><a href="#MQTT" class="headerlink" title="MQTT"></a>MQTT</h3><p><div align="center"><br><img src="/img/20160513/MQTT.png" alt="mqtt"><br></div><br>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。</p>
<h2 id="主流协议标准"><a href="#主流协议标准" class="headerlink" title="主流协议标准"></a>主流协议标准</h2><h3 id="Z-Wave"><a href="#Z-Wave" class="headerlink" title="Z-Wave"></a>Z-Wave</h3><blockquote>
<p>Z-Wave是一种新兴的基于射频的、低成本、低功耗、高可靠、适于网络的短距离无线通信技术。工作频带为908.42MHz(美国)~868.42MHz(欧洲)，采用FSK(BFSK/GFSK)调制方式，数据传输速率为9.6 kbps，信号的有效覆盖范围在室内是30m，室外可超过100m，适合于窄带宽应用场合。随着通信距离的增大，设备的复杂度、功耗以及系统成本都在增加，相对于现有的各种无线通信技术，Z-Wave技术将是最低功耗和最低成本的技术，有力地推动着低速率无线个人区域网。</p>
</blockquote>
<h3 id="Zigbee"><a href="#Zigbee" class="headerlink" title="Zigbee"></a>Zigbee</h3><blockquote>
<p>ZigBee是基于IEEE802.15.4标准的低功耗局域网协议。根据国际标准规定，ZigBee技术是一种短距离、低功耗的无线通信技术。这一名称（又称紫蜂协议）来源于蜜蜂的八字舞，由于蜜蜂(bee)是靠飞翔和“嗡嗡”(zig)地抖动翅膀的“舞蹈”来与同伴传递花粉所在方位信息，也就是说蜜蜂依靠这样的方式构成了群体中的通信网络。其特点是近距离、低复杂度、自组织、低功耗、低数据速率。主要适合用于自动控制和远程控制领域，可以嵌入各种设备。简而言之，ZigBee就是一种便宜的，低功耗的近距离无线组网通讯技术。</p>
</blockquote>
<h3 id="6LoWPAN"><a href="#6LoWPAN" class="headerlink" title="6LoWPAN"></a>6LoWPAN</h3><blockquote>
<p>IETF 6LoWPAN取得的突破是得到一种非常紧凑、高效的IP实现，消除了以前造成各种专门标准和专有协议的因素。这在工业协议（BACNet、LonWorks、通用工业协议和监控与数据采集）领域具有特别的价值。这些协议最初开发是为了提供特殊的行业特有的总线和链路(从控制器区域网总线到AC电源线)上的互操作性。</p>
</blockquote>
<h3 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h3><p><div align="center"><br><img src="/img/20160513/thread.jpg" alt="thread"><br></div></p>
<blockquote>
<p>Thread是一种基于简化版IPv6的网状网络协议，该协议由行业领先的多家技术公司联合开发，旨在实现家庭中各种产品间的互联，以及与互联网和云的连接。Thread易于安装、高度安全，并且可扩展到数百台设备。Thread基于低成本、低功耗的802.15.4芯片组开发。目前正在使用的大量产品，只需一次简单的软件升级，便可支持Thread。</p>
</blockquote>
<h2 id="相关通讯技术"><a href="#相关通讯技术" class="headerlink" title="相关通讯技术"></a>相关通讯技术</h2><h3 id="NFC"><a href="#NFC" class="headerlink" title="NFC"></a>NFC</h3><blockquote>
<p>NFC近场通信技术是由非接触式射频识别（RFID）及互联互通技术整合演变而来，在单一芯片上结合感应式读卡器、感应式卡片和点对点的功能，能在短距离内与兼容设备进行识别和数据交换。工作频率为13.56MHz.但是使用这种手机支付方案的用户必须更换特制的手机。目前这项技术在日韩被广泛应用。手机用户凭着配置了支付功能的手机就可以行遍全国：他们的手机可以用作机场登机验证、大厦的门禁钥匙、交通一卡通、信用卡、支付卡等等。</p>
</blockquote>
<h3 id="WiFi"><a href="#WiFi" class="headerlink" title="WiFi"></a>WiFi</h3><blockquote>
<p>Wi-Fi是一种可以将个人电脑、手持设备（如pad、手机）等终端以无线方式互相连接的技术，事实上它是一个高频无线电信号。无线保真是一个无线网络通信技术的品牌，由Wi-Fi联盟所持有。目的是改善基于IEEE 802.11标准的无线网路产品之间的互通性。有人把使用IEEE 802.11系列协议的局域网就称为无线保真。甚至把无线保真等同于无线网际网路（Wi-Fi是WLAN的重要组成部分）</p>
</blockquote>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><blockquote>
<p>UDP协议的全称是用户数据报协议，在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。在OSI模型中，在第四层——传输层，处于IP协议的上一层。UDP有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。UDP用来支持那些需要在计算机之间传输数据的网络应用。包括网络视频会议系统在内的众多的客户/服务器模式的网络应用都需要使用UDP协议。UDP协议从问世至今已经被使用了很多年，虽然其最初的光彩已经被一些类似协议所掩盖，但是即使是在今天UDP仍然不失为一项非常实用和可行的网络传输层协议。</p>
</blockquote>
<h3 id="uIP"><a href="#uIP" class="headerlink" title="uIP"></a>uIP</h3><blockquote>
<p>uIP 由瑞典计算机科学学院(网络嵌入式系统小组)的Adam Dunkels 开发。其源代码由C 语言编写，并完全公开。</p>
<p>uIP 协议栈去掉了完整的 TCP/IP 中不常用的功能，简化了通讯流程，但保留了网络通信必须使用的协议，设计重点放在了<br>IP/TCP/ICMP/UDP/ARP 这些网络层和传输层协议上，保证了其代码的通用性和结构的稳定性。</p>
</blockquote>
<h3 id="DTLS"><a href="#DTLS" class="headerlink" title="DTLS"></a>DTLS</h3><blockquote>
<p>DTLS(Datagram Transport Layer Security)即数据包传输层安全性协议。TLS不能用来保证UDP上传输的数据的安全，因此Datagram TLS试图在现存的TLS协议架构上提出扩展，使之支持UDP，即成为TLS的一个支持数据报传输的版本。DTLS 1.0基于TLS 1.1, DTLS 1.2基于TLS 1.2。</p>
</blockquote>
<h3 id="Websocket"><a href="#Websocket" class="headerlink" title="Websocket"></a>Websocket</h3><blockquote>
<p>WebSocket protocol 是HTML5一种新的协议。它是实现了浏览器与服务器全双工通信(full-duplex)。</p>
</blockquote>
<h3 id="SOAP"><a href="#SOAP" class="headerlink" title="SOAP"></a>SOAP</h3><blockquote>
<p>简单对象访问协议是交换数据的一种协议规范，是一种轻量的、简单的、基于XML（标准通用标记语言下的一个子集）的协议，它被设计成在WEB上交换结构化的和固化的信息。</p>
</blockquote>
<h2 id="物联网相关平台"><a href="#物联网相关平台" class="headerlink" title="物联网相关平台"></a>物联网相关平台</h2><h3 id="Yeelink"><a href="#Yeelink" class="headerlink" title="Yeelink"></a>Yeelink</h3><p>主页: <a href="http://www.yeelink.net/" target="_blank" rel="external">http://www.yeelink.net/</a></p>
<h3 id="SiteWhere"><a href="#SiteWhere" class="headerlink" title="SiteWhere"></a>SiteWhere</h3><blockquote>
<p>The Open Platform for the Internet of Things ™</p>
<p>这个项目提供了一个完整的平台，来管理物联网设备、收集数据并用外部系统进行数据整合。SiteWhere发行版本可以下载或在亚马逊云中使用。它还集成了多个大数据工具，包括MongoDB和ApacheHBase。</p>
</blockquote>
<p>主页: <a href="http://www.sitewhere.org/" target="_blank" rel="external">http://www.sitewhere.org/</a></p>
<h3 id="DeviceHive"><a href="#DeviceHive" class="headerlink" title="DeviceHive"></a>DeviceHive</h3><blockquote>
<p>该项目提供一个支持连接设备到物联网的机器对机器通信框架。它包括支持创建网络易于使用基于web的管理软件、应用安全规则和监控设备。该网站提供内置有DeviceHub的样本项目，而且它也有一个“游乐场”部分，允许用户使用DeviceHub在线去看它是如何工作的。</p>
</blockquote>
<p>主页: <a href="http://www.devicehive.com/" target="_blank" rel="external">http://www.devicehive.com/</a></p>
<h3 id="Devicehub-net"><a href="#Devicehub-net" class="headerlink" title="Devicehub.net"></a>Devicehub.net</h3><blockquote>
<p>Devicehub.net描述自己为“物联网的开源支柱”。它是一个基于云的服务，存储物联网相关的数据，提供数据的可视化并允许用户在网页上控制物联网设备。开发者使用该服务创建跟踪健康信息的应用程序，监视孩子的位置，自动化家电，跟踪车辆数据，监测天气等等。</p>
<p>主页: <a href="http://devicehub.net/" target="_blank" rel="external">http://devicehub.net/</a></p>
</blockquote>
<h3 id="IoT-Toolkit"><a href="#IoT-Toolkit" class="headerlink" title="IoT Toolkit"></a>IoT Toolkit</h3><blockquote>
<p>这个项目背后的组织正使用各种工具工作，来集成多个物联网相关的传感器网络和协议。虽然主要的项目时一个智能对象应用程序，但该组织也工作在一个HTTP对Coap的情景下，一个带有嵌入式软件代理的应用程序框架等等。在硅谷，他们也发起了一个“遇见”组织，面向对物联网开发有情趣的人。</p>
</blockquote>
<p>主页: <a href="http://iot-toolkit.com/" target="_blank" rel="external">http://iot-toolkit.com/</a></p>
<h3 id="Mango-芒果"><a href="#Mango-芒果" class="headerlink" title="Mango(芒果)"></a>Mango(芒果)</h3><blockquote>
<p>“芒果”自称是“世界上最流行的开源的机器对机器软件”。基于网络的它支持多个平台。它的主要功能包括支持多协议和数据库、元点、用户自定义事件、导入/导出等等。</p>
</blockquote>
<h3 id="Nimbits"><a href="#Nimbits" class="headerlink" title="Nimbits"></a>Nimbits</h3><blockquote>
<p>Nimbits可以存储和处理特定的数据类型，数据可以是时间标记的或地理标记的。作为服务的公用平台是可用的，或者你也可以下载这个软件并部署它到谷歌应用引擎、或亚马逊EC2上的J2EE服务器上、或一个树莓派上。它支持多种编程语言，包括Arduino、JavaScript、HTML或Nimbits.io Java库。</p>
</blockquote>
<h3 id="OpenRemote"><a href="#OpenRemote" class="headerlink" title="OpenRemote"></a>OpenRemote</h3><blockquote>
<p>OpenRemote为基于家居的爱好者、集成商、分销商和制造商提供了四种不同的集成工具。它支持十几种不同的现有协议，允许用户创建几乎任何类型的智能设备（他们能够想到和使用任何支持java的设备来控制它）。该平台是开源的，但在设计和产品开发过程中，该公司也出售各种支持、电子书等工具来进行帮助。</p>
</blockquote>
<h3 id="ThingSpeak"><a href="#ThingSpeak" class="headerlink" title="ThingSpeak"></a>ThingSpeak</h3><blockquote>
<p>ThingSpeak可以处理HTTP请求，并存储和处理数据。这个开放数据平台的主要功能包括开放应用程序、实时数据收集、地理位置数据、数据处理和可视化、设备状态信息和插件。它可以集成多个硬件和软件平台，包括Arduino、树莓派、ioBridge/RealTime.io、Electic lmp、移动和网络应用、社会网络和MATLAB数据分析。除了开源版本，还提供托管服务。</p>
</blockquote>
<h2 id="物联网相关嵌入式操作系统"><a href="#物联网相关嵌入式操作系统" class="headerlink" title="物联网相关嵌入式操作系统"></a>物联网相关嵌入式操作系统</h2><blockquote>
<p>实时系统（Real-time operating system,RTOS）的正确性不仅依赖系统计算的逻辑结果，还依赖于产生这个结果的时间。实时系统能够在指定或者确定的时间内完成系统功能和外部或内部、同步或异步时间做出响应的系统。因此实时系统应该在事先先定义的时间范围内识别和处理离散事件的能力；系统能够处理和储存控制系统所需要的大量数据。</p>
</blockquote>
<h3 id="Contiki"><a href="#Contiki" class="headerlink" title="Contiki"></a>Contiki</h3><p><strong>相关支持</strong>: <code>CoAP</code>,<code>TCP/IP网络支持</code>,<code>RPL路由</code>,<code>6Lowpan 报文压缩</code>,<code>Rime无线协议栈</code></p>
<blockquote>
<p>Contiki是一个适用于有内存的嵌入式系统的开源的、高可移植的、支持网络的多任务操作系统。包括一个多任务核心、TCP/IP 堆栈、程序集以及低能耗的无线通讯堆栈。Contiki 采用 C 语言开发的非常小型的嵌入式操作系统，运行只需要几K的内存。</p>
</blockquote>
<p>Contiki 是一个小型的，开源的，极易移植的多任务电脑操作系统。它专门设计以适用于一系列的内存受限的网络系统，包括从8位电脑到微型控制器的嵌入系统。它的名字来自于托尔·海尔达尔的康提基号。</p>
<p>Contiki只需几kilobyte的代码和几百字节的内存就能提供多任务环境和内建TCP/IP支持。</p>
<h3 id="LwIP"><a href="#LwIP" class="headerlink" title="LwIP"></a>LwIP</h3><blockquote>
<p>LwIP是Light Weight (轻型)IP协议，有无操作系统的支持都可以运行。LwIP实现的重点是在保持TCP协议主要功能的基础上减少对RAM 的占用，它只需十几KB的RAM和40K左右的ROM就可以运行，这使LwIP协议栈适合在低端的嵌入式系统中使用。</p>
<p>lwIP协议栈主要关注的是怎么样减少内存的使用和代码的大小，这样就可以让lwIP适用于资源有限的小型平台例如嵌入式系统。为了简化处理过程和内存要求，lwIP对API进行了裁减，可以不需要复制一些数据。</p>
</blockquote>
<h3 id="FreeRTOS"><a href="#FreeRTOS" class="headerlink" title="FreeRTOS"></a>FreeRTOS</h3><blockquote>
<p>FreeRTOS是一个迷你操作系统内核的小型嵌入式系统。作为一个轻量级的操作系统，功能包括：任务管理、时间管理、信号量、消息队列、内存管理、记录功能等，可基本满足较小系统的需要。</p>
<p>由于RTOS需占用一定的系统资源(尤其是RAM资源)，只有μC/OS-II、embOS、salvo、FreeRTOS等少数实时操作系统能在小RAM单片机上运行。相对μC/OS-II、embOS等商业操作系统，FreeRTOS操作系统是完全免费的操作系统，具有源码公开、可移植、可裁减、调度策略灵活的特点，可以方便地移植到各种单片机上运行，其最新版本为8.0.0版。</p>
</blockquote>
<h3 id="mbed-OS"><a href="#mbed-OS" class="headerlink" title="mbed OS"></a>mbed OS</h3><p><div align="center"><br><img src="/img/20160513/mbedos.png" alt="mbed OS"><br></div><br><strong>相关支持</strong>: <code>BLE</code>,<code>Celluar</code>,<code>WIFI</code>,<code>Zigbee</code>,<code>6LoWPAN</code></p>
<blockquote>
<p>一款基于ARM Cortex-M处理器的设备所设计的免费操作系统，配有安全、通讯和设备管理模块，支持低功率智能蓝牙标准、2G、3G与CDMA通信技术、Thread、Wi-Fi、802.15.4/6LoWPAN、TLS/DTLS、CoAP、HTTP、MQTT以及轻量级的M2M。而只需32-64kbRAM和256 kb闪存的配置，适合在小设备上运行。</p>
<p>mbed™ OS is an operating system for IoT devices and is especially well-suited to run in energy constrained environments. The OS includes the connectivity, security and device management functionalities required in every IoT device.</p>
</blockquote>
<ul>
<li>Connectivity protocol stack support for Bluetooth® low energy, Cellular, Ethernet, Thread, Wi-fi®,  Zigbee IP, Zigbee NAN, 6LoWPAN</li>
<li>Automation of power management</li>
<li>Software asset protection and secure firmware updates for device security &amp; management</li>
<li>Supports a wide range of ARM Cortex-M based hardware platforms from major MCU vendors</li>
<li>Support for OMA Lightweight M2M protocol for device management</li>
<li>Updatable and secure devices at the edge capable of additional processing and functionality</li>
<li>Banking-class end-to-end IP security across the communication channels through TLS &amp; DTLS</li>
<li>Future proof designs by supporting all the key open standards for connectivity and device management</li>
</ul>
<h3 id="emOS"><a href="#emOS" class="headerlink" title="emOS"></a>emOS</h3><blockquote>
<p>embOS是一个优先级控制的多任务系统，是专门为各种微控制器应用于实时系统应用的嵌入式操作系统．是一个具有最小RAM和ROM占用的、高速的、多功能的高性能工具。</p>
<p>贯穿embOS的整个开发过程，微控制器有限的资源一直是开发者所顾忌的。五年来，该RTOS的内部结构已经被优化为不同客户的不同应用中，以满足工业需要。对不同微控制器的完全源码，使开发者很方便用实时操作系统构建实时程序。embOS是高度模块化的，只有需要的函数才被调用，占用的ROM非常小。 最小的内存占用：1kb ROM,30字节 RAM;由于提供源码文件，你可以用embOS灵活定制系统以满足实际需求。<br>任务之间可以通过旗语、邮箱和事件安全便利地通讯。</p>
</blockquote>
<h3 id="Salvo"><a href="#Salvo" class="headerlink" title="Salvo"></a>Salvo</h3><blockquote>
<p>Salvo™ is the first Real-Time Operating System (RTOS) designed expressly for very-low-cost embedded systems with severely limited program and data memory. With Salvo, you can quickly create low-cost, smart and sophisticated embedded products. Pumpkin™ has currently certified Salvo for use with:</p>
</blockquote>
<h3 id="μC-OS-II"><a href="#μC-OS-II" class="headerlink" title="μC/OS-II"></a>μC/OS-II</h3><blockquote>
<p>uC/OS II(Micro Control Operation System Two) 是一个可以基于ROM运行的、可裁减的、抢占式、实时多任务内核，具有高度可移植性，特别适合于微处理器和控制器，是和很多商业操作系统性能相当的实时操作系统(RTOS)。</p>
<p>为了提供最好的移植性能，uC/OS II最大程度上使用ANSI C语言进行开发，并且已经移植到近40多种处理器体系上，涵盖了从8位到64位各种CPU(包括DSP)。 uC/OS II可以简单的视为一个多任务调度器，在这个任务调度器之上完善并添加了和多任务操作系统相关的系统服务，如信号量、邮箱等。其主要特点有公开源代码，代码结构清晰、明了，注释详尽，组织有条理，可移植性好，可裁剪，可固化。内核属于抢占式，最多可以管理60个任务。从1992年开始，由于高度可靠性、移植性和安全性，uC/OS II已经广泛使用在从照相机到航空电子产品的各种应用中。</p>
</blockquote>
<h3 id="TinyOS"><a href="#TinyOS" class="headerlink" title="TinyOS"></a>TinyOS</h3><p>协议支持: <code>CoAP</code></p>
<p><a href="http://tinyos.stanford.edu/tinyos-wiki/index.php/CoAP_-13" target="_blank" rel="external">TinyCoAP</a></p>
<blockquote>
<p>TinyOS是UC Berkeley（加州大学伯克利分校）开发的开放源代码操作系统，专为嵌入式无线传感网络设计，操作系统基于构件（component-based）的架构使得快速的更新成为可能，而这又减小了受传感网络存储器限制的代码长度。</p>
<p>TinyOS的构件包括网络协议、分布式服务器、传感器驱动及数据识别工具。其良好的电源管理源于事件驱动执行模型，该模型也允许时序安排具有灵活性。TinyOS已被应用于多个平台和感应板中。</p>
</blockquote>
<h3 id="MQX"><a href="#MQX" class="headerlink" title="MQX"></a>MQX</h3><blockquote>
<p>Freescale MQX™ RTOS a full-featured complimentary real-time operating system including the MQX™ Kernel, TCP/IP stack (RTCS), embedded MS-DOS file system (MFS), USB host/device stack, and more. The MQX™ multitasking kernel provides pre-emptive scheduling, fast interrupt response, extensive inter-process communication and synchronization facilities. MQX RTOS includes its own peripheral drivers.</p>
</blockquote>
<h3 id="QNX"><a href="#QNX" class="headerlink" title="QNX"></a>QNX</h3><blockquote>
<p>QNX是由加拿大QSSL公司（QNX Software System Ltd.）开发的分布式实时操作系统。该操作系统既能运行于以Intel X86、Pentium等CPU为核心硬件环境下，也能运行于以PowerPC、MIPS等CPU为核心的硬件环境。QNX操作系统符合POSIX基本标准和实时标准，使其应用可以方便的进行移植。</p>
</blockquote>
<h3 id="OpenWRT"><a href="#OpenWRT" class="headerlink" title="OpenWRT"></a>OpenWRT</h3><blockquote>
<p>OpenWrt 可以被描述为一个嵌入式的 Linux 发行版，（主流路由器固件有 dd-wrt,tomato,openwrt三类）而不是试图建立一个单一的、静态的系统。OpenWrt的包管理提供了一个完全可写的文件系统，从应用程序供应商提供的选择和配置，并允许您自定义的设备，以适应任何应用程序。</p>
<p>对于开发人员，OpenWrt 是使用框架来构建应用程序，而无需建立一个完整的固件来支持；对于用户来说，这意味着其拥有完全定制的能力，可以用前所未有的方式使用该设备。</p>
</blockquote>
<h3 id="RIOT"><a href="#RIOT" class="headerlink" title="RIOT"></a>RIOT</h3><p>项目首页: <a href="http://riot-os.org/" target="_blank" rel="external">http://riot-os.org/</a><br>平台: <code>MSP430</code>, <code>ARM7</code>, <code>Cortex-M0</code>, <code>Cortex-M3</code>,<code>Cortex-M4</code>,<code>x86</code></p>
<blockquote>
<p>RIOT自称为“友好的物联网操作系统”。RIOT是FeuerWhere项目的分支，首次亮相在2013年。它的目的是既开发者友好又资源友好。它支持多种架构，包括MSP430、ARM7、Cortex-M0、Cortex-M3、Cortex-M4和标准的x86电脑。</p>
</blockquote>
<h1 id="物联网相关库"><a href="#物联网相关库" class="headerlink" title="物联网相关库"></a>物联网相关库</h1><h2 id="CoAP协议"><a href="#CoAP协议" class="headerlink" title="CoAP协议"></a>CoAP协议</h2><h3 id="libcoap"><a href="#libcoap" class="headerlink" title="libcoap"></a>libcoap</h3><p>语言: <code>C</code></p>
<p>主页: <a href="http://sourceforge.net/projects/libcoap/" target="_blank" rel="external">http://sourceforge.net/projects/libcoap/</a></p>
<blockquote>
<p>Lightweight application-protocol for devices that are constrained their resources such as computing power, RF range, memory, bandwith, or network packet sizes. This protocol, CoAP, is developed in the IETF working group “CoRE”, <a href="http://6lowapp.net" target="_blank" rel="external">http://6lowapp.net</a>.</p>
</blockquote>
<h3 id="jCoAP"><a href="#jCoAP" class="headerlink" title="jCoAP"></a>jCoAP</h3><p>语言: <code>Java</code></p>
<p>主页: <a href="https://code.google.com/p/jcoap/" target="_blank" rel="external">https://code.google.com/p/jcoap/</a></p>
<blockquote>
<p>jCoAP is a Java Library implementing the Constrained Application Protocol (CoAP)</p>
</blockquote>
<h3 id="Node-CoAP"><a href="#Node-CoAP" class="headerlink" title="Node-CoAP"></a>Node-CoAP</h3><p>语言: <code>Javascript</code> (Nodejs)</p>
<p>主页: <a href="https://github.com/mcollina/node-coap" target="_blank" rel="external">https://github.com/mcollina/node-coap</a></p>
<blockquote>
<p>node-coap is a client and server library for CoAP modelled after the http module.</p>
</blockquote>
<h3 id="coap"><a href="#coap" class="headerlink" title="coap"></a>coap</h3><p>语言: <code>Python</code></p>
<p>主页: <a href="https://github.com/openwsn-berkeley/coap" target="_blank" rel="external">https://github.com/openwsn-berkeley/coap</a></p>
<blockquote>
<p>A CoAP Python library</p>
<p>This package implements the Constrained Application Protocol (CoAP) developed by the IETF CORE working group.</p>
</blockquote>
<h3 id="Californium-Cf-CoAP"><a href="#Californium-Cf-CoAP" class="headerlink" title="Californium (Cf) CoAP"></a>Californium (Cf) CoAP</h3><p>语言: <code>Java</code></p>
<p>主页: <a href="https://github.com/mkovatsc/Californium" target="_blank" rel="external">https://github.com/mkovatsc/Californium</a></p>
<blockquote>
<p>Californium (Cf) is an open source implementation of the Constrained Application Protocol (CoAP). It is written in Java and targets unconstrained environments such as back-end service infrastructures (e.g., proxies, resource directories, or management services) and less constrained environments such as embedded devices running Linux (e.g., smart home controllers or vehicle sensors). Californium (Cf) has been running code for the IETF standardization of CoAP and was recently reimplemented to straighten changed design decisions, but also to improve its performance with focus on scalability. The new implementation was successfully tested at the ETSI CoAP#3 and OMA LWM2M Plugtests in November 2013.</p>
</blockquote>
<h2 id="REST"><a href="#REST" class="headerlink" title="REST"></a>REST</h2><h3 id="cJSON"><a href="#cJSON" class="headerlink" title="cJSON"></a>cJSON</h3><p>语言: <code>C</code></p>
<p>主页: <a href="http://sourceforge.net/projects/cjson/" target="_blank" rel="external">http://sourceforge.net/projects/cjson/</a></p>
<blockquote>
<p>JSON(JavaScriptObject Notation)是一种轻量级的数据交换格式。它基于JavaScript的一个子集。JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯。这些特性使JSON成为理想的数据交换语言。易于人阅读和编写，同时也易于机器解析和生成。</p>
</blockquote>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="cURL"><a href="#cURL" class="headerlink" title="cURL"></a>cURL</h3><p>语言: <code>C</code></p>
<p>主页: <a href="http://curl.haxx.se/" target="_blank" rel="external">http://curl.haxx.se/</a></p>
<blockquote>
<p>curl是利用URL语法在命令行方式下工作的开源文件传输工具。它被广泛应用在Unix、多种Linux发行版中，并且有DOS和Win32、Win64下的移植版本。</p>
</blockquote>
<h3 id="HiveMQ"><a href="#HiveMQ" class="headerlink" title="HiveMQ"></a>HiveMQ</h3><p>语言: <code>Java</code></p>
<p>主页: <a href="http://www.hivemq.com/" target="_blank" rel="external">http://www.hivemq.com/</a></p>
<blockquote>
<p>HiveMQ 是一个企业级的 MQTT 代理，主要用于企业和新兴的机器到机器M2M通讯和内部传输，最大程度的满足可伸缩性、易管理和安全特性。提供免费的个人版。HiveMQ 提供了开源的插件开发包。</p>
</blockquote>
<h2 id="物联网书籍"><a href="#物联网书籍" class="headerlink" title="物联网书籍"></a>物联网书籍</h2><table>
<thead>
<tr>
<th>书名</th>
<th>作者</th>
<th>日期</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.packtpub.com/application-development/learning-internet-things" target="_blank" rel="external">Learning Internet of Things</a></td>
<td>Peter Waher</td>
<td>2015.02</td>
<td>Book &amp; Ebook</td>
<td></td>
</tr>
<tr>
<td><a href="http://designiot.phodal.com" target="_blank" rel="external">一步步搭建物联网系统</a></td>
<td>Phodal Fengda &amp; Fortware</td>
<td>2014.11</td>
<td>电子书</td>
<td>-</td>
</tr>
<tr>
<td>[Learning Internet of Things]</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<h2 id="物联网相关书籍"><a href="#物联网相关书籍" class="headerlink" title="物联网相关书籍"></a>物联网相关书籍</h2><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><table>
<thead>
<tr>
<th>书名</th>
<th>作者</th>
<th>日期</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td> RESTful Web APIs</td>
<td>Leonard Richardson &amp; Mike Amundsen</td>
<td>2014.06</td>
<td>-</td>
</tr>
<tr>
<td> REST实战</td>
<td>韦伯 &amp; 帕拉斯泰迪斯</td>
<td>2011.09.</td>
<td>-</td>
</tr>
</tbody>
</table>
<h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><table>
<thead>
<tr>
<th>书名</th>
<th>作者</th>
<th>日期</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td> Arduino从基础到实践</td>
<td>Michael McRoberts</td>
<td>2013.03</td>
<td>-</td>
</tr>
<tr>
<td> Arduino Cookbook</td>
<td>Michael Margolis</td>
<td>2011.04</td>
<td>-</td>
</tr>
<tr>
<td> Raspberry Pi用户指南</td>
<td>Eben Upton</td>
<td>2013.08</td>
<td>-</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网站设计的最简主义]]></title>
      <url>http://cuiqingwei.github.io/2016/05/12/2016-05-12-%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%9C%80%E7%AE%80%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>之前在阮一峰的网络日志看到《网站设计的最简主义》，文中写到：</p>
<p>昨天，我看到了一个网站 (<a href="http://www.plaintxt.org" target="_blank" rel="external"><u>http://www.plaintxt.org</u></a>)，提倡最简主义（<strong>Minimalism</strong>）的设计，这也正是我的想法。我因此感到十分惊喜。所谓”最简主义”设计，就是说网页上没有不相关的内容与装饰，美工基本就是白底黑字，尽量少用图片和复杂的排版，给人一种非常简单朴素的感觉。</p>
<p><strong>Plaintxt.org</strong>的站长<strong>Scott</strong>说，他信奉”最简主义”设计，因为<strong>2000</strong>年下半年他去尼泊尔当志愿者。在那里，他只能用<strong>24.4K</strong>的<strong>Modem</strong>上网，这意味着一幅<strong>120K</strong>的图片，都要花将近1分钟才能看到。他在尼泊尔待了3年，再回到美国以后，彻底改变了对网站设计的看法，从此走上了宣传”最简主义”的道路。<br><a id="more"></a><br>至于我为什么喜欢”最简主义”，除了因为我喜欢简洁的东西以外，还因为我觉得将页面最简化，可以使访问者集中注意力，关注主要的内容。（顺便说一句，在读书上，我也喜欢”最简主义”的文字，就是说没有不相关的废话。）我认为，”最简主义”有利于节省访问者的时间，体现了对访问者的尊重，最终也有利于网站的成功。Google就是”最简主义”的一个典型，首页上就是只有一个长长的搜索框。</p>
<p>另外，在Plaintxt.org的首页上，Scott还说了一句很棒的话。他说：<strong>“我不是程序员，也不是设计师，我只是碰巧有一些想法和一台电脑。”（I am not a designer nor a coder. I’m just a guy with a point-of-view and a computer.）</strong>我很喜欢这句话，它也是我的心声。</p>
<p>赞同<em>最简主义</em>，因此，本人主页追求简洁朴素！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MEAN]]></title>
      <url>http://cuiqingwei.github.io/2016/03/09/2016-03-09-MEAN/</url>
      <content type="html"><![CDATA[<p>在 2002 年的一本著作中，David Weinberger 将发展迅速的 Web 内容描述成一个 <a href="http://www.smallpieces.com/?cm_mc_uid=46082469799714742187112&amp;cm_mc_sid_50200000=1474507563" target="_blank" rel="external">小块松散组合（Small Pieces Loosely Joined）</a>。这个比喻让我印象深刻，因为大家一般很容易认为 Web 是一个巨大的技术堆栈。实际上，您访问的每个网站都是库、语言与 Web 框架的一种独特组合。<br><a href="http://www.ibm.com/developerworks/web/tutorials/wa-lamp/wa-lamp.html" target="_blank" rel="external">LAMP堆栈</a> 是早期表现突出的开源 Web 技术集合之一：它使用 Linux® 作为操作系统，使用 Apache 作为 Web 服务器，使用 MySQL 作为数据库，并使用 Perl（或者 Python 和 PHP）作为生成基于 HTML Web 页面的编程语言。这些技术的出现并非为了一起联合工作。它们是独立的项目，由多位雄心勃勃的软件工程师前赴后继地整合在一起。自那以后，我们就见证了 Web 堆栈的大爆发。每一种现代编程语言似乎都有一个（或两个）对应的 Web 框架，可将各种混杂的技术预先组装在一起，快速而又轻松地创建一个新的网站。<br><a id="more"></a><br>MEAN 堆栈是 Web 社区中赢得大量关注和令人兴奋的一种新兴堆栈：<a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a>、<a href="http://expressjs.com/" target="_blank" rel="external">Express</a>、<a href="https://angularjs.org/" target="_blank" rel="external">AngularJS</a> 和 <a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>。MEAN 堆栈代表着一种完全现代的 Web 开发方法：一种语言运行在应用程序的所有层次上，从客户端到服务器，再到持久层。本系列文章演示了一个 MEAN Web 开发项目的端到端开发情况，但这种开发并不仅限于简单的语法。本文将通过作者的亲身实践向您深入浅出地介绍了该堆栈的组件技术，包括安装与设置。参见 <a href="http://www.ibm.com/developerworks/apps/download/index.jsp?contentid=987843&amp;filename=wa-mean1src.zip&amp;method=http&amp;locale=zh_CN" target="_blank" rel="external">下载</a> 部分，以便获取示例代码。</p>
<h1 id="从-LAMP-到-MEAN"><a href="#从-LAMP-到-MEAN" class="headerlink" title="从 LAMP 到 MEAN"></a>从 LAMP 到 MEAN</h1><p>MEAN 不仅仅是一次首字母缩写的简单重新安排与技术升级。将基础平台从操作系统 (Linux) 转变为 JavaScript 运行时 (Node.js) 让操作系统变得独立：Node.js 在 Windows® 与 OS X 上的运行情况和在 Linux 上一样优秀。<br>Node.js 同样取代了 LAMP 堆栈中的 Apache。但 Node.js 远远不止是一种简单的 Web 服务器。事实上，用户不会将完成后的应用程序部署到单机的 Web 服务器上；相反，Web 服务器已经包含在应用程序中，并已在 MEAN 堆栈中自动安装。结果，部署过程得到了极大简化，因为所需的 Web 服务器版本已经与余下的运行时依赖关系一起得到了明确定义。</p>
<p>从传统数据库（如 MySQL）到 NoSQL，再到无架构的、以文档为导向的持久存储（如 MongoDB），这些代表着持久化策略发生了根本性的转变。用户花费在编写 SQL 上的时间将会减少，将会有更多的时间编写 JavaScript 中的映射/化简功能。用户还能省掉大量的转换逻辑，因为 MongoDB 可以在本地运行 <a href="http://en.wikipedia.org/wiki/Json" target="_blank" rel="external">JavaScript Object Notation (JSON)</a>。因此，编写 <a href="http://en.wikipedia.org/wiki/REST" target="_blank" rel="external">RESTful Web</a> 服务变得前所未有的容易。</p>
<p>但从 LAMP 到 MEAN 的最大转变在于从传统的服务器端页面生成变为客户端 <a href="http://en.wikipedia.org/wiki/Single_page_application" target="_blank" rel="external">单页面应用程序 (SPA)</a>。借助 Express 仍然可以处理服务器端的路由与页面生成，但目前的重点在客户端视图上，而 AngularJS 可以实现这一点。这种变化并不仅仅是将 <a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank" rel="external">模型-视图-控制器 (MVC)</a> 工件从服务器转移到客户端。用户还要尝试从习惯的同步方式转而使用基本由事件驱动的、实质上为异步的方式。或许最重要的一点是，您将从以页面为中心的应用程序视图转到面向组件的视图。</p>
<p>MEAN 堆栈并非以移动为中心，AngularJS 在桌面电脑、笔记本电脑、智能手机、平板电脑和甚至是智能电视上的运行效果都一样，但它不会把移动设备当作二等公民对待。而且测试事后不再是问题：借助世界级的测试框架，比如 <a href="http://visionmedia.github.io/mocha/" target="_blank" rel="external">MochaJS</a>、<a href="http://jasmine.github.io/" target="_blank" rel="external">JasmineJS</a> 和 <a href="http://karma-runner.github.io/" target="_blank" rel="external">KarmaJS</a>，您可以为自己的 MEAN 应用程序编写深入而又全面的测试套件。</p>
<p>准备好获得 MEAN 了吗？</p>
<hr>
<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><p>您需要安装 Node.js，以便在本系列中的示例应用程序上工作，如果尚未安装它，那就立刻开始安装吧。<br>如果使用 UNIX® 风格的操作系统（Linux、Mac OS X 等），我推荐使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="external">Node Version Manager (NVM)</a>。（否则，在 <a href="http://nodejs.org/" target="_blank" rel="external">Node.js 主页</a>上单击 Install，下载适合您操作系统的安装程序，然后接受默认选项即可。）借助 NVM，您可以轻松下载 Node.js，并从命令行切换各种版本。这可以帮助您从一个版本的 Node.js 无缝转移到下一版本，就像我从一个客户项目转到下一个客户项目一样。<br>NVM 安装完毕后，请输入命令 nvm ls-remote 查看哪些 Node.js 版本可用于安装，如清单 1 中所示。<br>清单 1. 使用 NVM 列出可用的 Node.js 版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ nvm ls-remote</div><div class="line">v0.10.20</div><div class="line">v0.10.21</div><div class="line">v0.10.22</div><div class="line">v0.10.23</div><div class="line">v0.10.24</div><div class="line">v0.10.25</div><div class="line">v0.10.26</div><div class="line">v0.10.27</div><div class="line">v0.10.28</div></pre></td></tr></table></figure></p>
<p>输入 nvm ls 命令可以显示本地已经安装的 Node.js 版本，以及目前正在使用中的版本。<br>在撰写本文之际，Node 网站推荐 v0.10.28 是最新的稳定版本。输入 nvm install v0.10.28 命令在本地安装它。<br>安装 Node.js 后（通过 NVM 或平台特定的安装程序均可），可以输入 node –version 命令来确认当前使用的版本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ node --version</div><div class="line">v0.10.28</div></pre></td></tr></table></figure></p>
<h1 id="什么是-Node-js？"><a href="#什么是-Node-js？" class="headerlink" title="什么是 Node.js？"></a>什么是 Node.js？</h1><p>Node.js 是一种 headless JavaScript 运行时。它与运行在 Google Chrome 内的 JavaScript 引擎（名叫 V8）是一样的，但使用 Node.js 可以从命令行（而非浏览器）运行 JavaScript。</p>
<p>我曾嘲笑过有些学生从命令行运行 JavaScript 的主意：“如果没有要控制的 HTML，那 JavaScript 还有什么好处呢？” JavaScript 是在浏览器（Netscape Navigator 2.0）中来到这个世界的，因此那些反对者的短视和天真是可以原谅的。<br>事实上，JavaScript 编程语言并未针对文档对象模型 (DOM) 操作或形成 Ajax 请求提供本地功能。该浏览器提供了 DOM API，可以方便用户使用 JavaScript 来完成这类工作，但在浏览器之外的地方，JavaScript 不具备这些功能。<br>下面给出了一个例子。在浏览器中打开一个 JavaScript 控制台（参见 访问浏览器的开发人员工具）。输入 navigator.appName。获得响应后，请输入 navigator.appVersion。得到的结果类似于图 1 中所示。<br>图 1. 在 Web 浏览器中使用 JavaScript navigator 对象<br><img src="/img/20160309/1.png" alt="图1"><br>在图 1 中，Netscape 是对 navigator.appName 的响应，而对 navigator.appVersion 的响应则是经验丰富的 Web 开发人员已经熟知但爱恨不一的、神秘的开发人员代理字符串。在图 1 中（截自 OS X 上的 Chrome 浏览器），该字符串是 5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36。<br>现在，我们要创建一个名为 test.js 的文件。在文件中输入同样的命令，并将每个命令包含在 console.log() 调用中：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(navigator.appName);</div><div class="line"><span class="built_in">console</span>.log(navigator.appVersion);</div></pre></td></tr></table></figure></p>
<p>保存文件并输入 node test.js 来运行它，如清单 2 中所示。<br>清单 2. 查看 Node.js 中的 navigator is not defined 错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ node test.js</div><div class="line">/test.js:1</div><div class="line">ion (exports, require, module, __filename, __dirname) &#123; console.log (navigator.ReferenceError: navigator is not defined</div><div class="line">    at Object.&lt;anonymous&gt; (/test.js:1:75)</div><div class="line">    at Module._compile (module.js:456:26)</div><div class="line">    at Object.Module._extensions..js (module.js:474:10)</div><div class="line">    at Module.load (module.js:356:32)</div><div class="line">    at Function.Module._load (module.js:312:12)</div><div class="line">    at Function.Module.runMain (module.js:497:10)</div><div class="line">    at startup (node.js:119:16)</div><div class="line">    at node.js:902:3</div></pre></td></tr></table></figure></p>
<p>正如您看到的那样，navigator 在浏览器中可用，但在 Node.js 中不可用。（不好意思，让您的第一个 Node.js 脚本失败了，但我想确保让您相信，在浏览器中运行 JavaScript 与在 Node.js 中运行它是不同的。）<br>根据堆栈跟踪的情况，正确的 Module 没有得到加载。（Modules 是在浏览器中运行 JavaScript 与在 Node.js 中运行它之间的另一主要区别。我们将立刻讲述 Modules 的更多相关内容。）为了从 Node.js 获得类似的信息，请将 test.js 的内容修改为：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(process.versions)</div><div class="line"><span class="built_in">console</span>.log(process.arch)</div><div class="line"><span class="built_in">console</span>.log(process.platform)</div></pre></td></tr></table></figure></p>
<p>再次输入 node test.js，可以看到类似于清单 3 中的输出。<br>清单 3. 在 Node.js 中使用过程模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ node test.js</div><div class="line">&#123; http_parser: <span class="string">'2.7.0'</span>,</div><div class="line">  node: <span class="string">'4.5.0'</span>,</div><div class="line">  v8: <span class="string">'4.5.103.37'</span>,</div><div class="line">  uv: <span class="string">'1.9.1'</span>,</div><div class="line">  zlib: <span class="string">'1.2.8'</span>,</div><div class="line">  ares: <span class="string">'1.10.1-DEV'</span>,</div><div class="line">  icu: <span class="string">'56.1'</span>,</div><div class="line">  modules: <span class="string">'46'</span>,</div><div class="line">  openssl: <span class="string">'1.0.2h'</span> &#125;</div><div class="line">x64</div><div class="line">darwin</div></pre></td></tr></table></figure></p>
<p>在 Node.js 中成功运行第一个脚本之后，我们将接触下一个主要概念：模块。</p>
<hr>
<h1 id="什么是模块？"><a href="#什么是模块？" class="headerlink" title="什么是模块？"></a>什么是模块？</h1><p>可以在 JavaScript 中创建单一功能的函数，但与在 Java、Ruby 或 Perl 中不同，无法将多个函数打包到一个能够导入导出的内聚模块或 ”包“ 中。当然，使用 \<script\> 元素可以包含任意 JavaScript 源代码文件，但这种历史悠久的方法在两个关键方面缺少正确的模块声明。<br>首先，使用 \<script\> 元素包含的任意 JavaScript 将被加载到全局命名空间中。使用模块可以导入的函数被封装在一个局部命名的变量中。其次，同时更为关键的是，可以使用模块显式地声明依赖关系，而使用 \<script\> 元素则做不到这一点。结果，导入 Module A 时也会同时导入依赖的 Modules B 和 C。当应用程序变得复杂时，传递依赖关系管理很快将成为一种关键需求。</script\></script\></script\></p>
<p>模块是用户衷心期盼的下一 JavaScript 主要版本 (ECMAScript 6) 的功能，但直到该版本被广泛接受之前，Node.js 目前使用的是它自己基于 <a href="http://en.wikipedia.org/wiki/CommonJS" target="_blank" rel="external">CommonJS</a> 规范的模块版本。<br>使用 require 关键字可以在脚本中包含 CommonJS 模块。例如，清单 4 是对 Node.js 主页上的 Hello World 脚本稍微进行修改后的版本。创建一个名为 example.js 的文件，并将清单 4 中的代码复制到其中。</p>
<p>清单 4. Node.js 中的 Hello World<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">var</span> port = <span class="number">9090</span>;</div><div class="line">http.createServer(responseHandler).listen(port);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'Server running at http://127.0.0.1:'</span> + port + <span class="string">'/'</span>);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">responseHandler</span>(<span class="params">req, res</span>)</span>&#123;</div><div class="line">  res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/html'</span>&#125;);</div><div class="line">  res.end(<span class="string">'&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello World&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输入 node example.js 命令运行新的 Web 服务器，然后在 Web 浏览器中访问 <a href="http://127.0.0.1:9090。" target="_blank" rel="external">http://127.0.0.1:9090。</a><br>看一看清单 4 中的头两行。您很可能写过几百次（或几千次）像 var port = 9090; 这样的简单语句。这条语句定义了一个名为 port 的变量，并将数字 9090 赋值给它。第一行 (var http = require(‘http’);) 用于导入一个 CommonJS 模块。它引入 http 模块并将它指派给一个局部变量。 and assigns it to a local variable. All of the corresponding modules that http 依赖的所有对应模块也同时被 require 语句导入。<br>example.js 后面的代码行：<br>创建一个新的 HTTP 服务器。<br>指定一个函数来处理响应。<br>开始监听指定端口上进入的 HTTP 请求。<br>这样通过寥寥几行 JavaScript 代码，就可以在 Node.js 中创建了一个简单的 Web 服务器。在本系列随后的文章中您会看到，Express 将这个简单的例子被扩展用于处理更为复杂的路由，同时还将提供静态与动态生成的资源。<br>http 模块是 Node.js 安装的标准组件之一。其他标准的 Node.js 模块还支持文件 I/O，读取来自用户的命令行输入，处理底层的 TCP 和 UDP 请求等等。访问 Node.js 文档的 <a href="http://nodejs.org/api/modules.html" target="_blank" rel="external">Modules</a> 部分，查看标准模块的完整列表并了解它们的功能。<br>尽管模块列表内容十分丰富，但与可用的第三方模块列表相比，仍然是小巫见大巫。要访问它们，您需要熟悉另一个命令行实用工具：NPM。</p>
<hr>
<h1 id="什么是-NPM？"><a href="#什么是-NPM？" class="headerlink" title="什么是 NPM？"></a>什么是 NPM？</h1><p>NPM 是 Node Packaged Modules 的简写。要查看包含超过 75,000 个公用第三方 Node 模块的清单，请访问 NPM 网站。在网站上搜索 yo 模块。图 2 显示了搜索结果。<br>图 2. yo 模块的详细情况<br><img src="/img/20160309/2.png" alt="图2"><br>结果页面简要介绍了该模块（搭建 Yeoman 项目的 CLI 工具），并显示它在过去一天、一周和一月内被下载的次数、编写该模块的作者、它依赖于哪些其他的模块（如果存在）等内容。最重要的是，结果页面给出了安装该模块的命令行语法。<br>要从命令行获取关于 yo 模块的类似信息，请输入 npm info yo 命令。（如果您还不知道模块的官方名称，可以输入 npm search yo 来搜索名称中包含字符串 yo 的所有模块。）npm info 命令显示模块的 package.json 文件的内容。<br>了解 package.json<br>每个 Node.js 模块都必须关联一个格式良好的 package.json 文件，因此，熟悉此文件的内容是值得的。清单 5、清单 6 和清单 7 分三部分显示了 yo 模块的 <a href="https://www.npmjs.org/doc/json.html" target="_blank" rel="external">package.json</a> 文件的内容。<br>如清单 5 中所示，第一个元素通常是 name、description 和一个可用 versions 的 JSON 数组。<br>清单 5. package.json，第 1 部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ npm info yo</div><div class="line">&#123; name: <span class="string">'yo'</span>,</div><div class="line">  description: <span class="string">'CLI tool for scaffolding out Yeoman projects'</span>,</div><div class="line">  <span class="string">'dist-tags'</span>: &#123; latest: <span class="string">'1.1.2'</span> &#125;,</div><div class="line">  versions:</div><div class="line">   [</div><div class="line">     <span class="string">'1.0.0'</span>,</div><div class="line">     <span class="string">'1.1.0'</span>,</div><div class="line">     <span class="string">'1.1.1'</span>,</div><div class="line">     <span class="string">'1.1.2'</span> ],</div></pre></td></tr></table></figure></p>
<p>要安装一个模块的最新版本，请输入 npm install package 命令。输入 npm install package@version 可以安装一个特定的版本。<br>如清单 6 中所示，接下来将显示作者、维护者和可以直接查找源文件的 GitHub 库。<br>清单 6. package.json，第 2 部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">author: <span class="string">'Chrome Developer Relations'</span>,</div><div class="line">repository:</div><div class="line"> &#123; <span class="built_in">type</span>: <span class="string">'git'</span>,</div><div class="line">   url: <span class="string">'git://github.com/yeoman/yo'</span> &#125;,</div><div class="line">homepage: <span class="string">'http://yeoman.io'</span>,</div><div class="line">keywords:</div><div class="line"> [ <span class="string">'front-end'</span>,</div><div class="line">   <span class="string">'development'</span>,</div><div class="line">   <span class="string">'dev'</span>,</div><div class="line">   <span class="string">'build'</span>,</div><div class="line">   <span class="string">'web'</span>,</div><div class="line">   <span class="string">'tool'</span>,</div><div class="line">   <span class="string">'cli'</span>,</div><div class="line">   <span class="string">'scaffold'</span>,</div><div class="line">   <span class="string">'stack'</span> ],</div></pre></td></tr></table></figure></p>
<p>在这个例子中，还可以看到一个指向项目主页的链接和一个相关关键字的 JSON 数组。并非所有 package.json 文件中都会出现所有这些字段，但用户很少会抱怨与一个项目相关的元数据太多。<br>最后，清单 7 中列出了附有显式版本号的依赖关系。这些版本号符合主版本.次版本.补丁版本的常用模式，被称为 <a href="http://semver.org/" target="_blank" rel="external">SemVer</a>（语义版本控制）。<br>清单 7. package.json，第 3 部分<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">engines: &#123; node: <span class="string">'&gt;=0.8.0'</span>, npm: <span class="string">'&gt;=1.2.10'</span> &#125;,</div><div class="line">dependencies:</div><div class="line"> &#123; <span class="string">'yeoman-generator'</span>: <span class="string">'~0.16.0'</span>,</div><div class="line">   nopt: <span class="string">'~2.1.1'</span>,</div><div class="line">   lodash: <span class="string">'~2.4.1'</span>,</div><div class="line">   <span class="string">'update-notifier'</span>: <span class="string">'~0.1.3'</span>,</div><div class="line">   insight: <span class="string">'~0.3.0'</span>,</div><div class="line">   <span class="string">'sudo-block'</span>: <span class="string">'~0.3.0'</span>,</div><div class="line">   async: <span class="string">'~0.2.9'</span>,</div><div class="line">   open: <span class="string">'0.0.4'</span>,</div><div class="line">   chalk: <span class="string">'~0.4.0'</span>,</div><div class="line">   findup: <span class="string">'~0.1.3'</span>,</div><div class="line">   shelljs: <span class="string">'~0.2.6'</span> &#125;,</div><div class="line">peerDependencies:</div><div class="line"> &#123; <span class="string">'grunt-cli'</span>: <span class="string">'~0.1.7'</span>,</div><div class="line">   bower: <span class="string">'&gt;=0.9.0'</span> &#125;,</div><div class="line">devDependencies:</div><div class="line"> &#123; grunt: <span class="string">'~0.4.2'</span>,</div><div class="line">   mockery: <span class="string">'~1.4.0'</span>,</div><div class="line">   <span class="string">'grunt-contrib-jshint'</span>: <span class="string">'~0.8.0'</span>,</div><div class="line">   <span class="string">'grunt-contrib-watch'</span>: <span class="string">'~0.5.3'</span>,</div><div class="line">   <span class="string">'grunt-mocha-test'</span>: <span class="string">'~0.8.1'</span> &#125;,</div></pre></td></tr></table></figure></p>
<p>这个 package.json 文件表明，它必须安装在 0.8.0 或更高版本的 Node.js 实例上。如果试图使用 npm install 命令安装一个不受支持的版本，那么安装将会失败。</p>
<p>除了平台要求之外，这个 package.json 文件还提供几个依赖关系列表：</p>
<ul>
<li>dependencies 部分列出了运行时的依赖关系。</li>
<li>devDependencies 部分列出了开发过程中需要的模块。</li>
<li>peerDependencies 部分支持作者定义项目之间的 ”对等“ 关系。这种功能通常用于指定基础项目与其插件之间的关系，但在这个例子中，它指出了包含 Yeoman 项目与 Yo 的其他两个项目（Grunt 与 Bower）。<br>如果在不指定模块名的情况下输入 npm install 命令，那么 npm 会访问当前目录中的 package.json 文件，并安装我刚刚讨论过的三部分内容中列出的所有依赖关系。<br>安装一个能正常工作的 MEAN 堆栈，下一步是安装 Yeoman 与相应的 Yeoman-MEAN 生成器。</li>
</ul>
<hr>
<p>安装 Yeoman<br>作为一名 Java 开发人员，我无法想象在没有诸如 Ant 或 Maven 这样的编译系统的情况下如何启动一个新项目。类似地，Groovy 和 Grails 开发人员依靠的是 Gant（Ant 的一种 Groovy 实现）或 Gradle。这些工具可以搭建起一个新的目录结构，动态下载依赖关系，并准备好将项目发布。<br>在纯粹的 Web 开发环境中，Yeoman 可以满足这种需要。Yeoman 是三种 Node.js 工具的集合，包括用于搭建的纯 JavaScript 工具 Yo，管理客户端依赖关系的 Bower，以及准备项目发布的 Grunt。通过分析 清单 7 可以得出这样的结论：安装 Yo 时也会安装它对等的 Grunt 和 Bower，这要感谢 package.json 中的 peerDependencies 部分。<br>通常，输入 npm install yo –save 命令可以安装 yo 模块并更新 package.json 文件中的 dependencies 部分。（npm install yo –save-dev 用于更新 devDependencies 部分。）但这三个对等的 Yeoman 模块算不上是特定于项目的模块，它们是命令行实用工具，而非运行时依赖关系。要全局安装一个 NPM 包，需要在 install 命令后增加一个 -g 标志。<br>在系统上安装 Yeoman：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g yo</div></pre></td></tr></table></figure></p>
<p>在完成包安装后，输入 yo –version 命令来验证它已经在运行中。<br>Yeoman 与基础架构的所有余下部分都准备就绪后，便可以开始安装 MEAN 堆栈了。</p>
<h1 id="安装-MeanJS"><a href="#安装-MeanJS" class="headerlink" title="安装 MeanJS"></a>安装 MeanJS</h1><p>您可以手动安装 MEAN 堆栈的每一部分，但需要十分小心。谢天谢地，Yeoman 通过其 generators（生成器） 提供了一种更轻松的安装方式。<br>Yeoman 生成器就是引导一个新 Web 项目更轻松的方式。该生成器提供了基础包及其所有依赖关系。此外，它通常还会包含一个工作的编译脚本及其所有相关插件。通常，该生成器还包含一个示例应用程序，包括测试在内。<br>Yeoman 团队构建和维护了几个 “官方的” Yeoman 生成器。社区驱动的 Yeoman 生成器（超过 800 个）远远超过官方生成器的数量。<br>您将用于引导第一个 MEAN 应用程序的社区生成器被称为 MEAN.JS，这也在意料之中。<br>在 MEAN.JS 主页上，单击 Yo Generator 菜单选项或者直接访问 Generator 页面，图 3 中显示了其中的一部分。<br><img src="/img/20160309/3.png" alt="图3"><br>该页面上的说明指出要首先 Yeoman，这一点您已经完成。下一步是全局安装 MEAN.JS 生成器：<br>生成器准备就绪后，便可以开始创建您的第一个 MEAN 应用程序了。创建一个名为 test 的目录，使用 cd 命令进入它，然后输入 yo meanjs 命令生成应用程序。回答最后两个问题，如清单 8 中所示。（您可以为开始四个问题提供自己的答案。）<br>清单 8. 使用 MEAN.JS Yeoman generator<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ mkdir <span class="built_in">test</span></div><div class="line">$ <span class="built_in">cd</span> <span class="built_in">test</span></div><div class="line">$ yo meanjs</div><div class="line">You are using the official MEAN.JS generator.</div><div class="line">[?] What would you like to call your application?</div><div class="line">Test</div><div class="line">[?] How would you describe your application?</div><div class="line">Full-Stack JavaScript with MongoDB, Express, AngularJS, and Node.js</div><div class="line">[?] How would you describe your application <span class="keyword">in</span> comma separated key words?</div><div class="line">MongoDB, Express, AngularJS, Node.js</div><div class="line">[?] What is your company/author name?</div><div class="line">Scott Davis</div><div class="line">[?] Would you like to generate the article example CRUD module?</div><div class="line">Yes</div><div class="line">[?] Which AngularJS modules would you like to include?</div><div class="line">ngCookies, ngAnimate, ngTouch, ngSanitize</div></pre></td></tr></table></figure></p>
<p>在回答最后一个问题后，您会看到一系列行为，这是 NPM 在下载所有服务器端的依赖关系（包括 Express）。NPM 完成后，Bower 将下载所有客户端的依赖关系（包括 AngularJS、Bootstrap 和 jQuery）。<br>至此，您已经安装了 EAN 堆栈（Express、AngularJS 和 Node.js) — 目前只缺少 M (MongoDB)。如果现在输入 grunt 命令，在没有安装 MongoDB 的情况下启动应用程序，您会看到类似于清单 9 中的一条错误消息。<br>清单 9. 试图在没有 MongoDB 的情况下启动 MeanJS<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">events.js:72</div><div class="line">        throw er; // Unhandled <span class="string">'error'</span> event</div><div class="line">              ^</div><div class="line">Error: failed to connect to [localhost:27017]</div><div class="line">    at null.&lt;anonymous&gt;</div><div class="line">(/<span class="built_in">test</span>/node_modules/mongoose/node_modules/mongodb/lib/mongodb/connection/server.js:546:74)</div><div class="line"></div><div class="line">[nodemon] app crashed - waiting <span class="keyword">for</span> file changes before starting...</div></pre></td></tr></table></figure></p>
<p>如果启动应用程序时看到这条错误消息，请按下 Ctrl+C 键停止应用程序。<br>为了使用新的 MEAN 应用程序，现在需要安装 MongoDB。</p>
<hr>
<h1 id="安装-MongoDB"><a href="#安装-MongoDB" class="headerlink" title="安装 MongoDB"></a>安装 MongoDB</h1><p>MongoDB 是一种 NoSQL 持久性存储。它不是使用 JavaScript 编写的，也不是 NPM 包。必须单独安装它才能完成 MEAN 堆栈的安装。<br>访问 <a href="http://www.mongodb.org/" target="_blank" rel="external">MongoDB 主页</a>，下载平台特定的安装程序，并在安装 MongoDB 时接受所有默认选项。<br>安装完成时，输入 mongod 命令启动 MongoDB 守护程序。<br>MeanJS Yeoman 生成器已经安装了一个名为 <a href="http://mongoosejs.com/" target="_blank" rel="external">Mongoose</a> 的 MongoDB 客户端模块，您可以检查 package.json 文件来确认这一点。我将在后续的文章中详细介绍 MongoDB 和 Mongoose。<br>安装并运行 MongoDB 后，最终您可以运行您的 MEAN 应用程序并观察使用效果了。</p>
<hr>
<h1 id="运行-MEAN-应用程序"><a href="#运行-MEAN-应用程序" class="headerlink" title="运行 MEAN 应用程序"></a>运行 MEAN 应用程序</h1><p>要启动新安装的 MEAN 应用程序，在运行 MeanJS Yeoman 生成器之前，一定要位于您创建的 test 目录中。在输入 grunt 命令时，输出内容应该如清单 10 中所示。<br>清单 10. 启动 MEAN.JS 应用程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ grunt</div><div class="line">Running <span class="string">"jshint:all"</span> (jshint) task</div><div class="line">&gt;&gt; 46 files lint free.</div><div class="line">Running <span class="string">"csslint:all"</span> (csslint) task</div><div class="line">&gt;&gt; 2 files lint free.</div><div class="line">Running <span class="string">"concurrent:default"</span> (concurrent) task</div><div class="line">Running <span class="string">"watch"</span> task</div><div class="line">Waiting...</div><div class="line">Running <span class="string">"nodemon:dev"</span> (nodemon) task</div><div class="line">[nodemon] v1.0.20</div><div class="line">[nodemon] to restart at any time, enter `rs`</div><div class="line">[nodemon] watching: app/views/**/*.* gruntfile.js server.js config/**/*.js app/**/*.js</div><div class="line">[nodemon] starting `node --debug server.js`</div><div class="line">debugger listening on port 5858</div><div class="line"> NODE_ENV is not defined! Using default development environment</div><div class="line">MEAN.JS application started on port 3000</div></pre></td></tr></table></figure></p>
<p><a href="https://www.npmjs.org/package/jshint" target="_blank" rel="external">jshint</a> 和 <a href="https://www.npmjs.org/package/csslint" target="_blank" rel="external">csslint</a> 模块（均由生成器进行安装）可以确保源代码在句法和语体上是正确的。<a href="https://www.npmjs.org/package/nodemon" target="_blank" rel="external">nodemon</a> 包监控文件系统中的代码修改情况，并在检测到有的情况下自动重启服务器，当开发人员需要快速而频繁地修改代码基础时，这可以极大地提高他们的效率。（nodemon 包只在开发阶段运行，要监测生产环境的变化，必须重新部署应用程序并重启 Node.js。）<br>按照控制台输出的提示，访问 <a href="http://localhost:3000" target="_blank" rel="external">http://localhost:3000</a> 并运行您的新 MEAN 应用程序。<br>图 4 显示了 MEAN.JS 示例应用程序的主页。<br>图 4. MEAN.JS 示例应用程序的主页<br><img src="/img/20160309/4.png" alt="图4"><br>在菜单栏中单击 Signup 创建一个新的用户账号。现在填写 Sign-up 页面上的所有字段（如图 5 中所示），然后单击 Sign up。在后续的指南中，您可以通过 Facebook、Twitter 等启用 OAuth 登录<br>图 5. MEAN.JS 示例应用程序的 Sign-up 页面<br><img src="/img/20160309/5.png" alt="图5"><br>现在，您的本地 MongoDB 实例中已经保存了一组用户证书，您可以开始撰写新的文章了。单击 Articles 菜单选项（当您登录之后才会显示出来），并创建一些示例文章。图 6 显示了 Articles 页面。<br>图 6. MeanJS 的文章页面<br><img src="/img/20160309/6.png" alt="图6"><br>您已经创建了自己的第一个 MEAN 应用程序。欢迎加入！</p>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>在这篇指南中，您完成相当多的内容。安装 Node.js 并编写了第一个 Node.js 脚本。学习了模块并使用 NPM 安装了几个第三方模块。安装 Yeoman 并将它作为可靠的 Web 开发平台，其中包含一个搭建实用工具 (Yo)，一个编译脚本 (Grunt)，以及一个管理客户端依赖关系的实用工具 (Bower)。安装 MeanJS Yeoman 生成器，并使用它来创建第一个 MEAN 应用程序。安装 MongoDB 与 Node.js 客户端库 Mongoose。最后运行您的首个 MEAN 应用程序。<br>下一次，我们会详细了解示例应用程序的源代码，从而了解 MEAN 太阳系中的所有四颗行星 （MongoDB、Express、AngularJS 和 Node.js）是如何相互作用的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[eMaker.Space]]></title>
      <url>http://cuiqingwei.github.io/2016/03/08/2016-03-08-eMaker-Space/</url>
      <content type="html"><![CDATA[<h1 id="wiki"><a href="#wiki" class="headerlink" title="wiki"></a>wiki</h1><p><a href="http://www.seeedstudio.com/wiki/Main_Page" target="_blank" rel="external">http://www.seeedstudio.com/wiki/Main_Page</a><br><a href="https://wiki.microduino.cc/index.php" target="_blank" rel="external">https://wiki.microduino.cc/index.php</a><br><a href="http://wiki.dfrobot.com.cn/index.php" target="_blank" rel="external">http://wiki.dfrobot.com.cn/index.php</a><br><a href="http://www.alsrobot.cn/wiki/" target="_blank" rel="external">http://www.alsrobot.cn/wiki/</a><br><a href="http://duinopeak.com/wiki/index.php" target="_blank" rel="external">http://duinopeak.com/wiki/index.php</a><br><a id="more"></a></p>
<h1 id="Open-Source-Hardware"><a href="#Open-Source-Hardware" class="headerlink" title="Open Source Hardware"></a>Open Source Hardware</h1><p><a href="http://www.oshwa.org/open-source-hardware-logo/" target="_blank" rel="external">http://www.oshwa.org/open-source-hardware-logo/</a><br><a href="http://kb.open.eefocus.com/index.php" target="_blank" rel="external">http://kb.open.eefocus.com/index.php</a></p>
<h1 id="Duino"><a href="#Duino" class="headerlink" title="Duino"></a>Duino</h1><p><a href="https://www.arduino.cc/" target="_blank" rel="external">https://www.arduino.cc/</a><br><a href="http://www.drduino.com/" target="_blank" rel="external">http://www.drduino.com/</a><br><a href="https://www.microduino.cn/" target="_blank" rel="external">https://www.microduino.cn/</a><br><a href="http://www.duino-robotics.com/" target="_blank" rel="external">http://www.duino-robotics.com/</a><br><a href="http://www.86duino.com/" target="_blank" rel="external">http://www.86duino.com/</a><br><a href="http://www.rfduino.com/" target="_blank" rel="external">http://www.rfduino.com/</a><br><a href="http://www.netduino.com/" target="_blank" rel="external">http://www.netduino.com/</a><br><a href="http://wtfduino.calumk.com/" target="_blank" rel="external">http://wtfduino.calumk.com/</a><br><a href="https://easyeda.com/seeedstudio/Xadow_Duino-M5d71jdvp" target="_blank" rel="external">https://easyeda.com/seeedstudio/Xadow_Duino-M5d71jdvp</a><br><a href="http://rasp.io/" target="_blank" rel="external">http://rasp.io/</a><br><a href="http://www.motoduino.com/" target="_blank" rel="external">http://www.motoduino.com/</a><br><a href="http://cubieboard.org/" target="_blank" rel="external">http://cubieboard.org/</a><br><a href="http://www.techbang.com/posts/42412-maker" target="_blank" rel="external">http://www.techbang.com/posts/42412-maker</a><br><a href="http://wiki.iteadstudio.com/Product" target="_blank" rel="external">http://wiki.iteadstudio.com/Product</a></p>
<h1 id="Raspberry"><a href="#Raspberry" class="headerlink" title="Raspberry"></a>Raspberry</h1><p><a href="https://www.cooking-hacks.com/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge/" target="_blank" rel="external">https://www.cooking-hacks.com/documentation/tutorials/raspberry-pi-to-arduino-shields-connection-bridge/</a></p>
<h1 id="Sparkfun"><a href="#Sparkfun" class="headerlink" title="Sparkfun"></a>Sparkfun</h1><p><a href="https://www.sparkfun.com/products/13111" target="_blank" rel="external">https://www.sparkfun.com/products/13111</a><br><a href="https://www.sparkfun.com/products/11511" target="_blank" rel="external">https://www.sparkfun.com/products/11511</a><br><a href="https://www.sparkfun.com/products/11683" target="_blank" rel="external">https://www.sparkfun.com/products/11683</a></p>
<h1 id="blockly"><a href="#blockly" class="headerlink" title="blockly"></a>blockly</h1><p><a href="https://developers.google.com/blockly/" target="_blank" rel="external">https://developers.google.com/blockly/</a><br><a href="https://blockly-demo.appspot.com/static/demos/index.html" target="_blank" rel="external">https://blockly-demo.appspot.com/static/demos/index.html</a><br><a href="https://blockly-games.appspot.com/?lang=zh-hans" target="_blank" rel="external">https://blockly-games.appspot.com/?lang=zh-hans</a><br><a href="https://studio.code.org/" target="_blank" rel="external">https://studio.code.org/</a></p>
<h1 id="Ardublock"><a href="#Ardublock" class="headerlink" title="Ardublock"></a>Ardublock</h1><p><a href="https://sourceforge.net/projects/ardublock/" target="_blank" rel="external">https://sourceforge.net/projects/ardublock/</a><br><a href="http://blog.ardublock.com/zh/category/tutorial/" target="_blank" rel="external">http://blog.ardublock.com/zh/category/tutorial/</a><br><a href="https://learn.sparkfun.com/resources/59" target="_blank" rel="external">https://learn.sparkfun.com/resources/59</a><br><a href="https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/ardublock" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/ardublock</a></p>
<h1 id="Mixly米思齐"><a href="#Mixly米思齐" class="headerlink" title="Mixly米思齐"></a>Mixly米思齐</h1><p><a href="http://mixly.cn/" target="_blank" rel="external">http://mixly.cn/</a></p>
<h1 id="MIT-App-Inventor-2"><a href="#MIT-App-Inventor-2" class="headerlink" title="MIT App Inventor 2"></a>MIT App Inventor 2</h1><p><a href="http://app.gzjkw.net/" target="_blank" rel="external">http://app.gzjkw.net/</a><br><a href="http://blog.cavedu.com/programming-language/appinventor/appinventorandarduinowithbluetooth/" target="_blank" rel="external">http://blog.cavedu.com/programming-language/appinventor/appinventorandarduinowithbluetooth/</a><br><a href="http://appinventor.pevest.com/?page_id=10" target="_blank" rel="external">http://appinventor.pevest.com/?page_id=10</a><br><a href="https://sites.google.com/site/jingprogram/app" target="_blank" rel="external">https://sites.google.com/site/jingprogram/app</a></p>
<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><p><a href="http://www.sketchup.com/" target="_blank" rel="external">http://www.sketchup.com/</a><br><a href="http://www.123dapp.com/design" target="_blank" rel="external">http://www.123dapp.com/design</a><br><a href="https://scratch.mit.edu/" target="_blank" rel="external">https://scratch.mit.edu/</a><br><a href="http://s4a.cat/" target="_blank" rel="external">http://s4a.cat/</a><br><a href="http://www.arduino.cc/" target="_blank" rel="external">http://www.arduino.cc/</a><br><a href="http://www.arduino.org.cn/" target="_blank" rel="external">http://www.arduino.org.cn/</a><br><a href="https://en.wikipedia.org/wiki/Arduino" target="_blank" rel="external">https://en.wikipedia.org/wiki/Arduino</a><br><a href="http://i.youku.com/u/UNDYwMzEyOTk2" target="_blank" rel="external">http://i.youku.com/u/UNDYwMzEyOTk2</a><br><a href="http://www.makerlab.tw/resources/" target="_blank" rel="external">http://www.makerlab.tw/resources/</a></p>
<h1 id="3D-Modeling-and-Printing-：3D建模和打印"><a href="#3D-Modeling-and-Printing-：3D建模和打印" class="headerlink" title="3D Modeling and Printing ：3D建模和打印"></a>3D Modeling and Printing ：3D建模和打印</h1><p><a href="http://the3doodler.com/" target="_blank" rel="external">http://the3doodler.com/</a><br><a href="https://www.ultimaker.com/" target="_blank" rel="external">https://www.ultimaker.com/</a><br><a href="http://www.makerbot.com/" target="_blank" rel="external">http://www.makerbot.com/</a><br><a href="http://www.sketchup.com/" target="_blank" rel="external">http://www.sketchup.com/</a><br><a href="https://www.tinkercad.com/" target="_blank" rel="external">https://www.tinkercad.com/</a></p>
<h1 id="Circuits：电路"><a href="#Circuits：电路" class="headerlink" title="Circuits：电路"></a>Circuits：电路</h1><p><a href="http://snapcircuits.net.tw/" target="_blank" rel="external">http://snapcircuits.net.tw/</a><br><a href="http://courseweb.stthomas.edu/apthomas/SquishyCircuits/buildingCircuits.htm" target="_blank" rel="external">http://courseweb.stthomas.edu/apthomas/SquishyCircuits/buildingCircuits.htm</a><br><a href="http://littlebits.cc/" target="_blank" rel="external">http://littlebits.cc/</a><br><a href="http://wiki.funmetas.com/index.php?title=%E9%A6%96%E9%A1%B5" target="_blank" rel="external">http://wiki.funmetas.com/index.php?title=%E9%A6%96%E9%A1%B5</a><br><a href="http://www.makeymakey.com/" target="_blank" rel="external">http://www.makeymakey.com/</a></p>
<h1 id="Programming-Coding：程序设计-编程"><a href="#Programming-Coding：程序设计-编程" class="headerlink" title="Programming/Coding：程序设计/编程"></a>Programming/Coding：程序设计/编程</h1><p><a href="https://blockly-games.appspot.com/" target="_blank" rel="external">https://blockly-games.appspot.com/</a><br><a href="https://scratch.mit.edu/" target="_blank" rel="external">https://scratch.mit.edu/</a><br><a href="http://www.arduino.cc/" target="_blank" rel="external">http://www.arduino.cc/</a><br><a href="https://www.raspberrypi.org/" target="_blank" rel="external">https://www.raspberrypi.org/</a></p>
<h1 id="Robotics：机器人"><a href="#Robotics：机器人" class="headerlink" title="Robotics：机器人"></a>Robotics：机器人</h1><p><a href="http://www.lego.com/zh-cn/mindstorms/?domainredir=mindstorms.lego.com" target="_blank" rel="external">http://www.lego.com/zh-cn/mindstorms/?domainredir=mindstorms.lego.com</a><br><a href="http://www.firstinspires.org/robotics/frc" target="_blank" rel="external">http://www.firstinspires.org/robotics/frc</a><br><a href="http://www.arduino.org.cn/products/kits/6-arduino-kits/arduino-starter-kit" target="_blank" rel="external">http://www.arduino.org.cn/products/kits/6-arduino-kits/arduino-starter-kit</a><br><a href="http://mobilerobotkit.com/robot-kits.html" target="_blank" rel="external">http://mobilerobotkit.com/robot-kits.html</a></p>
<h1 id="Tools-amp-Materials-工具及耗材"><a href="#Tools-amp-Materials-工具及耗材" class="headerlink" title="Tools &amp; Materials : 工具及耗材"></a>Tools &amp; Materials : 工具及耗材</h1><ul>
<li>Woodworking：木工</li>
<li>Metalworking：金工</li>
<li>Laser Cutting：激光切割</li>
<li>CNC Cutting： 数控切割</li>
</ul>
<h1 id="MakerSpae"><a href="#MakerSpae" class="headerlink" title="MakerSpae"></a>MakerSpae</h1><p><a href="http://www.makezine.com.tw/makerspace.html" target="_blank" rel="external">http://www.makezine.com.tw/makerspace.html</a><br><a href="http://www.fablabtaiwan.org.tw/" target="_blank" rel="external">http://www.fablabtaiwan.org.tw/</a><br><a href="http://www.fablabtaipei.org/2510520497303403537320633.html" target="_blank" rel="external">http://www.fablabtaipei.org/2510520497303403537320633.html</a><br><a href="http://www.weschool.tw/26377217382012335373206332403720855.html" target="_blank" rel="external">http://www.weschool.tw/26377217382012335373206332403720855.html</a></p>
<h1 id="国内创客空间"><a href="#国内创客空间" class="headerlink" title="国内创客空间"></a>国内创客空间</h1><p><a href="http://www.chaihuo.org/products/list" target="_blank" rel="external">http://www.chaihuo.org/products/list</a><br><a href="http://xinchejian.com/?lang=zh" target="_blank" rel="external">http://xinchejian.com/?lang=zh</a><br><a href="http://www.bjmakerspace.com/" target="_blank" rel="external">http://www.bjmakerspace.com/</a></p>
<h1 id="Digital-Sandbox"><a href="#Digital-Sandbox" class="headerlink" title="Digital Sandbox"></a>Digital Sandbox</h1><p><a href="https://www.sparkfun.com/products/12651" target="_blank" rel="external">https://www.sparkfun.com/products/12651</a><br><a href="http://b2b.hc360.com/supplyself/348068096.html" target="_blank" rel="external">http://b2b.hc360.com/supplyself/348068096.html</a><br><a href="https://learn.sparkfun.com/tutorials/digital-sandbox-experiment-guide/setting-up-arduino-and-ardublock" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/digital-sandbox-experiment-guide/setting-up-arduino-and-ardublock</a><br><a href="http://classes.engr.oregonstate.edu/eecs/fall2015/cs160-501/labs/lab_01.pdf" target="_blank" rel="external">http://classes.engr.oregonstate.edu/eecs/fall2015/cs160-501/labs/lab_01.pdf</a><br><a href="https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/codebender" target="_blank" rel="external">https://learn.sparkfun.com/tutorials/alternative-arduino-interfaces/codebender</a></p>
<h1 id="创客空间里面都有那些设备"><a href="#创客空间里面都有那些设备" class="headerlink" title="创客空间里面都有那些设备"></a>创客空间里面都有那些设备</h1><p><a href="http://www.zhishihao.com/xue/show/155996" target="_blank" rel="external">http://www.zhishihao.com/xue/show/155996</a></p>
<h1 id="趣味电子"><a href="#趣味电子" class="headerlink" title="趣味电子"></a>趣味电子</h1><ul>
<li><strong>Back in Time木质时光倒流时钟</strong><br><a href="https://item.taobao.com/item.htm?spm=a1z10.5-c.w4002-11172345288.31.fQeFq4&amp;id=45557720848" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=a1z10.5-c.w4002-11172345288.31.fQeFq4&amp;id=45557720848</a></li>
<li><strong>基于Arduino设计的简易宠物喂食机</strong><br><a href="http://bbs.intorobot.com/thread-683-1-1.html" target="_blank" rel="external">http://bbs.intorobot.com/thread-683-1-1.html</a></li>
<li><strong>3D打印全自动宠物喂食器</strong><br><a href="http://bbs.intorobot.com/thread-684-1-1.html" target="_blank" rel="external">http://bbs.intorobot.com/thread-684-1-1.html</a></li>
<li><strong>Plotclock小贱钟</strong><br><a href="http://www.arduino.cn/thread-6049-1-1.html" target="_blank" rel="external">http://www.arduino.cn/thread-6049-1-1.html</a><br><a href="http://jjrobots.com/projects-2/" target="_blank" rel="external">http://jjrobots.com/projects-2/</a></li>
</ul>
<h1 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h1><p><a href="http://robert.cireddu.free.fr/" target="_blank" rel="external">http://robert.cireddu.free.fr/</a><br><a href="http://pedagogie.ac-toulouse.fr/lp-baylet-valence-agen/" target="_blank" rel="external">http://pedagogie.ac-toulouse.fr/lp-baylet-valence-agen/</a></p>
<h1 id="STEM"><a href="#STEM" class="headerlink" title="STEM"></a>STEM</h1><p><a href="http://www.creativelearningsystems.com/" target="_blank" rel="external">http://www.creativelearningsystems.com/</a></p>
<h1 id="走进3D"><a href="#走进3D" class="headerlink" title="走进3D"></a>走进3D</h1><p><a href="http://k12.leiphone.com/article/201601/Nnf0kNrFwit3zZBV.html" target="_blank" rel="external">http://k12.leiphone.com/article/201601/Nnf0kNrFwit3zZBV.html</a><br><a href="http://www.e-works.net.cn/report/2015stratasys3d/2015stratasys3d.html" target="_blank" rel="external">http://www.e-works.net.cn/report/2015stratasys3d/2015stratasys3d.html</a></p>
<h1 id="配套"><a href="#配套" class="headerlink" title="配套"></a>配套</h1><p><strong>洞洞板</strong><br><a href="https://item.taobao.com/item.htm?spm=2013.1.20141001.1.QOwtaJ&amp;id=35618674019&amp;;scm=1007.10115.22552.100200300000000&amp;pvid=3a6eaed6-f152-4ad3-a716-ed9d05874607" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=2013.1.20141001.1.QOwtaJ&amp;id=35618674019&amp;;scm=1007.10115.22552.100200300000000&amp;pvid=3a6eaed6-f152-4ad3-a716-ed9d05874607</a></p>
<h1 id="想做创客？这些关于开源硬件的知识你不得不知"><a href="#想做创客？这些关于开源硬件的知识你不得不知" class="headerlink" title="想做创客？这些关于开源硬件的知识你不得不知"></a>想做创客？这些关于开源硬件的知识你不得不知</h1><p><a href="http://www.csdn.net/article/2014-06-30/2820457/2" target="_blank" rel="external">http://www.csdn.net/article/2014-06-30/2820457/2</a></p>
<h1 id="DIY示波器"><a href="#DIY示波器" class="headerlink" title="DIY示波器"></a>DIY示波器</h1><p><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.HxgqLG&amp;id=43507787334&amp;ns=1&amp;abbucket=20#detail" target="_blank" rel="external">https://item.taobao.com/item.htm?spm=a230r.1.14.16.HxgqLG&amp;id=43507787334&amp;ns=1&amp;abbucket=20#detail</a><br><a href="http://www.jyetech.com/index.php" target="_blank" rel="external">http://www.jyetech.com/index.php</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Raspberry Pi]]></title>
      <url>http://cuiqingwei.github.io/2016/02/15/2016-02-15-Raspberry-Pi/</url>
      <content type="html"><![CDATA[<h1 id="Mac-OS-X下给树莓派安装Raspbian系统"><a href="#Mac-OS-X下给树莓派安装Raspbian系统" class="headerlink" title="Mac OS X下给树莓派安装Raspbian系统"></a>Mac OS X下给树莓派安装Raspbian系统</h1><p>先到<a href="http://www.raspberrypi.org/downloads" target="_blank" rel="external">树莓派的官方网站</a>去下载一个系统镜像，推荐下载<a href="http://downloads.raspberrypi.org/images/raspbian/2013-02-09-wheezy-raspbian/2013-02-09-wheezy-raspbian.zip" target="_blank" rel="external">Raspbian</a>。</p>
<p>如果用了直接扩展的WaveShare的TFT小屏，到 <a href="http://www.waveshare.net/wiki/RPI_IMAGE" target="_blank" rel="external">http://www.waveshare.net/wiki/RPI_IMAGE</a> 去下载。<br><a id="more"></a><br>下载完成后得到一个img镜像：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ls -lh</div><div class="line">total 3788800</div><div class="line">-rw-r--r--  1 mymacbook  staff   1.8G  2  9 03:44 2015-11-21-raspbian-jessie.img</div></pre></td></tr></table></figure></p>
<p>插入SD卡，用df命令查看当前已挂载的卷：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">df -h</div><div class="line">Filesystem      Size   Used  Avail Capacity  Mounted on</div><div class="line">/dev/disk0s2   112Gi   96Gi   15Gi    87%    /</div><div class="line">devfs          183Ki  183Ki    0Bi   100%    /dev</div><div class="line">map -hosts       0Bi    0Bi    0Bi   100%    /net</div><div class="line">map auto_home    0Bi    0Bi    0Bi   100%    /home</div><div class="line">/dev/disk2s1    15Gi  2.3Mi   15Gi     1%    /Volumes/disk2s1</div></pre></td></tr></table></figure></p>
<p>对比Size和Name可以找到SD卡的分区在系统里对应的设备文件（这里是/dev/disk2s1），如果你有多个分区，可能还会有disk1s3之类的。使用diskutil unmount将这些分区卸载：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">diskutil unmount /dev/disk2s1</div><div class="line">2</div><div class="line">Volume 未命名 on disk2s1 unmounted</div></pre></td></tr></table></figure></p>
<p>通过diskutil list来确认设备：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">diskutil list</div><div class="line">/dev/disk0</div><div class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></div><div class="line">   0:      GUID_partition_scheme                        *121.3 GB   disk0</div><div class="line">   1:                        EFI                         209.7 MB   disk0s1</div><div class="line">   2:                  Apple_HFS Macintosh HD            120.5 GB   disk0s2</div><div class="line">   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3</div><div class="line">/dev/disk2</div><div class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></div><div class="line">   0:     FDisk_partition_scheme                        *15.8 GB    disk2</div><div class="line">   1:               Windows_NTFS 未命名                  15.8 GB    disk2s1</div></pre></td></tr></table></figure></p>
<p>使用 <strong>dd</strong> 命令将系统镜像写入，需要特别特别注意disk后的数字，不能搞错！<br>（说明：/dev/disk2s1是分区，/dev/disk2是块设备，/dev/rdisk2是原始字符设备）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dd bs=4m <span class="keyword">if</span>=2013-02-09-wheezy-raspbian.img of=/dev/rdisk2</div></pre></td></tr></table></figure></p>
<p>经过几分钟的等待，出现下面的提示，说明SD卡刷好了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">462+1 records <span class="keyword">in</span></div><div class="line">462+1 records out</div><div class="line">1939865600 bytes transferred <span class="keyword">in</span> 163.133220 secs (11891297 bytes/sec)</div></pre></td></tr></table></figure></p>
<p>用diskutil unmountDisk卸载设备：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">diskutil unmountdisk /dev/disk2</div><div class="line">Unmount of all volumes on disk2 was successful</div></pre></td></tr></table></figure></p>
<p>现在就可以拔下SD卡，插到树莓派上启动系统了。</p>
<h1 id="用户名-amp-密码"><a href="#用户名-amp-密码" class="headerlink" title="用户名&amp;密码"></a>用户名&amp;密码</h1><p>默认用户是 <strong>pi</strong> ，密码是 <strong>raspberry</strong></p>
<h1 id="使用raspi-config配置树莓派"><a href="#使用raspi-config配置树莓派" class="headerlink" title="使用raspi-config配置树莓派"></a>使用raspi-config配置树莓派</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo raspi-config</div></pre></td></tr></table></figure>
<p><a href="http://shumeipai.nxez.com/2013/09/07/raspi-config-configuration-raspberry-pie.html" target="_blank" rel="external">http://shumeipai.nxez.com/2013/09/07/raspi-config-configuration-raspberry-pie.html</a></p>
<h1 id="Raspberry-Pi-树莓派-国内软件源："><a href="#Raspberry-Pi-树莓派-国内软件源：" class="headerlink" title="Raspberry Pi(树莓派)国内软件源："></a>Raspberry Pi(树莓派)国内软件源：</h1><p><a href="http://www.linuxidc.com/Linux/2013-10/91012.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2013-10/91012.htm</a></p>
<p>修改配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vi /etc/apt/sources.list</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi</div><div class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi</div><div class="line">deb http://mirrors.neusoft.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi</div><div class="line">deb-src http://mirrors.neusoft.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi</div><div class="line">deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi</div><div class="line">deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi</div></pre></td></tr></table></figure></p>
<p>首先我运行下列指令，确定我用的是最新系统软件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update &amp;&amp; apt-get upgrade -y</div></pre></td></tr></table></figure></p>
<p>配置树莓派支持中文<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install ttf-wqy-zenhei</div><div class="line">sudo apt-get install scim-pinyin</div></pre></td></tr></table></figure></p>
<h1 id="为树莓派做系统备份镜像（for-Linux-amp-Mac）"><a href="#为树莓派做系统备份镜像（for-Linux-amp-Mac）" class="headerlink" title="为树莓派做系统备份镜像（for Linux &amp; Mac）"></a>为树莓派做系统备份镜像（for Linux &amp; Mac）</h1><p><a href="http://shumeipai.nxez.com/2014/06/01/do-system-backup-image-of-raspberry-pi-for-linux-or-mac.html" target="_blank" rel="external">http://shumeipai.nxez.com/2014/06/01/do-system-backup-image-of-raspberry-pi-for-linux-or-mac.html</a></p>
<h1 id="魔镜"><a href="#魔镜" class="headerlink" title="魔镜"></a>魔镜</h1><ol>
<li>信息模式（kioskmode）</li>
</ol>
<p>现在就是要确定树莓派能够显示我在信息模式（kioskmode）下用Chromium浏览器显示的网页。Chromium浏览器是个能在树莓派操作系统上运行的开源浏览器。</p>
<p>一如既往，安装很简单：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install chromium x11-xserver-utils unclutter</div><div class="line">I have a Raspberry Pi 2 running Raspbian Jessie with Chromium 45 installed. I found that you need to copy the existing autostart file to your <span class="built_in">local</span>:</div><div class="line">cp /etc/xdg/lxsession/LXDE-pi/autostart /home/pi/.config/lxsession/LXDE-pi/autostart</div><div class="line">So edit this <span class="built_in">local</span> version:</div><div class="line">sudo nano /home/pi/.config/lxsession/LXDE-pi/autostart</div><div class="line"><span class="comment">#@xscreensaver -no-splash  # comment this line out to disable screensaver</span></div><div class="line">@xset s off</div><div class="line">@xset -dpms</div><div class="line">@xset s noblank</div><div class="line">@chromium --incognito --kiosk http://localhost/  <span class="comment"># load chromium after boot and point to the localhost webserver in full screen mode</span></div><div class="line">Save</div><div class="line">sudo reboot</div></pre></td></tr></table></figure></p>
<p>这样就能完全禁用所有屏保功能，及Chromium浏览器在开机后自动启动，开启全屏模式并导向本地主页。</p>
<ol>
<li>设置网页</li>
</ol>
<p>现在我们有了个多功能 Kiosk 啦。就缺个真实的网页了。我自己写了个应用，你可以随便修改或者直接用它。<br>我决定使用 PHP 的微架构 Lumen 以及一些 jQuery 和 MomentJs。</p>
<p>安装网页服务</p>
<p>要操作网页你首先得安装网页服务，要跑 Lumen 你首先得安装 php ：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install nginx php5-fpm php5-cli php5-mcrypt git</div></pre></td></tr></table></figure></p>
<p>这需要一点时间，不过你需要知道 MirrorMirror 网页安装在哪里，以便配置 nginx ：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /etc/nginx/sites-available/mirror.conf</div></pre></td></tr></table></figure></p>
<p>把以上配置复制到配置文件中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">  listen 80;</div><div class="line">  server_name localhost;</div><div class="line">  root /home/pi/projects/MirrorMirror/public;</div><div class="line">  index index.html index.htm index.php;</div><div class="line">  charset utf-8;</div><div class="line">  location / &#123; try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>; &#125;</div><div class="line">  location = /favicon.ico &#123; access_log off; log_not_found off; &#125;</div><div class="line">  location = /robots.txt &#123; access_log off; log_not_found off; &#125;</div><div class="line">  access_log off;</div><div class="line">  error_log /var/<span class="built_in">log</span>/nginx/myapp-error.log error;</div><div class="line">  sendfile off;</div><div class="line">  client_max_body_size 100m;</div><div class="line">  location ~ .php$ &#123;</div><div class="line">    fastcgi_split_path_info ^(.+.php)(/.+)$;</div><div class="line">    fastcgi_pass unix:/var/run/php5-fpm.sock;</div><div class="line">    fastcgi_index index.php; include fastcgi_params;</div><div class="line">    fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</div><div class="line">    fastcgi_intercept_errors off;</div><div class="line">    fastcgi_buffer_size 16k;</div><div class="line">    fastcgi_buffers 4 16k;</div><div class="line">  &#125;</div><div class="line">  location ~ /.ht &#123; deny all; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>然后激活这些配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo ln <span class="_">-s</span> /etc/nginx/sites-available/mirror.conf /etc/nginx/sites-enabled/mirror.conf</div><div class="line">sudo unlink /etc/nginx/sites-enabled/default</div><div class="line">sudo service nginx reload</div></pre></td></tr></table></figure></p>
<p>现在你的派里有了适用php的网页服务了！</p>
<ol>
<li>安装 MirrorMirror</li>
</ol>
<p>这是最后一步了，安装真实的网页。在 /home/pi 里建一个文件夹并进入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /home/pi/projects</div><div class="line"><span class="built_in">cd</span> /home/pi/projects</div></pre></td></tr></table></figure></p>
<p>用下面的命令克隆 MirrorMirror 网页应用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/ctrlaltdylan/MirrorMirror.git</div></pre></td></tr></table></figure></p>
<p>安装配置器以便安装 Lumen 的相关依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl <span class="_">-s</span>S https://getcomposer.org/installer | sudo php -- --install-dir=/usr/<span class="built_in">local</span>/bin --filename=composer</div></pre></td></tr></table></figure></p>
<p>使用配置器安装 Lumen 的依赖，启动 MirrorMirror 并运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> MirrorMirror</div><div class="line">composer install</div><div class="line">sudo chmod -R 777 storage</div></pre></td></tr></table></figure></p>
<p>进入 <a href="http://localhost" target="_blank" rel="external">http://localhost</a> 就可以看到你的 MirrorMirror 的版本以及运行结果啦！</p>
<p>目前的功能：</p>
<ul>
<li>显示天气预报以及萌萌的气象图案。</li>
<li>显示日期和时间。</li>
<li>显示一句随机的问候语，目前只有一句，不过计划会加更多啦。<br>当然为了更简单的安装和定制化还需要更多的工作，不过我已经在思考怎么改善它了。希望你像我一样享受建造和使用你自己的魔镜。</li>
</ul>
<p>树莓派的BIOS设置储存在系统启动分区中。在这分区中，有一个config.txt文件，载有所有设置。要旋转显示器，在这文件内加上以下一行代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">display_rotate=1</div></pre></td></tr></table></figure></p>
<p>要让显示器连接更加可靠，我就不解释为何加上下面允许HDMI线热插拔的代码了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hdmi_force_hotplug=1</div></pre></td></tr></table></figure></p>
<p>Other:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update &amp;&amp; apt-get upgrade -y</div><div class="line">sudo apt-get install apache2 apache2-doc apache2-utils</div><div class="line">sudo apt-get install libapache2-mod-php5 php5 php-pear php5-xcache</div><div class="line">sudo git <span class="built_in">clone</span> https://github.com/jangellx/MagicMirror.git</div></pre></td></tr></table></figure></p>
<p>树莓派磨制“魔镜”全记录<br><a href="http://askubuntu.com/questions/19898/whats-the-simplest-way-to-edit-and-add-files-to-var-www" target="_blank" rel="external">http://askubuntu.com/questions/19898/whats-the-simplest-way-to-edit-and-add-files-to-var-www</a><br>你今天太帅了：来用树莓派打造一个魔镜吧<br><a href="http://blog.dylanjpierce.com/raspberrypi/magicmirror/tutorial/2015/12/27/build-a-magic-mirror.html" target="_blank" rel="external">http://blog.dylanjpierce.com/raspberrypi/magicmirror/tutorial/2015/12/27/build-a-magic-mirror.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[创客硬件]]></title>
      <url>http://cuiqingwei.github.io/2015/11/18/2015-11-18-%E5%88%9B%E5%AE%A2%E7%A1%AC%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>SparkFun Electronics<br><a href="https://www.sparkfun.com/" target="_blank" rel="external">https://www.sparkfun.com/</a><br>美国Sparkfun是世界最具盛名的电子零配件供应商，主要面向产品原型开发以及项目设计。电子产品种类相当齐全多大上万种，有许多国内少见的电子产品都可以在这里觅寻到。</p>
<p>Adafruit Industries, Unique &amp; fun DIY electronics and kits<br><a href="http://www.adafruit.com/" target="_blank" rel="external">http://www.adafruit.com/</a></p>
<p>美国纽约的Adafruit是一家DIY公司，网上对此公司评价为创意无底限。该公司在智能穿戴设备、物联网上有很好的创意与发展。Adafruit的CEO是MIT工程硕士毕业的 Limor Fried，是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。<br><a id="more"></a><br>哈尔滨奥松机器人<br><a href="http://www.alsrobot.cn/index.php" target="_blank" rel="external">http://www.alsrobot.cn/index.php</a></p>
<p>dfrobot - DF创客社区-分享创造的喜悦<br><a href="http://www.dfrobot.com.cn/" target="_blank" rel="external">http://www.dfrobot.com.cn/</a></p>
<p>DFRobot-开源硬件和机器人<br><a href="http://www.dfrobot.cn/" target="_blank" rel="external">http://www.dfrobot.cn/</a></p>
<p>DFRobot 官方旗舰<br><a href="https://dfrobot.taobao.com/" target="_blank" rel="external">https://dfrobot.taobao.com/</a></p>
<p>DUINOPEAK-开源硬件社区-创客基地 | 将想法变为现实<br><a href="http://duinopeak.cn/wiki/index.php?title=%E9%A6%96%E9%A1%B5" target="_blank" rel="external">http://duinopeak.cn/wiki/index.php?title=%E9%A6%96%E9%A1%B5</a></p>
<p>DuinoPeak商城<br><a href="https://makeshields.taobao.com/" target="_blank" rel="external">https://makeshields.taobao.com/</a></p>
<p>Duinopeak<br><a href="http://www.duinopeak.com/store/" target="_blank" rel="external">http://www.duinopeak.com/store/</a></p>
<p>Seeed Studio! 深圳矽递科技<br>成立于2008年，是一家致力于促进开源硬件发展的服务型企业。我们通过提供模块化的快速开发工具，使设计者能根据创意，简单快速地开发出产品原型。此外，我们还通过提供从研发辅助，采购生产到渠道分销的一站式配套服务，帮助设计者实现从创意到产品的转换。3年以来，我们不断加大技术和研发投入，努力优化供应链和销售渠道，使得企业的服务能力一直处于行业领先状态。此外，为鼓励民族自主创新精神，我们还投资建立了深圳第一家Hackerspace——柴火，努力为设计者的创造和创业打造一个良好环境。坚持不懈的努力为我们赢得了行业尊重和客户信任。目前，我们已经与众多设计者建立了紧密的合作关系，其中包括Google, MICROSOFT, MIT, NASA, MAKEZINE等知名企业和组织。在开源硬件的框架下，合作推出了涉及新媒体艺术、嵌入式平台、物联网、智能家居、便携式仪器等领域的一系列明星产品和方案。基于对行业的深厚理解，以及不断的自我完善，我们正加快步伐，为实现”以促进开源硬件发展来推动创新精神传播”的愿景目标而前进。</p>
<p>淘宝商城<br><a href="https://shop105412212.taobao.com/" target="_blank" rel="external">https://shop105412212.taobao.com/</a></p>
<p>Arduino 是一款便捷灵活、方便上手的开源电子原型平台，包含硬件（各种型号的arduino板）和软件（arduino IDE)。它适用于艺术家、设计师、爱好者和对于“互动”有兴趣的朋友们。Arduino，是一个基于开放原始码的软硬体平台，构建于开放原始码simple I/O介面版，并且具有使用类似Java，C语言的Processing/Wiring开发环境</p>
<p>pcDuino是一种高性能，高性价比的迷你PC的平台，能够运行PC操作系统，如Ubuntu和Android的ICS等。它可以通过内置HDMI接口输出视频到电视或显示器屏幕。 pcDuino专门针对开源社区快速增长的需求，即希望有一个平台可以运行完整的PC操作系统，容易使用的工具链和兼容流行的Arduino开放的生态系统，如Arduino shield和开源项目等。<br>pcDuino的硬件性能指标远超树莓派，性能稳定，做工精良。pcDuino迷你计算机的CPU采用1GHz ARM Cortex A8内核，DRAM为1GB，板载存储达到2GB Flash, 完全兼容Arduino接口。另外，pcDuino 可以从NAND或者从mini-SD卡(TF卡)启动，在NAND Flash内有出厂预装了ubuntu系统，您拿到手即可使用。</p>
<p>Raspberry Pi是一款基于Linux系统的只有一张信用卡大小的单板机计算机。它由英国的树莓派基金会所开发，目的是以低价硬件及自由软件刺激在学校的基本的电脑科学教育。</p>
<p>Pololu是美国第一大机器人零件巨头公司，电子产品制造商和在线零售商。Pololu的主要产品是操控机器人各种运动的小型电子模块。从传感器和运动控制电子产品到电机和车轮来完成机器人的组装。<br><a href="https://www.pololu.com/" target="_blank" rel="external">https://www.pololu.com/</a></p>
<p>香港云雀视维技术有限公司 Skylark FPV Technologies Co., Ltd. 简称云雀视维（Skylark FPV）是业界领先的FPV飞行解决供应商，一直以来，我们基于客户需求持续创新，致力于为客户提供优质、安全、稳定的FPV配套设备和系统完善的解决方案。目前可以提供包含视频叠加(OSD)系统、自动天线跟踪、飞行姿态与控制、高精度抗干扰GPS等十余款系列产品，以及全系统的FPV飞行解决方案</p>
<p>三大主流开源硬件对比：Arduino vs BeagleBone vs Raspberry Pi<br><a href="http://www.csdn.net/article/2013-05-02/2815109-arduinouno-vs-beaglebone-vs-raspberrypi" target="_blank" rel="external">http://www.csdn.net/article/2013-05-02/2815109-arduinouno-vs-beaglebone-vs-raspberrypi</a></p>
<p>MIT 工程硕士毕业的 Limor Fried是创客浪潮里的扛旗人物，提起她的花名“Ladyada”，大概创客圈里无人不知。<br><a href="http://www.leiphone.com/news/201406/ladyada-maker.html" target="_blank" rel="external">http://www.leiphone.com/news/201406/ladyada-maker.html</a></p>
<p>永不消逝的电波——Arduino制作BCD码电波钟<br><a href="http://www.geek-workshop.com/thread-7797-1-1.html" target="_blank" rel="external">http://www.geek-workshop.com/thread-7797-1-1.html</a></p>
<p>3D打印笔作品<br><a href="http://www.3dyaya.com/" target="_blank" rel="external">http://www.3dyaya.com/</a></p>
<p>创客利器——关注3D打印<br><a href="http://segmentfault.com/a/1190000000458980" target="_blank" rel="external">http://segmentfault.com/a/1190000000458980</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[折叠公路车]]></title>
      <url>http://cuiqingwei.github.io/2015/10/03/2015-10-03-%E6%8A%98%E5%8F%A0%E5%85%AC%E8%B7%AF%E8%BD%A6/</url>
      <content type="html"><![CDATA[<h4 id="Ori-Surpaz-CR-1-0"><a href="#Ori-Surpaz-CR-1-0" class="headerlink" title="Ori Surpaz CR 1.0"></a>Ori Surpaz CR 1.0</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg" alt="1"><br><a id="more"></a><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_2.jpg" alt="2"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_3.jpg" alt="3"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_1.jpg" alt="4"></p>
<h4 id="Airnimal-Joey-Explore-Drop"><a href="#Airnimal-Joey-Explore-Drop" class="headerlink" title="Airnimal Joey - Explore Drop"></a>Airnimal Joey - Explore Drop</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=46" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=46</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_46_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_46_1.jpg" alt="2"></p>
<h4 id="Airnimal-Chameleon-Performance-Sport"><a href="#Airnimal-Chameleon-Performance-Sport" class="headerlink" title="Airnimal Chameleon - Performance Sport"></a>Airnimal Chameleon - Performance Sport</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=49" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=49</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_49_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_49_1.jpg" alt="2"></p>
<h4 id="Airnimal-Joey-Elite-Drop"><a href="#Airnimal-Joey-Elite-Drop" class="headerlink" title="Airnimal Joey - Elite Drop"></a>Airnimal Joey - Elite Drop</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=48" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=48</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_48_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_48_1.jpg" alt="2"></p>
<h4 id="Airnimal-Rhino-Road"><a href="#Airnimal-Rhino-Road" class="headerlink" title="Airnimal Rhino - Road"></a>Airnimal Rhino - Road</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=54" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=54</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_54_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_54_1.jpg" alt="2"></p>
<h4 id="Airnimal-Chameleon-Ultra"><a href="#Airnimal-Chameleon-Ultra" class="headerlink" title="Airnimal Chameleon - Ultra"></a>Airnimal Chameleon - Ultra</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=50" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=50</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_50_0.jpg" alt="1"></p>
<h4 id="Airnimal-Chameleon-Ultima"><a href="#Airnimal-Chameleon-Ultima" class="headerlink" title="Airnimal Chameleon - Ultima"></a>Airnimal Chameleon - Ultima</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=51" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=51</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_51_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-Pocket-Rocket-SELECT-2013"><a href="#Bike-Friday-Pocket-Rocket-SELECT-2013" class="headerlink" title="Bike Friday Pocket Rocket SELECT 2013"></a>Bike Friday Pocket Rocket SELECT 2013</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=209" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=209</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_209_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-Slik-Road-Alfine-11-extra-451"><a href="#Bike-Friday-Slik-Road-Alfine-11-extra-451" class="headerlink" title="Bike Friday Slik Road Alfine 11 extra - 451"></a>Bike Friday Slik Road Alfine 11 extra - 451</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=205" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=205</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_205_0.jpg" alt="1"></p>
<h4 id="Bike-Friday-PR-Super-Pro-SRAM-Red-Groupo"><a href="#Bike-Friday-PR-Super-Pro-SRAM-Red-Groupo" class="headerlink" title="Bike Friday PR Super Pro SRAM Red Groupo"></a>Bike Friday PR Super Pro SRAM Red Groupo</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=208" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=208</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_208_0.jpg" alt="1"></p>
<h4 id="Dahon-KC075TT"><a href="#Dahon-KC075TT" class="headerlink" title="Dahon KC075TT"></a>Dahon KC075TT</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=38" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=38</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_38_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_38_1.jpg" alt="2"></p>
<h4 id="Dahon-KAA075TT"><a href="#Dahon-KAA075TT" class="headerlink" title="Dahon KAA075TT"></a>Dahon KAA075TT</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=30" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=30</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_30_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_30_1.jpg" alt="2"></p>
<h4 id="Dahon-PDA006"><a href="#Dahon-PDA006" class="headerlink" title="Dahon PDA006"></a>Dahon PDA006</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=16" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=16</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_16_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_16_1.jpg" alt="2"></p>
<h4 id="Doppelganger-242-Artismo"><a href="#Doppelganger-242-Artismo" class="headerlink" title="Doppelganger 242 Artismo"></a>Doppelganger 242 Artismo</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=146" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=146</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_146_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_146_1.jpg" alt="2"></p>
<h4 id="Doppelganger-217-Miragen"><a href="#Doppelganger-217-Miragen" class="headerlink" title="Doppelganger 217 Miragen"></a>Doppelganger 217 Miragen</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=143" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=143</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_143_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_143_1.jpg" alt="2"></p>
<h4 id="Oyama-SKYLINE-PRO-CR20"><a href="#Oyama-SKYLINE-PRO-CR20" class="headerlink" title="Oyama SKYLINE PRO CR20"></a>Oyama SKYLINE PRO CR20</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=399" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=399</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_399_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RX-5R"><a href="#Oyama-FBI-RX-5R" class="headerlink" title="Oyama FBI RX-5R"></a>Oyama FBI RX-5R</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=181" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=181</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_181_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RX5-2015"><a href="#Oyama-FBI-RX5-2015" class="headerlink" title="Oyama FBI-RX5 (2015)"></a>Oyama FBI-RX5 (2015)</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=629" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=629</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_629_0.jpg" alt="1"></p>
<h4 id="KHS-F20-R451"><a href="#KHS-F20-R451" class="headerlink" title="KHS F20-R451"></a>KHS F20-R451</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=503" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=503</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_503_0.jpg" alt="1"></p>
<h4 id="KHS-P20-RD"><a href="#KHS-P20-RD" class="headerlink" title="KHS P20 - RD"></a>KHS P20 - RD</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=359" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=359</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_359_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-TR3"><a href="#Oyama-FBI-TR3" class="headerlink" title="Oyama FBI-TR3"></a>Oyama FBI-TR3</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=624" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=624</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_624_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RR3"><a href="#Oyama-FBI-RR3" class="headerlink" title="Oyama FBI-RR3"></a>Oyama FBI-RR3</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=622" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=622</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_622_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-TR5"><a href="#Oyama-FBI-TR5" class="headerlink" title="Oyama FBI-TR5"></a>Oyama FBI-TR5</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=623" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=623</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_623_0.jpg" alt="1"></p>
<h4 id="Oyama-FBI-RR5"><a href="#Oyama-FBI-RR5" class="headerlink" title="Oyama FBI-RR5"></a>Oyama FBI-RR5</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=621" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=621</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_621_0.jpg" alt="1"></p>
<h4 id="Ori-Surpaz-CR-1-0-1"><a href="#Ori-Surpaz-CR-1-0-1" class="headerlink" title="Ori Surpaz CR 1.0"></a>Ori Surpaz CR 1.0</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=386</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_2.jpg" alt="2"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_3.jpg" alt="3"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_386_1.jpg" alt="4"></p>
<h4 id="Tern-VERGE-X30h"><a href="#Tern-VERGE-X30h" class="headerlink" title="Tern VERGE X30h"></a>Tern VERGE X30h</h4><p><a href="http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=87" target="_blank" rel="external">http://15km.hk/index.php?comCat=bikedetails&amp;bikeId=87</a></p>
<p><img src="http://15km.hk/bike/images/bikeimage/bike_id_87_0.jpg" alt="1"><br><img src="http://15km.hk/bike/images/bikeimage/bike_id_87_1.jpg" alt="2"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux打补丁和git打patch方法 ]]></title>
      <url>http://cuiqingwei.github.io/2015/08/19/2015-08-19-Linux%E6%89%93%E8%A1%A5%E4%B8%81%E5%92%8Cgit%E6%89%93patch%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="一、linux打补丁方法"><a href="#一、linux打补丁方法" class="headerlink" title="一、linux打补丁方法"></a>一、linux打补丁方法</h1><h3 id="1、处理单个文件补丁的方法："><a href="#1、处理单个文件补丁的方法：" class="headerlink" title="1、处理单个文件补丁的方法："></a>1、处理单个文件补丁的方法：</h3><ul>
<li>产生补丁</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">diff -uN from-file to-file &gt;to-file.patch</div></pre></td></tr></table></figure>
<ul>
<li>打补丁</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">patch -p0 &lt; to-file.patch</div></pre></td></tr></table></figure>
<ul>
<li>取消补丁</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">patch -RE -p0 &lt; to-file.patch</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="2、对整个文件夹打补丁的情况"><a href="#2、对整个文件夹打补丁的情况" class="headerlink" title="2、对整个文件夹打补丁的情况:"></a>2、对整个文件夹打补丁的情况:</h3><ul>
<li>产生补丁</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">diff -uNr  from-docu  to-docu  &gt;to-docu.patch</div></pre></td></tr></table></figure>
<ul>
<li>打补丁</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd to-docu</div><div class="line">patch -p1 &lt; to-docu.patch</div></pre></td></tr></table></figure>
<ul>
<li>取消补丁</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">patch -R -p1 &lt; to-docu.patch</div></pre></td></tr></table></figure>
<h1 id="二、git打patch方法"><a href="#二、git打patch方法" class="headerlink" title="二、git打patch方法"></a>二、git打patch方法</h1><h3 id="1、git-format-patch-（推荐）"><a href="#1、git-format-patch-（推荐）" class="headerlink" title="1、git format-patch  （推荐）"></a>1、git format-patch  （推荐）</h3><p>只适用于git的patch<br>包含diff信息，包含提交人，提交时间等<br>如果git format-patch 生成的补丁不能打到当前分支，git am会给出提示，并协助你完成打补丁工作<br>例：从master checkout一个新分支修改然后与master对比生成patch。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git format-patch -M master //-M选项表示这个patch要和那个分支比对</div><div class="line">git am 001-xxx.patch（不必重新commit）</div></pre></td></tr></table></figure>
<h3 id="2、git-diff"><a href="#2、git-diff" class="headerlink" title="2、git diff"></a>2、git diff</h3><p>生成标准的patch，只包含diff信息<br>git diff生成的Patch兼容性强，可以用git apply –check 查看补丁是否能够干净顺利地应用到当前分支中。<br>例：从master checkout一个新分支修改然后与master对比生成patch。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git diff master &gt; patch</div><div class="line">git apply xxx.patch（需要重新commit）</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux]]></title>
      <url>http://cuiqingwei.github.io/2015/08/18/2015-08-18-Linux/</url>
      <content type="html"><![CDATA[<p><strong>通过8个技巧让你成为一个超强的Linux终端用户</strong> <a href="http://www.geekfan.net/7112/" target="_blank" rel="external">http://www.geekfan.net/7112/</a></p>
<p><strong>Tab</strong> 键自动补全<br>管道符命令　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls | grep really</div></pre></td></tr></table></figure></p>
<p>通配符<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm really*name</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>输出重定向　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls &gt; file1</div></pre></td></tr></table></figure></p>
<p>命令行历史　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hirstory</div></pre></td></tr></table></figure></p>
<p>波浪符”<strong>~</strong>”代表当前用户的主目录。所以，你可以使用”cd ~”切换到你的主目录，而不用输入”cd /home/name”。<br>这对相对路径同样使用，比如”cd ~/Desktop”会切换到当前用户的桌面目录。<br>与之类似的是，”<strong>.</strong>”代表当前目录，”..”代表父级目录。所有，”cd ..”会跳到父级目录。</p>
<p>后台命令　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firefox &amp;</div></pre></td></tr></table></figure></p>
<p>条件执行　<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sleep 5 &amp;&amp; gnome-screenshot 停5秒然后运行gnome的截屏工具</div></pre></td></tr></table></figure></p>
<p><strong>在Linux上安装ack</strong> <a href="http://www.geekfan.net/6881/" target="_blank" rel="external">http://www.geekfan.net/6881/</a></p>
<p><strong>linux 文本查找 grep, ack</strong> <a href="http://ju.outofmemory.cn/entry/26149" target="_blank" rel="external">http://ju.outofmemory.cn/entry/26149</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ wget http://beyondgrep.com/ack-2.12-single-file</div><div class="line">$ sudo mv ack-2.12-single-file /usr/<span class="built_in">local</span>/bin/ack</div><div class="line">$ sudo chmod 0755 /usr/<span class="built_in">local</span>/bin/ack</div></pre></td></tr></table></figure>
<p><strong>怎样从Linux终端管理进程：10个你必须知道的命令</strong> <a href="http://www.geekfan.net/7112/" target="_blank" rel="external">http://www.geekfan.net/7112/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">top、htop、ps、pstree、<span class="built_in">kill</span>、killall、xkill、pgrep</div></pre></td></tr></table></figure>
<p><strong>如何用Linux命令行管理网络：11个你必须知道的命令</strong>    <a href="http://www.geekfan.net/7192/" target="_blank" rel="external">http://www.geekfan.net/7192/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ping -c 4 baidu.com</div><div class="line">tracepath baidu.com</div><div class="line">tracerouter baidu.com</div><div class="line">mtr baidu.com</div><div class="line">whois baidu.com</div><div class="line">ifconfig eth0</div><div class="line">sudo ifdown eth0</div><div class="line">sudo ifup eth0</div><div class="line">sudo dhclient -r</div><div class="line">netstat <span class="_">-s</span></div></pre></td></tr></table></figure>
<p><strong>使用Linux命令行测试网速</strong>    <a href="http://www.geekfan.net/5521/" target="_blank" rel="external">http://www.geekfan.net/5521/</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py</div><div class="line">$ chmod a+rx speedtest_cli.py</div><div class="line">$ sudo mv speedtest_cli.py /usr/<span class="built_in">local</span>/bin/speedtest-cli</div><div class="line">$ sudo chown root:root /usr/<span class="built_in">local</span>/bin/speedtest-cli</div><div class="line">$ speedtest-cli</div></pre></td></tr></table></figure>
<p><strong>三张图看遍Linux 性能监控、测试、优化工具</strong> <a href="http://www.geekfan.net/13481/" target="_blank" rel="external">http://www.geekfan.net/13481/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[亚马逊云服务免费一年VPS主机翻墙术]]></title>
      <url>http://cuiqingwei.github.io/2015/08/15/2015-08-15-%E4%BA%9A%E9%A9%AC%E9%80%8A%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%85%8D%E8%B4%B9%E4%B8%80%E5%B9%B4VPS%E4%B8%BB%E6%9C%BA%E7%BF%BB%E5%A2%99%E6%9C%AF/</url>
      <content type="html"><![CDATA[<h3 id="Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法"><a href="#Amazon-AWS亚马逊云服务免费一年VPS主机成功申请和使用方法" class="headerlink" title="Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法"></a>Amazon AWS亚马逊云服务免费一年VPS主机成功申请和使用方法</h3><p><a href="http://www.freehao123.com/amazon-aws/" target="_blank" rel="external">http://www.freehao123.com/amazon-aws/</a></p>
<h3 id="How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT"><a href="#How-to-Connect-to-Amazon-EC2-Linux-AMI-using-SecureCRT" class="headerlink" title="How-to : Connect to Amazon EC2 Linux AMI using SecureCRT"></a>How-to : Connect to Amazon EC2 Linux AMI using SecureCRT</h3><p><a href="http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/" target="_blank" rel="external">http://blog.skufel.net/2012/09/how-to-connect-to-amazon-ec2-linux-ami-using-securecrt/</a><br><a id="more"></a></p>
<h3 id="基于-EC2-Shadowsocks-的翻墙解决方案"><a href="#基于-EC2-Shadowsocks-的翻墙解决方案" class="headerlink" title="基于 EC2 + Shadowsocks 的翻墙解决方案"></a>基于 EC2 + Shadowsocks 的翻墙解决方案</h3><p><a href="http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/" target="_blank" rel="external">http://www.harrycode.com/2015/07/26/EC2-ShadowSocks-GFW/</a></p>
<h3 id="烂泥：aws搭建shadowsocks服务器"><a href="#烂泥：aws搭建shadowsocks服务器" class="headerlink" title="烂泥：aws搭建shadowsocks服务器"></a>烂泥：aws搭建shadowsocks服务器</h3><p><a href="http://www.shaoqun.com/a/131549.aspx" target="_blank" rel="external">http://www.shaoqun.com/a/131549.aspx</a></p>
<h3 id="shadowsocks-windows-客户端"><a href="#shadowsocks-windows-客户端" class="headerlink" title="shadowsocks-windows 客户端"></a>shadowsocks-windows 客户端</h3><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">https://github.com/shadowsocks/shadowsocks-windows/releases</a><br><a href="https://www.shadowsocks.com/client.html" target="_blank" rel="external">https://www.shadowsocks.com/client.html</a></p>
<h3 id="Shadowsocks搭建、优化及客户端设置教程-优化之后youbtube的确秒开"><a href="#Shadowsocks搭建、优化及客户端设置教程-优化之后youbtube的确秒开" class="headerlink" title="Shadowsocks搭建、优化及客户端设置教程 (优化之后youbtube的确秒开)"></a>Shadowsocks搭建、优化及客户端设置教程 (优化之后youbtube的确秒开)</h3><p><a href="https://sinray.wordpress.com/2014/12/16/shadowsocks%E6%90%AD%E5%BB%BA%E3%80%81%E4%BC%98%E5%8C%96%E5%8F%8A%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/" target="_blank" rel="external">https://sinray.wordpress.com/2014/12/16/shadowsocks%E6%90%AD%E5%BB%BA%E3%80%81%E4%BC%98%E5%8C%96%E5%8F%8A%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/</a></p>
<p>—- ？？？ 以下未亲自测试 。。。</p>
<h3 id="EC2怎么搭梯子及优化"><a href="#EC2怎么搭梯子及优化" class="headerlink" title="EC2怎么搭梯子及优化"></a>EC2怎么搭梯子及优化</h3><p><a href="https://www.zxc.so/shadowsocks-ladder.html" target="_blank" rel="external">https://www.zxc.so/shadowsocks-ladder.html</a></p>
<h3 id="利用AWS免费账户搭建PPTP-VPN"><a href="#利用AWS免费账户搭建PPTP-VPN" class="headerlink" title="利用AWS免费账户搭建PPTP VPN"></a>利用AWS免费账户搭建PPTP VPN</h3><p><a href="http://blog.banban.me/blog/2014/06/09/li-yong-awsmian-fei-zhang-hu-da-jian-vpn/" target="_blank" rel="external">http://blog.banban.me/blog/2014/06/09/li-yong-awsmian-fei-zhang-hu-da-jian-vpn/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[常用Wi-Fi网络评测工具]]></title>
      <url>http://cuiqingwei.github.io/2015/07/23/2015-07-23-%E5%B8%B8%E7%94%A8Wi-Fi%E7%BD%91%E7%BB%9C%E8%AF%84%E6%B5%8B%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h1 id="inSSIDer2"><a href="#inSSIDer2" class="headerlink" title="inSSIDer2"></a>inSSIDer2</h1><p><a href="http://inssider.en.softonic.com/" target="_blank" rel="external">http://inssider.en.softonic.com/</a><br><img src="/img/20150723/1.png" alt=""><br><a id="more"></a></p>
<h1 id="WirelessMon"><a href="#WirelessMon" class="headerlink" title="WirelessMon"></a>WirelessMon</h1><p><a href="http://wirelessmon.com/" target="_blank" rel="external">http://wirelessmon.com/</a><br><a href="http://www.greenxiazai.com/soft/8567.html" target="_blank" rel="external">http://www.greenxiazai.com/soft/8567.html</a><br><img src="/img/20150723/2.jpg" alt=""></p>
<h1 id="NetIQ-Chariot"><a href="#NetIQ-Chariot" class="headerlink" title="NetIQ Chariot"></a>NetIQ Chariot</h1><p><a href="http://www.piaodown.com/soft/292.htm" target="_blank" rel="external">http://www.piaodown.com/soft/292.htm</a><br><img src="/img/20150723/3.jpg" alt=""></p>
<h1 id="IxChariot"><a href="#IxChariot" class="headerlink" title="IxChariot"></a>IxChariot</h1><p><a href="http://www.wandoujia.com/apps/com.ixia.ixchariot" target="_blank" rel="external">http://www.wandoujia.com/apps/com.ixia.ixchariot</a><br><img src="/img/20150723/4.jpeg" alt=""></p>
<p><a href="http://www.doc88.com/p-61963991908.html" target="_blank" rel="external">http://www.doc88.com/p-61963991908.html</a><br><a href="http://bbs.zol.com.cn/quanzi/d14_2.html" target="_blank" rel="external">http://bbs.zol.com.cn/quanzi/d14_2.html</a></p>
<h1 id="Omnipeek-抓包软件加D-Link-DWA-160抓包分析"><a href="#Omnipeek-抓包软件加D-Link-DWA-160抓包分析" class="headerlink" title="Omnipeek 抓包软件加D-Link DWA-160抓包分析"></a>Omnipeek 抓包软件加D-Link DWA-160抓包分析</h1><p>Omnipeek软件下载链接<br><a href="http://www.pc0359.cn/downinfo/18889.html" target="_blank" rel="external">http://www.pc0359.cn/downinfo/18889.html</a><br><img src="/img/20150723/5.jpg" alt=""></p>
<h1 id="D-Link-DWA-160购买链接"><a href="#D-Link-DWA-160购买链接" class="headerlink" title="D-Link DWA-160购买链接"></a>D-Link DWA-160购买链接</h1><p><a href="http://s.taobao.com/search?ie=utf8&amp;initiative_id=staobaoz_20150714&amp;stats_click=search_radio_all%3A1&amp;js=1&amp;;imgfile=&amp;q=dwa-160&amp;suggest=0_1&amp;_input_charset=utf-8&amp;wq=dwa160&amp;suggest_query=dwa160&amp;source=suggest&amp;sort=sale-desc" target="_blank" rel="external">http://s.taobao.com/search?ie=utf8&amp;initiative_id=staobaoz_20150714&amp;stats_click=search_radio_all%3A1&amp;js=1&amp;;imgfile=&amp;q=dwa-160&amp;suggest=0_1&amp;_input_charset=utf-8&amp;wq=dwa160&amp;suggest_query=dwa160&amp;source=suggest&amp;sort=sale-desc</a><br><img src="/img/20150723/6.jpg" alt=""></p>
<h1 id="最新OmniPeek无线驱动详细列表与下载说明"><a href="#最新OmniPeek无线驱动详细列表与下载说明" class="headerlink" title="最新OmniPeek无线驱动详细列表与下载说明"></a>最新OmniPeek无线驱动详细列表与下载说明</h1><p><a href="http://chenjiji.com/post/2721.html" target="_blank" rel="external">http://chenjiji.com/post/2721.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[有趣的Linux命令行功效]]></title>
      <url>http://cuiqingwei.github.io/2015/07/16/2015-07-16-%E6%9C%89%E8%B6%A3%E7%9A%84Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8A%9F%E6%95%88/</url>
      <content type="html"><![CDATA[<h1 id="1-sl-命令"><a href="#1-sl-命令" class="headerlink" title="1.sl 命令"></a>1.sl 命令</h1><p>首先，安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install sl</div></pre></td></tr></table></figure></p>
<p>然后，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sl</div></pre></td></tr></table></figure></p>
<p>我们看到了动画蒸汽机机头从屏幕右边开往左边。这个火车头是用ASCLL字符绘制。<br><a id="more"></a><br>提供特定的选项如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SYNOPSIS</div><div class="line">sl [ -alFe ]</div><div class="line">DESCRIPTION</div><div class="line">sl Displays animations aimed to correct users who accidentally enter sl instead of ls. SL stands <span class="keyword">for</span> Steam Locomotive.</div><div class="line">OPTIONS</div><div class="line"><span class="_">-a</span> An accident seems to happen. You\<span class="string">'ll feel pity for people who cry for help.</span></div><div class="line">-l shows little one.</div><div class="line">-F It flies.</div><div class="line">-e Allow interrupt by Ctrl+C.</div></pre></td></tr></table></figure></p>
<h1 id="2-rev-命令（reverse）"><a href="#2-rev-命令（reverse）" class="headerlink" title="2. rev 命令（reverse）"></a>2. rev 命令（reverse）</h1><p>它会颠倒所输入的字符串。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$rev</span></div></pre></td></tr></table></figure></p>
<p>终端会提示我们通过标准输入提供一个字符串。那么在每行后面我们就可以同时看到输出。<br>比如，我们输入”mylinuxbook”然后按回车。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mylinuxbook</div><div class="line">koobxunilym</div><div class="line">$ cat strings.txt</div><div class="line">MyLinuxBook</div><div class="line">Linux is so much fun!</div><div class="line">Happy Birthday</div><div class="line">$ rev strings.txt</div><div class="line">kooBxuniLyM</div><div class="line">!nuf hcum os si xuniL</div><div class="line">yadhtriB yppaH</div></pre></td></tr></table></figure></p>
<h1 id="3-fortune-命令"><a href="#3-fortune-命令" class="headerlink" title="3. fortune  命令"></a>3. fortune  命令</h1><p>我们运行这个命令的时候随机找了一条谚语或信息。<br>首先要对其进行安装：$sudo apt-get install fortune<br>运行这个命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ fortune</div><div class="line">You have the power to influence all with whom you come <span class="keyword">in</span> contact.</div></pre></td></tr></table></figure></p>
<h1 id="4-figlet-命令"><a href="#4-figlet-命令" class="headerlink" title="4. figlet 命令"></a>4. figlet 命令</h1><p>这个命令会用大写方式把我们输入的字符串显示在标题栏，显示效果由ASCII字符组成。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install figlet</div></pre></td></tr></table></figure></p>
<p>输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ figlet mylinuxbook</div></pre></td></tr></table></figure></p>
<p>你可以试着用”figlet”在脚本标头或源代码中添加标题栏。</p>
<h1 id="5-toilet-命令"><a href="#5-toilet-命令" class="headerlink" title="5.toilet 命令"></a>5.toilet 命令</h1><p>它是个五颜六色的命令。与figlet一样，它会把文本显示称标题栏，但是效果更好。<br>安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install toilet</div></pre></td></tr></table></figure></p>
<p>输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$toilet</span> mylinuxbook</div></pre></td></tr></table></figure></p>
<p>它比figlet命令的效果更有艺术感。<br>不过，它还可以添加颜色。我们可以运行下列命令看到颜色：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$toilet</span> <span class="_">-f</span> mono12 -F metal mylinuxbook</div></pre></td></tr></table></figure></p>
<h1 id="6-cowsay-命令"><a href="#6-cowsay-命令" class="headerlink" title="6. cowsay 命令"></a>6. cowsay 命令</h1><p>它会用ASCII字符描绘牛，羊和许多其他动物。但是不是每个Linux发行版都带有这个命令。<br>使用下面的命令安装此命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install cowsay</div></pre></td></tr></table></figure></p>
<p>现在，运行命令，并在命令中给出一个信息字符串。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cowsay</span> “Linux is fun”</div></pre></td></tr></table></figure></p>
<p>我们会看到了一个有趣的图像<br>基本上，我们会看到一头牛告诉我们所输入的信息。<br>尽管这个命令中只出现了cow，但其实它还可以有羊的效果。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cowsay</span> <span class="_">-f</span> sheep “I too love linux”</div><div class="line">```　</div><div class="line">只需用 <span class="string">'-l 就能看到它能提供的所有动物。输入：</span></div><div class="line">```bash</div><div class="line">$cowsay -l</div></pre></td></tr></table></figure></p>
<p>系统会弹出下列信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Cow files <span class="keyword">in</span> /usr/share/cowsay/cows:</div><div class="line">apt beavis.zen bong bud-frogs bunny calvin cheese cock cower daemon default</div><div class="line">dragon dragon-and-cow duck elephant elephant-in-snake eyes flaming-sheep</div><div class="line">ghostbusters gnu head-in hellokitty kiss kitty koala kosh luke-koala</div><div class="line">mech-and-cow meow milk moofasa moose mutilated pony pony-smaller ren sheep</div><div class="line">skeleton snowman sodomized-sheep stegosaurus stimpy suse three-eyes turkey</div><div class="line">turtle tux unipony unipony-smaller vader vader-koala www</div></pre></td></tr></table></figure></p>
<p>因此，我们可以用 ‘-f’ 输入以上信息中的任何动物。如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cowsay <span class="_">-f</span> milk <span class="string">"Do you want to drink?"</span></div></pre></td></tr></table></figure></p>
<p>为了使之更有趣，你可以让cowsay说出fortune信息，如输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fortune</span> | cowsay</div></pre></td></tr></table></figure></p>
<h1 id="7-cmatrix-命令"><a href="#7-cmatrix-命令" class="headerlink" title="7. cmatrix 命令"></a>7. cmatrix 命令</h1><p>这个命令会在终端生成ASCII字符组成的矩阵风格的动画效果。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install cmatrix</div></pre></td></tr></table></figure></p>
<p>现在运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cmatrix</div></pre></td></tr></table></figure></p>
<p>用”ctrl+c” 结束，生成动画。</p>
<h1 id="8-oneko-命令"><a href="#8-oneko-命令" class="headerlink" title="8. oneko 命令"></a>8. oneko 命令</h1><p>我们都知道”猫和老鼠”的动画，这个命令会让我们想起他们的追逐游戏。<br>有了这行命令，我们可以看到一只猫在追老鼠（鼠标指示器）的效果。<br>先安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$sudo</span> apt-get install oneko</div></pre></td></tr></table></figure></p>
<p>运行这个命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ oneko</div></pre></td></tr></table></figure></p>
<p>然后你就可以看到不管鼠标指示器放到哪里，Tom猫都会追着跑。下面是截图，不过不足以显示动态的效果.</p>
<p>即便我们切换应用，猫也不会离开老鼠。它甚至没有局限于终端。<br>想关掉这个的时候，只需在终端里用ctrl+c 结束进程即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenWRT usefull commands]]></title>
      <url>http://cuiqingwei.github.io/2015/07/09/2015-07-09-OpenWRT-usefull-commands/</url>
      <content type="html"><![CDATA[<h1 id="不得不说"><a href="#不得不说" class="headerlink" title="不得不说"></a>不得不说</h1><p>在命令行，按两次<strong>TAB</strong>键，列出所有命令！</p>
<h1 id="硬件信息"><a href="#硬件信息" class="headerlink" title="硬件信息"></a>硬件信息</h1><ul>
<li>CPU:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /proc/cpuinfo</div></pre></td></tr></table></figure>
<ul>
<li>Memory:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">free</div><div class="line">cat /proc/meminfo</div></pre></td></tr></table></figure>
<ul>
<li>Disk Space:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">df -h</div><div class="line">cat /proc/mtd</div><div class="line">cat /proc/partitions</div></pre></td></tr></table></figure>
<p>当然还可以通过<strong>dmesg</strong>配合grep查看！<br><a id="more"></a></p>
<h1 id="其他信息"><a href="#其他信息" class="headerlink" title="其他信息"></a>其他信息</h1><ul>
<li>内核信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname <span class="_">-a</span></div></pre></td></tr></table></figure>
<ul>
<li>内核版本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname -r</div></pre></td></tr></table></figure>
<ul>
<li>kernel信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dmesg</div></pre></td></tr></table></figure>
<ul>
<li>系统日志</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logread</div></pre></td></tr></table></figure>
<ul>
<li>进程列表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps</div></pre></td></tr></table></figure>
<ul>
<li>获取运行时间，系统负载率</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uptime</div></pre></td></tr></table></figure>
<p><strong>11:45:37 up 3 days, 10:46,  load average: 0.00, 0.01, 0.04</strong><br>1、11:45:37          // 系统当前时间<br>2、up 3 days, 10:46  // 主机已运行时间,时间越大，说明你的机器越稳定。<br>3、load average      // 系统平均负载，统计最近1，5，15分钟的系统平均负载</p>
<ul>
<li>查看环境变量</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">env <span class="comment"># lists environmental variables</span></div></pre></td></tr></table></figure>
<ul>
<li>查找某正在运行进程的进程号</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pidof watchdog</div></pre></td></tr></table></figure>
<h1 id="Package管理"><a href="#Package管理" class="headerlink" title="Package管理"></a>Package管理</h1><p><strong>opkg</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg list | grep ppp    <span class="comment">#shows available modules grep filters out name</span></div></pre></td></tr></table></figure></p>
<ul>
<li>列出已安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg list-installed</div></pre></td></tr></table></figure>
<ul>
<li>打个包查看</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">opkg info firewall</div><div class="line">opkg files firewall</div></pre></td></tr></table></figure>
<h1 id="web管理"><a href="#web管理" class="headerlink" title="web管理"></a>web管理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">opkg info luci</div><div class="line">opkg info luci-ssl</div></pre></td></tr></table></figure>
<h1 id="查看DHCP客户端IP"><a href="#查看DHCP客户端IP" class="headerlink" title="查看DHCP客户端IP"></a>查看DHCP客户端IP</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /tmp/dhcp.leases</div></pre></td></tr></table></figure>
<h1 id="无线信息"><a href="#无线信息" class="headerlink" title="无线信息"></a>无线信息</h1><ul>
<li>帮助</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw <span class="built_in">help</span></div></pre></td></tr></table></figure>
<ul>
<li>获取设备的功能</li>
</ul>
<p>使用以下方法来获得所有设备的功能，如带宽信息（2.4GHz，和5GHz），和802.11n的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw list</div></pre></td></tr></table></figure></p>
<ul>
<li>扫描无线路由器/AP</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw dev wlan0 scan</div></pre></td></tr></table></figure>
<ul>
<li>查看连接Openwrt路由的无线客户端：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iwinfo wlan0 assoclist  </div><div class="line">iw dev wlan0 station dump</div></pre></td></tr></table></figure>
<ul>
<li>查看Openwrt路由无线信息：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iwinfo wlan0 info</div></pre></td></tr></table></figure>
<ul>
<li>重启无线：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wifi down &amp;&amp; sleep 5 &amp;&amp; wifi</div></pre></td></tr></table></figure>
<ul>
<li>一个bash脚本，输出当前无线客户端IP/MAC/名称/速率：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash  </span></div><div class="line"><span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"# IP address\tname\tMAC address\ttx bit\trx bit"</span>  </div><div class="line"><span class="keyword">for</span> interface <span class="keyword">in</span> `iw dev | grep Interface | cut <span class="_">-f</span> 2 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`  </div><div class="line"><span class="keyword">do</span>  </div><div class="line">  maclist=(`iw dev <span class="variable">$interface</span> station dump | grep Station | cut <span class="_">-f</span> 2 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`)  </div><div class="line">  txlist=(`iw dev wlan0 station dump|grep <span class="string">'tx bitrate'</span>|awk <span class="string">'&#123;print $3$4&#125;'</span>`)  </div><div class="line">  rxlist=(`iw dev wlan0 station dump|grep <span class="string">'rx bitrate'</span>|awk <span class="string">'&#123;print $3$4&#125;'</span>`)  </div><div class="line">  len=<span class="variable">$&#123;#maclist[@]&#125;</span>  </div><div class="line">  <span class="keyword">for</span> ((i=0;i&lt;<span class="variable">$len</span>;i++))  </div><div class="line">  <span class="keyword">do</span>  </div><div class="line">    mac=<span class="variable">$&#123;maclist[$i]&#125;</span>  </div><div class="line">    tx=<span class="variable">$&#123;txlist[$i]&#125;</span>  </div><div class="line">    rx=<span class="variable">$&#123;rxlist[$i]&#125;</span>  </div><div class="line">    ip=<span class="string">"UNKN"</span>  </div><div class="line">    host=<span class="string">""</span>  </div><div class="line">    ip=`cat /tmp/dhcp.leases | cut <span class="_">-f</span> 2,3,4 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span> | grep <span class="variable">$mac</span> | cut <span class="_">-f</span> 2 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`  </div><div class="line">    host=`cat /tmp/dhcp.leases | cut <span class="_">-f</span> 2,3,4 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span> | grep <span class="variable">$mac</span> | cut <span class="_">-f</span> 3 <span class="_">-s</span> <span class="_">-d</span><span class="string">" "</span>`  </div><div class="line">    <span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"<span class="variable">$ip</span>\t<span class="variable">$host</span>\t<span class="variable">$mac</span>\t<span class="variable">$tx</span>\t<span class="variable">$rx</span>"</span>|awk <span class="string">'&#123;printf "%-15s %-25s %-15s %-10s %-10s\n",$1,$2,$3,$4,$5&#125;'</span>  </div><div class="line">  <span class="keyword">done</span>  </div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<h1 id="查看gpio口的信息"><a href="#查看gpio口的信息" class="headerlink" title="查看gpio口的信息"></a>查看gpio口的信息</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /sys/kernel/debug/gpio</div></pre></td></tr></table></figure>
<h1 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h1><ul>
<li>查看USB连接设备</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /sys/kernel/debug/usb/devices</div></pre></td></tr></table></figure>
<h1 id="uci"><a href="#uci" class="headerlink" title="uci"></a>uci</h1><p><strong>uci (command) [arguments]</strong></p>
<p><em>Example:</em></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">uci <span class="built_in">set</span> dhcp.lan.leasetime=4h</div><div class="line">uci get dhcp.lan.leasetime</div><div class="line">uci show dhcp</div><div class="line">uci changes</div><div class="line">uci commit</div></pre></td></tr></table></figure>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><strong>swconfig</strong> 配置交换机;</p>
<p><strong>iwinfo</strong> 是OpenWrt中提供无线相关信息读取的软件.其中内置了诸如WEXT NL80211 madwifi等等驱动的各种信息读取方式.把不同类型的驱动整合出一个统一的接口供luci等使用;</p>
<p><strong>iwpriv iwlist iwconfig</strong> 是WEXT类型无线驱动专用的操作程序.</p>
<p>ifconfig<br>iwconfig<br>pkill</p>
<p>cat /proc/modules<br>cat /proc/devices<br>cat /proc/iomem<br>cat /proc/cmdline<br>cat /proc/interrupts</p>
<p>cd /<br>find -name easycap<br>./sys/bus/usb/drivers/easycap<br>./sys/module/usbcore/holders/easycap<br>./sys/module/snd/holders/easycap<br>./sys/module/snd_pcm/holders/easycap<br>./sys/module/videodev/holders/easycap<br>./sys/module/easycap</p>
<p>sys adminname open<br>sys password open<br>sys multiuser on |backd backd<br>sys cwmp disp</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenWRT折腾日记]]></title>
      <url>http://cuiqingwei.github.io/2015/07/08/2015-07-08-OpenWRT%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h2 id="2016-04-23-Openwrt-Yun"><a href="#2016-04-23-Openwrt-Yun" class="headerlink" title="2016-04-23 Openwrt Yun"></a>2016-04-23 Openwrt Yun</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/bash -ex</span></div></pre></td></tr></table></figure>
<h4 id="FEEDS"><a href="#FEEDS" class="headerlink" title="FEEDS"></a>FEEDS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall <span class="_">-a</span></div><div class="line">rm -rf feeds</div><div class="line">./scripts/feeds update <span class="_">-a</span></div><div class="line">./scripts/feeds install <span class="_">-a</span></div><div class="line">./scripts/feeds uninstall erlang freeswitch remotefs libzstream shflags opensips pulseaudio xmlrpc-c rtorrent sox umurmur-polarssl freecwmp-zstream osirisd logtrigger libplist libimobiledevice cmus mxml boost wt etherpuppet php4 aprx n2n pdnsd crtmpserver kissdx openconnect telepathy-python alljoyn</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="CONFIG"><a href="#CONFIG" class="headerlink" title="CONFIG"></a>CONFIG</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rm <span class="_">-f</span> .config</div><div class="line">git checkout .config</div><div class="line">sed <span class="string">'s/=m$/=n/'</span> &lt; .config &gt; .baseonlyconfig</div><div class="line">mv .config .origconfig</div><div class="line">mv .baseonlyconfig .config</div><div class="line">make oldconfig</div></pre></td></tr></table></figure>
<h4 id="BUILDING"><a href="#BUILDING" class="headerlink" title="BUILDING"></a>BUILDING</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">nice -n 10 make -j 2 V=s</div><div class="line">/etc/config/wireless</div><div class="line">config wifi-iface</div><div class="line">	option network <span class="string">'wwan'</span></div><div class="line">	option ssid <span class="string">'MiWiFi'</span></div><div class="line">	option encryption <span class="string">'psk2'</span></div><div class="line">	option device <span class="string">'radio0'</span></div><div class="line">	option mode <span class="string">'sta'</span></div><div class="line">	option bssid <span class="string">'8C:BE:BE:29:FE:56'</span></div><div class="line">	option key <span class="string">'1981021400'</span></div><div class="line">wireless.@wifi-iface[0]=wifi-iface                                              </div><div class="line">wireless.@wifi-iface[0].network=wwan                                            </div><div class="line">wireless.@wifi-iface[0].ssid=MiWiFi                                             </div><div class="line">wireless.@wifi-iface[0].encryption=psk2                                         </div><div class="line">wireless.@wifi-iface[0].device=radio0                                           </div><div class="line">wireless.@wifi-iface[0].mode=sta                                                </div><div class="line">wireless.@wifi-iface[0].bssid=8C:BE:BE:29:FE:56                                 </div><div class="line">wireless.@wifi-iface[0].key=1981021400</div></pre></td></tr></table></figure>
<h2 id="2016-04-11-DraginoYun-Shield"><a href="#2016-04-11-DraginoYun-Shield" class="headerlink" title="2016-04-11 DraginoYun Shield"></a>2016-04-11 DraginoYun Shield</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> src-svn packages https://github.com/arduino/openwrt-packages-yun/trunk &gt;&gt; feed.conf.default</div></pre></td></tr></table></figure>
<h4 id="更新package"><a href="#更新package" class="headerlink" title="更新package"></a>更新package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update <span class="_">-a</span></div></pre></td></tr></table></figure>
<h4 id="安装package"><a href="#安装package" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds install yun-conf</div><div class="line">./scripts/feeds install yun-scripts</div><div class="line">./scripts/feeds install luci-app-arduino-webpanel</div></pre></td></tr></table></figure>
<h4 id="单独编译package"><a href="#单独编译package" class="headerlink" title="单独编译package"></a>单独编译package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">make package/yun-conf/compile</div><div class="line">make package/yun-scripts/compile</div><div class="line">make package/luci-app-arduino-webpanel/compile</div><div class="line">make package/yun-conf/install</div><div class="line">make package/yun-scripts/install</div><div class="line">make package/luci-app-arduino-webpanel/install</div></pre></td></tr></table></figure>
<h2 id="2016-04-08-DraginoYun-Shield"><a href="#2016-04-08-DraginoYun-Shield" class="headerlink" title="2016-04-08 DraginoYun Shield"></a>2016-04-08 DraginoYun Shield</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">svn checkout https://github.com/dragino/openwrt-yun.git dragino-yun</div><div class="line"><span class="built_in">cd</span> dragino-yun/trunk</div><div class="line">./build_image.sh</div><div class="line"><span class="built_in">cd</span> openwrt</div><div class="line">vi feeds.config.default</div></pre></td></tr></table></figure>
<h4 id="断开packages-链接本地dragino-packages"><a href="#断开packages-链接本地dragino-packages" class="headerlink" title="断开packages,链接本地dragino-packages"></a>断开packages,链接本地dragino-packages</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-git dragino https://github.com/dragino/dragino-packages.git</span></div><div class="line">src-link dragino ../../dragino-packages</div></pre></td></tr></table></figure>
<h4 id="卸载package"><a href="#卸载package" class="headerlink" title="卸载package"></a>卸载package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall luci-app-iot-webpanel</div><div class="line">./scripts/feeds uninstall luci-app-sensor</div></pre></td></tr></table></figure>
<h4 id="更新package-1"><a href="#更新package-1" class="headerlink" title="更新package"></a>更新package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update luci-app-iot-webpanel</div></pre></td></tr></table></figure>
<h4 id="安装package-1"><a href="#安装package-1" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds install luci-app-iot-webpanel</div></pre></td></tr></table></figure>
<h4 id="单独编译package-1"><a href="#单独编译package-1" class="headerlink" title="单独编译package"></a>单独编译package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make package/luci-app-iot-webpanel/compile</div><div class="line">make package/luci-app-iot-webpanel/install</div></pre></td></tr></table></figure>
<h4 id="安装package-2"><a href="#安装package-2" class="headerlink" title="安装package"></a>安装package</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scp bin/ar71xx/packages/[packagename].ipk roo@ip:/tmp</div><div class="line">opkg install /tmp/[packagename].ipk</div></pre></td></tr></table></figure>
<p><a href="http://www.doodle3d.com/help/wiki/installing-updating-packages" target="_blank" rel="external">http://www.doodle3d.com/help/wiki/installing-updating-packages</a><br><a href="https://wiki.openwrt.org/doc/howto/build" target="_blank" rel="external">https://wiki.openwrt.org/doc/howto/build</a></p>
<h2 id="2016-04-05-ArduinoYun-Shield"><a href="#2016-04-05-ArduinoYun-Shield" class="headerlink" title="2016-04-05 ArduinoYun Shield"></a>2016-04-05 ArduinoYun Shield</h2><p><a href="http://www.znck007.com/forum.php?mod=viewthread&amp;tid=22687" target="_blank" rel="external">http://www.znck007.com/forum.php?mod=viewthread&amp;tid=22687</a><br>源<br><a href="https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/" target="_blank" rel="external">https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</a><br><a href="http://downloads.arduino.cc/openwrtyun/1/packages/" target="_blank" rel="external">http://downloads.arduino.cc/openwrtyun/1/packages/</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vi /etc/opkg.conf</div><div class="line">src/gz attitude_adjustment https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</div></pre></td></tr></table></figure></p>
<h4 id="使用putty登陆openwrt输入"><a href="#使用putty登陆openwrt输入" class="headerlink" title="使用putty登陆openwrt输入"></a>使用putty登陆openwrt输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg install kmod-usb-storage block-mount block-hotplug kmod-fs-ext4</div><div class="line">mkfs.ext4 /dev/sda1<span class="comment"># 格式化TF卡，第一次使用须格式化</span></div><div class="line">mkdir -p /mnt/sda1<span class="comment"># 新建一个TF卡目录</span></div><div class="line">mount /dev/sda1 /mnt/sda1<span class="comment"># 将TF卡挂载到/mnt/sda1目录</span></div></pre></td></tr></table></figure>
<h4 id="自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）"><a href="#自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）" class="headerlink" title="自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）"></a>自动挂载（这样就不需要每次都执行上面的命令挂载SD卡了）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/config/fstab</div></pre></td></tr></table></figure>
<h4 id="移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！"><a href="#移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！" class="headerlink" title="移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！"></a>移到最下面，按i键（编辑模式）然后复制下面，右击到putty就自动粘贴上去了！</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">config <span class="string">'mount'</span></div><div class="line">        option <span class="string">'device'</span> <span class="string">'/dev/sda1'</span></div><div class="line">        option <span class="string">'options'</span> <span class="string">'rw,sync'</span></div><div class="line">        option <span class="string">'enabled_fsck'</span> <span class="string">'0'</span></div><div class="line">        option <span class="string">'enabled'</span> <span class="string">'1'</span></div><div class="line">        option <span class="string">'target'</span> <span class="string">'/mnt/sda1'</span></div><div class="line">mkdir -p /mnt/sda1/php<span class="comment"># 新建软件包目录</span></div><div class="line"><span class="built_in">echo</span> dest phpdisk /mnt/sda1/php/ &gt;&gt; /etc/opkg.conf</div><div class="line">opkg --dest phpdisk install php5-fastcgi php5-mod-gd php5-mod-xml php5-mod-ctype php5-mod-session php5-mod-sockets php5-mod-tokenizer php5-mod-mcrypt php5-mod-mbstring php5-mod-pdo php5-mod-curl php5-mod-mysql</div></pre></td></tr></table></figure>
<h4 id="安装一个时区信息软件包，否则系统无法识别时区。"><a href="#安装一个时区信息软件包，否则系统无法识别时区。" class="headerlink" title="安装一个时区信息软件包，否则系统无法识别时区。"></a>安装一个时区信息软件包，否则系统无法识别时区。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install zoneinfo-asia</div></pre></td></tr></table></figure>
<h4 id="建立软连接，不然会找不到对应的库和配置文件："><a href="#建立软连接，不然会找不到对应的库和配置文件：" class="headerlink" title="建立软连接，不然会找不到对应的库和配置文件："></a>建立软连接，不然会找不到对应的库和配置文件：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/etc/php.ini /etc/php.ini</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/etc/php5 /etc/php5</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libpcre.so.0.0.1 /usr/lib/libpcre.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libpcreposix.so.0.0.0 /usr/lib/libpcreposix.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libsqlite.so.0.8.6 /usr/lib/libsqlite.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libsqlite3.so.0.8.6 /usr/lib/libsqlite3.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libxml2.so.2.7.8 /usr/lib/libxml2.so.2</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libz.so.1.2.3 /usr/lib/libz.so</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libuClibc++-0.2.4.so /usr/lib/libuClibc++.so.0</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/libmysqlclient.so.16 /usr/lib/libmysqlclient.so.16</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/lib/php /usr/lib/php</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/php/usr/bin/php-cgi /usr/bin/php-cgi</div></pre></td></tr></table></figure>
<h4 id="安装到内存"><a href="#安装到内存" class="headerlink" title="安装到内存"></a>安装到内存</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install php5-fastcgi php5-mod-gd php5-mod-xml php5-mod-ctype php5-mod-session php5-mod-sockets php5-mod-tokenizer php5-mod-mcrypt php5-mod-mbstring php5-mod-pdo php5-mod-curl php5-mod-mysql</div></pre></td></tr></table></figure>
<h4 id="编辑php-ini，方法如下。"><a href="#编辑php-ini，方法如下。" class="headerlink" title="编辑php.ini，方法如下。"></a>编辑php.ini，方法如下。</h4><h4 id="找到下面的字段修改为如下，如果有用”-”注析的就删掉："><a href="#找到下面的字段修改为如下，如果有用”-”注析的就删掉：" class="headerlink" title="找到下面的字段修改为如下，如果有用”;”注析的就删掉："></a>找到下面的字段修改为如下，如果有用”;”注析的就删掉：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">short_open_tag = On</div><div class="line">error_log = /var/<span class="built_in">log</span>/php_errors.log</div><div class="line">doc_root = <span class="string">"/mnt/sda1/www"</span>  修改成sd卡的路径。</div><div class="line">extension=ctype.so</div><div class="line">extension=curl.so</div><div class="line">extension=dom.so</div><div class="line">extension=exif.so</div><div class="line">extension=ftp.so</div><div class="line">extension=gd.so</div><div class="line">extension=gmp.so</div><div class="line">extension=hash.so</div><div class="line">extension=iconv.so</div><div class="line">extension=json.so</div><div class="line">extension=ldap.so</div><div class="line">extension=mbstring.so</div><div class="line">extension=mcrypt.so</div><div class="line">extension=mysql.so</div><div class="line">extension=openssl.so</div><div class="line">extension=pcre.so</div><div class="line">extension=pdo.so</div><div class="line">extension=pdo-mysql.so</div><div class="line">extension=pdo-pgsql.so</div><div class="line">extension=pdo_sqlite.so</div><div class="line">extension=pgsql.so</div><div class="line">extension=session.so</div><div class="line">extension=soap.so</div><div class="line">extension=sockets.so</div><div class="line">extension=sqlite.so</div><div class="line">extension=sqlite3.so</div><div class="line">extension=tokenizer.so</div><div class="line">extension=xml.so</div><div class="line">extension=xmlreader.so</div><div class="line">extension=xmlwriter.so</div><div class="line">date.timezone = Asia/Shanghai</div><div class="line">mysql.default_socket = /var/run/mysqld.sock</div><div class="line">session.auto_start = 1</div></pre></td></tr></table></figure>
<h4 id="和上面一样，打开-etc-config-uhttpd"><a href="#和上面一样，打开-etc-config-uhttpd" class="headerlink" title="和上面一样，打开/etc/config/uhttpd"></a>和上面一样，打开/etc/config/uhttpd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">option home <span class="string">'/mnt/sda1/www'</span>                 <span class="comment">#把/www修改成/mnt/sda1/www为放置网页的目录。</span></div><div class="line">option index_page index.php               	<span class="comment">#添加到后面</span></div><div class="line">list interpreter <span class="string">".php=/usr/bin/php-cgi"</span>   	<span class="comment">#添加到后面</span></div></pre></td></tr></table></figure>
<h4 id="然后重启uhttpd（在putty里输入命令回车）："><a href="#然后重启uhttpd（在putty里输入命令回车）：" class="headerlink" title="然后重启uhttpd（在putty里输入命令回车）："></a>然后重启uhttpd（在putty里输入命令回车）：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/uhttpd restart</div></pre></td></tr></table></figure>
<h4 id="使用putty安装mysql"><a href="#使用putty安装mysql" class="headerlink" title="使用putty安装mysql"></a>使用putty安装mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg install mysql-server</div></pre></td></tr></table></figure>
<h4 id="创建数据库目录"><a href="#创建数据库目录" class="headerlink" title="创建数据库目录"></a>创建数据库目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/sda1/mysql/data/mysql</div><div class="line">mkdir -p /mnt/sda1/mysql/data/tmp</div></pre></td></tr></table></figure>
<h4 id="查找到以下内容并修改如下："><a href="#查找到以下内容并修改如下：" class="headerlink" title="查找到以下内容并修改如下："></a>查找到以下内容并修改如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">datadir = /mnt/sda1/mysql/data/mysql/</div><div class="line">tmpdir  = /mnt/sda1/mysql/data/tmp/</div></pre></td></tr></table></figure>
<h4 id="bind-address-192-168-1-1"><a href="#bind-address-192-168-1-1" class="headerlink" title="bind-address = 192.168.1.1"></a>bind-address = 192.168.1.1</h4><h4 id="初始化建库"><a href="#初始化建库" class="headerlink" title="初始化建库"></a>初始化建库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_install_db --force</div></pre></td></tr></table></figure>
<h4 id="以关闭授权的方式启动mysql"><a href="#以关闭授权的方式启动mysql" class="headerlink" title="以关闭授权的方式启动mysql"></a>以关闭授权的方式启动mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqld --skip-grant &amp;</div></pre></td></tr></table></figure>
<h4 id="进入mysql-修改账号连接权限"><a href="#进入mysql-修改账号连接权限" class="headerlink" title="进入mysql,修改账号连接权限"></a>进入mysql,修改账号连接权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root mysql</div></pre></td></tr></table></figure>
<h4 id="进入mysql以后出现mysql-gt-提示符，再修改账号连接权限："><a href="#进入mysql以后出现mysql-gt-提示符，再修改账号连接权限：" class="headerlink" title="进入mysql以后出现mysql&gt;提示符，再修改账号连接权限："></a>进入mysql以后出现mysql&gt;提示符，再修改账号连接权限：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update user <span class="built_in">set</span> host=<span class="string">'%'</span> <span class="built_in">where</span> user=<span class="string">'root'</span> and host=<span class="string">'localhost'</span>;</div></pre></td></tr></table></figure>
<h4 id="修改数据库密码为edutech"><a href="#修改数据库密码为edutech" class="headerlink" title="修改数据库密码为edutech"></a>修改数据库密码为edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update user <span class="built_in">set</span> password=PASSWORD(<span class="string">'edutech'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</div></pre></td></tr></table></figure>
<h4 id="刷新数据库"><a href="#刷新数据库" class="headerlink" title="刷新数据库"></a>刷新数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flush privileges;</div></pre></td></tr></table></figure>
<h4 id="上面ok了以后，退出mysql"><a href="#上面ok了以后，退出mysql" class="headerlink" title="上面ok了以后，退出mysql"></a>上面ok了以后，退出mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">exit</span>;</div></pre></td></tr></table></figure>
<h4 id="重启mysql，以授权验证方式启动（为了系统安全）"><a href="#重启mysql，以授权验证方式启动（为了系统安全）" class="headerlink" title="重启mysql，以授权验证方式启动（为了系统安全）"></a>重启mysql，以授权验证方式启动（为了系统安全）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">killall mysqld</div></pre></td></tr></table></figure>
<h4 id="设定开机运行"><a href="#设定开机运行" class="headerlink" title="设定开机运行"></a>设定开机运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld <span class="built_in">enable</span></div></pre></td></tr></table></figure>
<h4 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/mysqld start</div></pre></td></tr></table></figure>
<h4 id="用Navicat新建数据库"><a href="#用Navicat新建数据库" class="headerlink" title="用Navicat新建数据库"></a>用Navicat新建数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">znckapi</div></pre></td></tr></table></figure>
<h4 id="新建查询"><a href="#新建查询" class="headerlink" title="新建查询"></a>新建查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE IF NOT EXISTS `api_worklist` (</div><div class="line">`id` int(16) unsigned NOT NULL AUTO_INCREMENT,</div><div class="line">`<span class="built_in">type</span>` int(2) NOT NULL COMMENT <span class="string">'1网设2上传3定时'</span>,</div><div class="line">`uid` int(8) NOT NULL,</div><div class="line">`sid` varchar(3) NOT NULL,</div><div class="line">`nid` varchar(3) NOT NULL,</div><div class="line">`data` varchar(32) NOT NULL,</div><div class="line">`note` varchar(64) NOT NULL,</div><div class="line">`status` int(2) NOT NULL COMMENT <span class="string">'1成功2失败3超过次数4超15分'</span>,</div><div class="line">`time` datetime NOT NULL,</div><div class="line">`ip` varchar(16) NOT NULL,</div><div class="line">`num` int(2) NOT NULL,</div><div class="line">PRIMARY KEY(`id`),</div><div class="line">KEY `uid` (`uid`),</div><div class="line">KEY `time` (`time`)</div><div class="line">)ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1;</div></pre></td></tr></table></figure>
<h4 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/sda1/python</div><div class="line"><span class="built_in">echo</span> dest pythondisk /mnt/sda1/python/ &gt;&gt; /etc/opkg.conf</div><div class="line">opkg --dest pythondisk install python</div><div class="line">ln <span class="_">-s</span> /mnt/sda1/python/usr/bin/python /usr/bin/python</div><div class="line">opkg --dest pythondisk install pyserial<span class="comment"># 安装串口通讯类</span></div><div class="line">opkg --dest pythondisk install python-mysql<span class="comment"># 安装mysql操作类</span></div></pre></td></tr></table></figure>
<p><a href="http://see.sl088.com/wiki/Opkg" target="_blank" rel="external">http://see.sl088.com/wiki/Opkg</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /mnt/sda1</div><div class="line">wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/pyserial_2.4-1_ar71xx.ipk</div><div class="line">wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/python-mysql_1.2.2-1_ar71xx.ipk</div><div class="line">2016-03-03 DRAGINO Yun Shield</div><div class="line">ssh root@192.168.199.159</div><div class="line">dragino</div><div class="line">root@dragino-7676e6:~<span class="comment"># cd /tmp/</span></div><div class="line">root@dragino-7676e6:/tmp<span class="comment">#</span></div><div class="line">root@dragino-7676e6:/tmp<span class="comment"># wget http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/luci-i18n-chine</span></div><div class="line">se_0.11.1-1_ar71xx.ipk</div><div class="line">root@dragino-7676e6:/tmp<span class="comment"># opkg install luci-i18n-chinese_0.11.1-1_ar71xx.ipk</span></div></pre></td></tr></table></figure></p>
<h2 id="2016-03-03-luci"><a href="#2016-03-03-luci" class="headerlink" title="2016-03-03 luci"></a>2016-03-03 luci</h2><p><a href="http://www.cnblogs.com/luopeng/p/4678704.html" target="_blank" rel="external">http://www.cnblogs.com/luopeng/p/4678704.html</a></p>
<h2 id="2016-01-22-web摄像头、mjpg-streamer"><a href="#2016-01-22-web摄像头、mjpg-streamer" class="headerlink" title="2016-01-22 web摄像头、mjpg-streamer"></a>2016-01-22 web摄像头、mjpg-streamer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">wget https://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/openwrt-ar71xx-generic-tl-wr2543-v1-squashfs-factory.bin</div><div class="line">scp bin/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin root@192.168.199.193:/tmp/</div><div class="line">mtd -r write openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin firmware</div><div class="line">uci show network.lan</div><div class="line">uci <span class="built_in">set</span> network.lan.proto=dhcp</div><div class="line">uci commit</div><div class="line">/etc/init.d/networtk restart</div><div class="line">&gt;&gt; opkg install kmod-video-uvc。</div><div class="line">&gt;&gt; ls /dev，如果有vedio的话，说明驱动安装成功（前提是要把摄像头插上）</div><div class="line">&gt;&gt; opkg install mjpg-streamer</div><div class="line">&gt;&gt; mjpg_streamer -b -i <span class="string">"input_uvc.so /dev/video0 -r 640x480 -yuv"</span> -o <span class="string">"output_http.so -p 8080 -w /web"</span></div><div class="line">http://192.168.199.193:8080/?action=stream（动态视频）</div><div class="line">http://192.168.199.193:8080/?action=snapshot（静态图像）</div></pre></td></tr></table></figure>
<h2 id="2015-08-25-mtk-openwrt-sdk"><a href="#2015-08-25-mtk-openwrt-sdk" class="headerlink" title="2015-08-25 mtk openwrt-sdk"></a>2015-08-25 mtk openwrt-sdk</h2><h4 id="for-mtksdk-openwrt-3-10-14-20141127-30965ec3-tar-bz2"><a href="#for-mtksdk-openwrt-3-10-14-20141127-30965ec3-tar-bz2" class="headerlink" title="for mtksdk-openwrt-3.10.14-20141127-30965ec3.tar.bz2"></a>for mtksdk-openwrt-3.10.14-20141127-30965ec3.tar.bz2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ack -w MediaTek --html</div><div class="line">openwrt-3.10.14_2014/package/ralink/ui/luci-mtk/patches/001-logo.patch</div></pre></td></tr></table></figure>
<h4 id="改logo-MediaTek-gt-Edutech"><a href="#改logo-MediaTek-gt-Edutech" class="headerlink" title="改logo MediaTek-&gt;Edutech"></a>改logo MediaTek-&gt;Edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ralink/ui/luci-mtk/src/modules/base/root/etc/config</div></pre></td></tr></table></figure>
<h4 id="luci-改language"><a href="#luci-改language" class="headerlink" title="luci 改language"></a>luci 改language</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ralink/drivers/mt76x2e/files</div></pre></td></tr></table></figure>
<h4 id="mt7612e-sh-改SSID"><a href="#mt7612e-sh-改SSID" class="headerlink" title="mt7612e.sh 改SSID"></a>mt7612e.sh 改SSID</h4><h4 id="for-mtksdk-openwrt-3-10-14-20150311-d021c937-tar-bz2"><a href="#for-mtksdk-openwrt-3-10-14-20150311-d021c937-tar-bz2" class="headerlink" title="for mtksdk-openwrt-3.10.14-20150311-d021c937.tar.bz2"></a>for mtksdk-openwrt-3.10.14-20150311-d021c937.tar.bz2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/ui/luci-mtk/patches/001-logo.patch</div></pre></td></tr></table></figure>
<h4 id="改logo-MediaTek-gt-Edutech-1"><a href="#改logo-MediaTek-gt-Edutech-1" class="headerlink" title="改logo MediaTek-&gt;Edutech"></a>改logo MediaTek-&gt;Edutech</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/ui/luci-mtk/src/modules/base/root/etc/config</div></pre></td></tr></table></figure>
<h4 id="luci-改language-1"><a href="#luci-改language-1" class="headerlink" title="luci 改language"></a>luci 改language</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/drivers/mt7620/files</div></pre></td></tr></table></figure>
<h4 id="mt7620-sh-改SSID"><a href="#mt7620-sh-改SSID" class="headerlink" title="mt7620.sh 改SSID"></a>mt7620.sh 改SSID</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14_2014/package/ramips/drivers/mt76x2e/files</div></pre></td></tr></table></figure>
<h4 id="mt7612e-sh-改SSID-1"><a href="#mt7612e-sh-改SSID-1" class="headerlink" title="mt7612e.sh 改SSID"></a>mt7612e.sh 改SSID</h4><h4 id="更新opkg-config源"><a href="#更新opkg-config源" class="headerlink" title="更新opkg.config源"></a>更新opkg.config源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/openwrt-3.10.14/package/base-files/image-config.in　文件中 173　行</div><div class="line">http://downloads.openwrt.org/barrier_breaker/14.07/ramips/mt7620a/packages</div></pre></td></tr></table></figure>
<h4 id="版本号"><a href="#版本号" class="headerlink" title="版本号"></a>版本号</h4><p>/openwrt-3.10.14/package/ramips/ui/luci-mtk/src/build/mkversion.sh<br>更改　luciname 和 luciversion为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">luciname    = <span class="string">"Edutech LuCI "</span></div><div class="line">luciversion = <span class="string">"0.12"</span></div></pre></td></tr></table></figure></p>
<h4 id="banner"><a href="#banner" class="headerlink" title="banner"></a>banner</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">figlet edutech <span class="_">-f</span> speed.flf -c -w 52</div><div class="line">         _________      _____           ______  </div><div class="line">    ___________  /___  ___  /______________  /_</div><div class="line">    _  _ \  __  /_  / / /  __/  _ \  ___/_  __ \</div><div class="line">    /  __/ /_/ / / /_/ // /_ /  __/ /__ _  / / /</div><div class="line">    \___/\__,_/  \__,_/ \__/ \___/\___/ /_/ /_/</div><div class="line"> -----------------------------------------------------</div><div class="line">             Shanghai Edutech Co.,Ltd</div><div class="line"> -----------------------------------------------------</div></pre></td></tr></table></figure>
<h4 id="profiles-和-固件名"><a href="#profiles-和-固件名" class="headerlink" title="profiles 和　固件名"></a>profiles 和　固件名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">openwrt-3.10.14/target/linux/ramips/mt7620/profiles</div><div class="line">MT7620a_MT7612e.mk</div><div class="line">openwrt-3.10.14/target/linux/ramips/image/Makefile</div></pre></td></tr></table></figure>
<h4 id="add-by-cuiqingwei-at-20150828"><a href="#add-by-cuiqingwei-at-20150828" class="headerlink" title="add by cuiqingwei at 20150828"></a>add by cuiqingwei at 20150828</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Image/Build/Profile/MT7620a_MT7612e=$(call BuildFirmware/Default8M/$(1),$(1),mt7612e,MT7620a_MT7612e)</div></pre></td></tr></table></figure>
<h4 id="去除有问题的iw"><a href="#去除有问题的iw" class="headerlink" title="去除有问题的iw"></a>去除有问题的iw</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds uninstall iw</div><div class="line">删除openwrt-3.10.14/package/network/utils目录下的iw目录</div></pre></td></tr></table></figure>
<h2 id="2015-08-13-openwrt-yun"><a href="#2015-08-13-openwrt-yun" class="headerlink" title="2015-08-13 openwrt-yun"></a>2015-08-13 openwrt-yun</h2><p>目录openwrt-yun/feeds/packages下arduino文件夹复制<br>到/openwrt/branches/barrier_breaker/package目录下<br>对应源码在openwrt/branches/barrier_breaker/build_dir/target-mips_34kc_uClibc-0.9.33.2/目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div><div class="line">Base System ---&gt;</div><div class="line">&lt;*&gt; yun-conf...................................... Custom Yún configurations            </div><div class="line"> &lt;*&gt; yun-scripts.......................................... Custom Yún scripts</div><div class="line">LuCI ---&gt;</div><div class="line">3. Applications ---&gt;</div><div class="line">&lt;*&gt; luci-app-arduino-webpanel............ simplified wifi configuration panel  </div><div class="line"><span class="built_in">echo</span> <span class="string">"src/gz barrier_breaker http://download.linino.org/dogstick/all-in-one/latest/packages/"</span> &gt;&gt; /etc/opkg.conf</div><div class="line">opkg install rng-tools --force-depends</div><div class="line">opkg install gnupg</div><div class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</div><div class="line">“Not enough random bytes available. Please <span class="keyword">do</span> some other work to give</div><div class="line">　the OS a chance to collect more entropy! (Need 284 more bytes)”</div><div class="line">First make sure you have the following available and have the rights to it:</div><div class="line">ls <span class="_">-l</span> /dev/urandom</div><div class="line"><span class="keyword">then</span> execute rngd against it:</div><div class="line">rngd -r /dev/urandom</div><div class="line">+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</div><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure></p>
<p><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a><br>成功！</p>
<h2 id="2015-08-12-arduino-yun"><a href="#2015-08-12-arduino-yun" class="headerlink" title="2015-08-12 arduino-yun"></a>2015-08-12 arduino-yun</h2><p><a href="https://www.snip2code.com/Snippet/38230/Install-Arduino-Yun-%28Linino%29-software-on" target="_blank" rel="external">https://www.snip2code.com/Snippet/38230/Install-Arduino-Yun-%28Linino%29-software-on</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">opkg install luci-lib-json luci rng-tools</div></pre></td></tr></table></figure></p>
<h4 id="If-rng-tools-is-not-installable-then-install-it-by-hand-from-e-g-http-download-linino-org-linino-distro-linino-dev-latest-packages-rng-tools-3-2-ar71xx-ipk"><a href="#If-rng-tools-is-not-installable-then-install-it-by-hand-from-e-g-http-download-linino-org-linino-distro-linino-dev-latest-packages-rng-tools-3-2-ar71xx-ipk" class="headerlink" title="If rng-tools is not installable, then install it by hand from e.g., http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk"></a>If rng-tools is not installable, then install it by hand from e.g., <a href="http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk" target="_blank" rel="external">http://download.linino.org/linino_distro/linino_dev/latest/packages/rng-tools_3-2_ar71xx.ipk</a></h4><h4 id="Edit-your-etc-opkg-conf-add"><a href="#Edit-your-etc-opkg-conf-add" class="headerlink" title="Edit your /etc/opkg.conf, add"></a>Edit your /etc/opkg.conf, add</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src/gz barrier_breaker http://download.linino.org/dogstick/all-in-one/latest/packages/</div></pre></td></tr></table></figure>
<h4 id="Comment-out-your-earlier-src-gz"><a href="#Comment-out-your-earlier-src-gz" class="headerlink" title="Comment out your earlier src/gz"></a>Comment out your earlier src/gz</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">opkg update</div><div class="line">opkg list|grep bridge</div><div class="line">opkg list|grep yun</div><div class="line">opkg install -force-overwrite cpu-mcu-bridge yun-conf yun-scripts luci-app-arduino-webpanel avrdude gnupg temboo spacebrew uSDaemon</div><div class="line">/etc/init.d/avahi-daemon start</div></pre></td></tr></table></figure>
<h4 id="Need-to-edit-in-order-to-change-to-correct-LED"><a href="#Need-to-edit-in-order-to-change-to-correct-LED" class="headerlink" title="Need to edit in order to change to correct LED"></a>Need to edit in order to change to correct LED</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/bin/blink-start</div><div class="line">/usr/bin/blink-stop</div><div class="line">rm /tmp/luci-indexcache</div></pre></td></tr></table></figure>
<h4 id="In-etc-avahi-avahi-daemon-conf-edit"><a href="#In-etc-avahi-avahi-daemon-conf-edit" class="headerlink" title="In /etc/avahi/avahi-daemon.conf edit"></a>In /etc/avahi/avahi-daemon.conf edit</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[server]</div><div class="line"><span class="built_in">enable</span>-dbus=no</div><div class="line">/etc/init.d/avahi-daemon <span class="built_in">enable</span></div><div class="line">/etc/init.d/avahi-daemon start</div></pre></td></tr></table></figure>
<p>SHOULD SHOW<br><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a></p>
<h4 id="NEED-TO-GENERATE-A-GPG-KEY-–-WHY"><a href="#NEED-TO-GENERATE-A-GPG-KEY-–-WHY" class="headerlink" title="NEED TO GENERATE A GPG KEY – WHY???"></a>NEED TO GENERATE A GPG KEY – WHY???</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure>
<h4 id="Works-only-if-rngd-is-there-generates"><a href="#Works-only-if-rngd-is-there-generates" class="headerlink" title="Works only if rngd is there, generates"></a>Works only if rngd is there, generates</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/arduino/arduino_gpg.asc</div><div class="line">/etc/arduino/arduino_gpg.pub</div><div class="line">/etc/arduino/arduino_gpg.sec</div></pre></td></tr></table></figure>
<p>#Apparently Yun uses avrdude linuxgpio, this is suggested by /etc/linino/test_avrdude.sh</p>
<p>#run-avrdude wants to edit sys/class/gpio/gpio21/value which does not exist here</p>
<p>#Also see <a href="http://www.tonylianlong.com/?p=135" target="_blank" rel="external">http://www.tonylianlong.com/?p=135</a></p>
<p>#It has modified files for the Arduino IDE and it has the GPG key and gpg binary</p>
<p>#They have also a modified /usr/bin/run-avrdude script which is pure genius, it changes linuxgpio to serial programming and if that is all that is required to change makes it trivial to hook up different boards via USB as well:</p>
<p>#!/bin/sh</p>
<p>#echo 1 &gt; /sys/class/gpio/gpio21/value</p>
<p>#avrdude -c linuxgpio -C /etc/avrdude.conf -p m32u4 -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xFB:m -Uflash:w:$1:i $2</p>
<p>#echo 0 &gt; /sys/class/gpio/gpio21/value</p>
<p>#echo “$2” &gt; /s2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /dev/ttyACM0</div><div class="line">lsusb|grep 0043</div><div class="line"><span class="keyword">if</span> [ <span class="string">"$?"</span>x == <span class="string">"0"</span>x ];<span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> UNO</div><div class="line">avrdude -V -p m328p -c arduino -b 115200 -P /dev/ttyACM0 -C /etc/avrdude.conf -U flash:w:<span class="variable">$1</span> <span class="variable">$2</span></div><div class="line"><span class="keyword">fi</span></div><div class="line">lsusb|grep 0042</div><div class="line"><span class="keyword">if</span> [ <span class="string">"$?"</span>x == <span class="string">"0"</span>x ];<span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> MEGA</div><div class="line">avrdude -V -C/etc/avrdude.conf -patmega2560 -cstk500v2 -P/dev/ttyACM0 -b115200 -D -Uflash:w:<span class="variable">$1</span> <span class="variable">$2</span>      </div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /dev/ttyACM0</div><div class="line">====</div><div class="line"><span class="comment"># kmod-fs-hfsplus and kmod-nls-utf8 sufficient to mount Mac devices?</span></div><div class="line">====</div><div class="line">For my own reference, these are the packages that come with the YUN according to http://download.linino.org/linino_distro/linino_dev/latest/openwrt-ar71xx-generic-rootfs.tar.gz:</div><div class="line">luci-lib-sys kmod-usb-storage terminfo libuci-lua libc opkg triggerhappy kmod-usb-core libpthread ubus iw kmod-crypto-manager luci-mod-admin-core busybox libubus-lua python-json kmod-crypto-hash libiwinfo-lua swconfig kmod-fs-reiserfs libiwinfo libdbus libcurl libdw kmod-lib-crc-ccitt libgpgme luci-theme-openwrt luci-theme-bootstrap kmod-pppoe kmod-video-core libavahi-client kmod-pppox kmod-ipt-conntrack kmod-lib-crc16 base-files kmod-fs-hfsplus netifd uboot-envtools kmod-usb-ohci dnsmasq usbutils luci-sgi-cgi libblkid ubusd libelf1 kmod-spi-gpio python kmod-i2c-core libgpg-error block-mount kmod-fs-vfat kmod-usb2 firewall luci-app-firewall kmod-fs-hfs temboo luci-lib-ipkg libuci liblua libip4tc avahi-dnsconfd libcyassl libdaemon kmod-ath9k libavahi uci lua kmod-fs-ext4 wpad-mini dbus dropbear kmod-ledtrig-timer curl kmod-nls-utf8 kmod-crypto-aes mtd libstdcpp kmod-crypto-core luci-theme-base libjson-c libgcc libreadline libip6tc luci-proto-ppp libffi libuuid luci-mod-admin-full ppp libubox kmod-leds-gpio libusb-1.0 kmod-gpio-button-hotplug gnupg libjson cpu-mcu-bridge luci-lib-web spacebrew librt libassuan kmod-mac80211 libjson-script swap-utils libblobmsg-json iptables hotplug2 kmod-ipt-nathelper kmod-fs-ntfs kmod-fuse jshn libncurses kmod-ipt-core luci-webpanel-linino kmod-ledtrig-default-on rng-tools libpolarssl kmod-ppp kmod-spi-bitbang avahi-daemon uhttpd-mod-lua python-mini kmod-wdt-ath79 avahi-utils libubus uhttpd libxtables avrdude zlib luci-lib-nixio luci-lib-json luci kmod-spi-tty-ds kmod-ath libexpat kernel libnl-tiny libbz2 blkid libusb luci-proto-core px5g kmod-nls-base luci-i18n-english libgdbm yun-scripts libusb-compat uhttpd-mod-ubus uSDaemon wireless-tools kmod-ath9k-common kmod-crypto-arc4 libopenssl kmod-scsi-core kmod-cfg80211 libavahi-dbus-support luci-lib-core ppp-mod-pppoe kmod-spi-dev kmod-ipt-nat kmod-ledtrig-netdev</div><div class="line">====</div><div class="line">opkg install avrdude --force-depends</div><div class="line">opkg install rng-tools --force-depends</div><div class="line">＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋</div><div class="line">opkg update</div><div class="line">opkg list|grep bridge</div><div class="line">opkg list|grep yun</div><div class="line">opkg install luci</div><div class="line">opkg install -force-overwrite cpu-mcu-bridge yun-conf yun-scripts luci-app-arduino-webpanel gnupg uSDaemon</div><div class="line">opkg install rng-tools avrdude --force-depends</div><div class="line">rm /tmp/luci-indexcache</div><div class="line">/etc/init.d/generate_new_gpg_key start</div></pre></td></tr></table></figure></p>
<p><a href="http://192.168.199.192/cgi-bin/luci/webpanel/homepage" target="_blank" rel="external">http://192.168.199.192/cgi-bin/luci/webpanel/homepage</a></p>
<h2 id="2015-07-24-YunWebUI"><a href="#2015-07-24-YunWebUI" class="headerlink" title="2015-07-24 YunWebUI"></a>2015-07-24 YunWebUI</h2><p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git</div></pre></td></tr></table></figure></p>
<p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>Development: the easy way<br>The easiest way to hack the web panel is to copy on your Yún the files you find in this repo, maintaining the folders structure.<br>For example, file usr/lib/lua/luci/controller/arduino/index.lua will go to /usr/lib/lua/luci/controller/arduino/index.lua on your Yún.<br>Then access the webpanel at <a href="http://arduino.local/" target="_blank" rel="external">http://arduino.local/</a> (where “arduino” is the name of your Yún), properly edit file index.lua and refresh the page to see the changes.<br>Once done, copy the files back to your pc and submit us a pull request, so that everyone can take advantage of the improvements you made.<br>Development: the fast, local but hard way<br>You need a GNU/Linux box and the following tools: subversion, gnupg, lua, make, gcc, wget. On Debian based distros, these are packages subversion, gnupg, lua5.1, liblua5.1-0-dev, build-essential, wget.<br><strong>参考</strong><br><a href="https://github.com/arduino/YunWebUI" target="_blank" rel="external">https://github.com/arduino/YunWebUI</a></p>
<h5 id="ubuntu系统设置"><a href="#ubuntu系统设置" class="headerlink" title="ubuntu系统设置"></a>ubuntu系统设置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/arduino</div><div class="line"><span class="built_in">cd</span> /etc/arduino</div><div class="line">sudo wget https://raw.githubusercontent.com/arduino/openwrt-packages-yun/master/arduino/yun-conf/files/etc/arduino/gpg_gen_key_batch</div><div class="line">sudo gpg --batch --gen-key /etc/arduino/gpg_gen_key_batch</div><div class="line">sudo rm <span class="_">-f</span> /etc/arduino/arduino_gpg.asc</div><div class="line">sudo gpg --no-default-keyring --secret-keyring /etc/arduino/arduino_gpg.sec --keyring /etc/arduino/arduino_gpg.pub --export --armor --output /etc/arduino/arduino_gpg.asc</div><div class="line">sudo chmod 644 /etc/arduino/arduino_gpg.*</div><div class="line">svn co http://svn.luci.subsignal.org/luci/branches/luci-0.11 luci</div><div class="line"><span class="built_in">cd</span> /home/router-dev/iot-gateway</div><div class="line">svn co https://github.com/arduino/YunWebUI/trunk yunWebUI</div></pre></td></tr></table></figure>
<p>进入openwrt目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/feeds</div><div class="line"><span class="built_in">cd</span> luci</div><div class="line">mkdir applications/arduino</div><div class="line">cp applications/myapplication/Makefile applications/arduino</div><div class="line">ln <span class="_">-s</span> /home/router-dev/iot-gateway/yunWebUI/usr/lib/lua/luci applications/arduino/luasrc</div><div class="line">ln <span class="_">-s</span> /home/router-dev/iot-gateway/yunWebUI/www applications/arduino/htdocs</div></pre></td></tr></table></figure></p>
<p>回到openwrt目录/home/router-dev/openwrt/branches/attitude_adjustment/feeds/luci<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make runuhttpd</div><div class="line">http://localhost:8080/cgi-bin/luci/webpanel/</div><div class="line">passwd：admin</div></pre></td></tr></table></figure></p>
<p>#luci-app-arduino-webpanel-1.5.6</p>
<p>#<a href="http://arduino.cc/download.php?f=/luci-app-arduino-webpanel-1.5.6.tar.bz2" target="_blank" rel="external">http://arduino.cc/download.php?f=/luci-app-arduino-webpanel-1.5.6.tar.bz2</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/package</div><div class="line">mkdir arduino</div><div class="line">touch Makefile</div></pre></td></tr></table></figure></p>
<p>复制以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (c) 2014 Arduino LLC. All right reserved.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This is free software, licensed under the GNU General Public License v2.</span></div><div class="line"><span class="comment"># See /LICENSE for more information.</span></div><div class="line"><span class="comment">#</span></div><div class="line">include $(TOPDIR)/rules.mk</div><div class="line">PKG_NAME:=luci-app-arduino-webpanel</div><div class="line">PKG_VERSION:=1.5.6</div><div class="line">PKG_RELEASE:=1</div><div class="line">PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2</div><div class="line">PKG_SOURCE_URL:=http://arduino.cc/download.php?f=/</div><div class="line">PKG_MD5SUM:=fbcadb0b846db24302<span class="built_in">cd</span>4e027bf3927e</div><div class="line">include $(INCLUDE_DIR)/package.mk</div><div class="line">define Package/luci-app-arduino-webpanel</div><div class="line">  SECTION:=luci</div><div class="line">  CATEGORY:=LuCI</div><div class="line">  SUBMENU:=3. Applications</div><div class="line">  TITLE:= simplified wifi configuration panel</div><div class="line">  DEPENDS:=+luci +luci-lib-json +uhttpd-mod-lua +yun-scripts</div><div class="line">endef</div><div class="line">define Package/luci-app-arduino-webpanel/description</div><div class="line">simplified wifi configuration panel</div><div class="line">endef</div><div class="line">define Build/Compile</div><div class="line"><span class="comment"># NOOP</span></div><div class="line">endef</div><div class="line">define Package/luci-app-arduino-webpanel/install</div><div class="line">$(INSTALL_DIR) $(1)/usr/lib/lua/luci/controller/arduino</div><div class="line">$(INSTALL_DIR) $(1)/usr/lib/lua/luci/view/arduino</div><div class="line">$(INSTALL_DIR) $(1)/www/luci-static/resources/arduino</div><div class="line">find $(PKG_BUILD_DIR)/usr/ -name <span class="string">'*.lua'</span> -exec luac <span class="_">-s</span> -o &#123;&#125; &#123;&#125; \;</div><div class="line">$(CP) $(PKG_BUILD_DIR)/usr/* $(1)/usr/</div><div class="line">$(CP) $(PKG_BUILD_DIR)/www/* $(1)/www/</div><div class="line">endef</div><div class="line">$(<span class="built_in">eval</span> $(call BuildPackage,luci-app-arduino-webpanel))</div></pre></td></tr></table></figure></p>
<p>make menuconfig<br>git clone <a href="https://github.com/arduino/openwrt-yun.git" target="_blank" rel="external">https://github.com/arduino/openwrt-yun.git</a></p>
<h1 id="2015-07-22-zigbeegw-luci"><a href="#2015-07-22-zigbeegw-luci" class="headerlink" title="2015-07-22 zigbeegw-luci"></a>2015-07-22 zigbeegw-luci</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># zigbeegw-luci</span></div><div class="line"><span class="built_in">cd</span> /home/router-dev/openwrt/branches/attitude_adjustment/package</div><div class="line">svn co https://github.com/paradislover/zigbeegw-luci/trunk zigbeegw</div><div class="line">make menuconfig</div><div class="line">LuCI ---&gt;</div><div class="line">    3.Applications ---&gt;</div><div class="line">&lt;*&gt; luci-app-zigbeegw ................ LuCI Support <span class="keyword">for</span> zigbeegw</div><div class="line">Kernel modules ---&gt;</div><div class="line">    USB Support ---&gt;</div><div class="line">&lt;*&gt; kmod-usb-acm</div><div class="line">&lt;*&gt; kmod-usb-serial</div><div class="line">&lt;*&gt;   kmod-usb-cp210x</div><div class="line">&lt;*&gt;   kmod-usb-pl2303</div><div class="line">make package/zigbee/clean</div><div class="line">make package/zigbee/compile</div><div class="line">make package/zibgee/install</div></pre></td></tr></table></figure>
<h2 id="2015-07-10-13-16-21-OpenWRT下远程调试"><a href="#2015-07-10-13-16-21-OpenWRT下远程调试" class="headerlink" title="2015-07-10,13,16,21 OpenWRT下远程调试"></a>2015-07-10,13,16,21 OpenWRT下远程调试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#### OpenWRT下远程调试 attitude_adjustment WR703N</span></div><div class="line">``` bash</div><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/attitude_adjustment</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div><div class="line">src-svn luci http://svn.luci.subsignal.org/luci/branches/luci-0.11/contrib/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div><div class="line"><span class="comment">#src-svn luci http://svn.luci.subsignal.org/luci/branches/luci-0.11/contrib/package</span></div></pre></td></tr></table></figure></p>
<p>并增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">      -&gt; [*] Toolchain Options</div><div class="line">   -&gt; [*]Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">-&gt; [*]Build gdb</div><div class="line">Base System –&gt; &lt;*&gt; dropbear        </div><div class="line">           　–&gt; &lt;*&gt; libstdcpp</div><div class="line">Network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line">Utilities –&gt; // 这两个选项会导致wr703n固件编译不出</div><div class="line">&lt;*&gt; gdb</div><div class="line">&lt;*&gt; gdbserver</div></pre></td></tr></table></figure></p>
<p><a href="https://dev.openwrt.org/ticket/18331" target="_blank" rel="external">https://dev.openwrt.org/ticket/18331</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ tar -xjf OpenWrt-ImageBuilder-ar71xx_generic-for-linux-i686.tar.bz2</div><div class="line">$ <span class="built_in">cd</span> OpenWrt-ImageBuilder-ar71xx_generic-for-linux-i686/</div><div class="line">$ make info | grep 703</div><div class="line">TLWR703:</div><div class="line">TP-LINK TL-WR703N</div><div class="line">$ make image PROFILE=TLWR703</div><div class="line">[...]</div><div class="line">$ ls <span class="_">-l</span> bin/ar71xx/</div><div class="line">make image PROFILE=TLWR703 PACKAGES=<span class="string">"luci luci-i18n-chinese libstdcpp vsftpd openssh-sftp-server gdb gdbserver"</span></div></pre></td></tr></table></figure></p>
<h2 id="2015-07-09-OpenWRT下远程调试"><a href="#2015-07-09-OpenWRT下远程调试" class="headerlink" title="2015-07-09 OpenWRT下远程调试"></a>2015-07-09 OpenWRT下远程调试</h2><h4 id="OpenWRT下远程调试-attitude-adjustment-WR703N"><a href="#OpenWRT下远程调试-attitude-adjustment-WR703N" class="headerlink" title="OpenWRT下远程调试 attitude_adjustment WR703N"></a>OpenWRT下远程调试 attitude_adjustment WR703N</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/attitude_adjustment</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div></pre></td></tr></table></figure></p>
<p>并增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.11</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make defconfig</div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">      -&gt; [*] Toolchain Options</div><div class="line">   -&gt; [*]Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">-&gt; [*]Build with debug information</div><div class="line">-&gt; [*]Build gdb</div><div class="line">Base System –&gt; &lt;*&gt; dropbear        </div><div class="line">           　–&gt; &lt;*&gt; libstdcpp</div><div class="line">Network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line">Utilities –&gt; &lt;*&gt; gdbserver</div></pre></td></tr></table></figure></p>
<p>结论：　未完全成功！！！</p>
<h2 id="2015-07-08-OpenWRT下远程调试-7620n"><a href="#2015-07-08-OpenWRT下远程调试-7620n" class="headerlink" title="2015-07-08 OpenWRT下远程调试 7620n"></a>2015-07-08 OpenWRT下远程调试 7620n</h2><h4 id="OpenWRT下远程调试-barrier-breaker-7620n"><a href="#OpenWRT下远程调试-barrier-breaker-7620n" class="headerlink" title="OpenWRT下远程调试 barrier_breaker 7620n"></a>OpenWRT下远程调试 barrier_breaker 7620n</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn co svn://svn.openwrt.org/openwrt/branches/barrier_breaker</div></pre></td></tr></table></figure>
<p>#<a href="http://blog.csdn.net/piggy1924/article/details/8557350" target="_blank" rel="external">http://blog.csdn.net/piggy1924/article/details/8557350</a></p>
<p>#<a href="http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO" target="_blank" rel="external">http://wenku.baidu.com/link?url=evvS3AjpZeFeKQYHPw7_80UctmoG0uVmNqKpZO-PDRwRw8jOydDBVkFeOpCpukEhyKwcVPpoVFR-byD1VeNfzpSYpIsn_thKC_mudbA5xzO</a><br>配置编译OpenWRT<br>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</div></pre></td></tr></table></figure></p>
<p>注释为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src-svn xwrt http://x-wrt.googlecode.com/svn/trunk/package</span></div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div><div class="line">~$ make defconfig</div><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<p>选择<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">?6?1 [*] Build the OpenWrt SDK</div><div class="line">?6?1 [*] Build the OpenWrt based Toolchain</div><div class="line">?6?1 [*] Advanced configuration options (fordevelopers)</div><div class="line">   -&gt; [*] Toolchain Options</div><div class="line">       -&gt; [*]Build/install fortran compiler</div><div class="line">   //  -&gt; [*]Build with debug information</div><div class="line">       -&gt; [*]Build gdb</div><div class="line">   //→ “gdb”</div><div class="line">   //→ “Build/install c++ compiler and libstdc++” (<span class="keyword">if</span> C++ is required)</div><div class="line">启动以下五项</div><div class="line">// Global build setting –&gt; Preferred standard C++ library -&gt; libstdc++</div><div class="line">Base System –&gt; &lt;*&gt; dropbear</div><div class="line">            –&gt; &lt;*&gt; libstdcpp</div><div class="line">Development –&gt; &lt;*&gt; gdb</div><div class="line">               &lt;*&gt; gdbserver</div><div class="line">network –&gt; file trasfer</div><div class="line">        &lt;*&gt; vsftpd</div><div class="line">–&gt; SSH</div><div class="line">        &lt;*&gt; openssh-sftp-server</div><div class="line"></div><div class="line">~$ make V=s</div></pre></td></tr></table></figure></p>
<p>结论：　未完全成功！！！</p>
<h2 id="2015-07-07-helloworld"><a href="#2015-07-07-helloworld" class="headerlink" title="2015-07-07 helloworld"></a>2015-07-07 helloworld</h2><p>####　内置　helloworld<br>a).在package目录下创建helloworld目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~$ <span class="built_in">cd</span> package</div><div class="line">~$ mkdir helloworld</div><div class="line">~$ <span class="built_in">cd</span> helloworld</div></pre></td></tr></table></figure></p>
<p>b).建立Makefile<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ touch Makefile</div><div class="line">~$ vim Makefile</div></pre></td></tr></table></figure></p>
<p>Makefile文件模板内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##############################################</span></div><div class="line"><span class="comment"># OpenWrt Makefile for helloworld program</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Most of the variables used here are defined in</span></div><div class="line"><span class="comment"># the include directives below. We just need to</span></div><div class="line"><span class="comment"># specify a basic description of the package,</span></div><div class="line"><span class="comment"># where to build our program, where to find</span></div><div class="line"><span class="comment"># the source files, and where to install the</span></div><div class="line"><span class="comment"># compiled program on the router.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Be very careful of spacing in this file.</span></div><div class="line"><span class="comment"># Indents should be tabs, not spaces, and</span></div><div class="line"><span class="comment"># there should be no trailing whitespace in</span></div><div class="line"><span class="comment"># lines that are not commented.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">##############################################</span></div><div class="line">include $(TOPDIR)/rules.mk</div><div class="line"><span class="comment"># Name and release number of this package</span></div><div class="line">PKG_NAME:=helloworld.qq.com/</div><div class="line">PKG_RELEASE:=1</div><div class="line"><span class="comment"># This specifies the directory where we're going to build the program.</span></div><div class="line"><span class="comment"># The root build directory, $(BUILD_DIR), is by default the build_mipsel</span></div><div class="line"><span class="comment"># directory in your OpenWrt SDK directory</span></div><div class="line">PKG_BUILD_DIR := $(BUILD_DIR)/$(PKG_NAME)</div><div class="line">include $(INCLUDE_DIR)/package.mk</div><div class="line"><span class="comment"># Specify package information for this program.</span></div><div class="line"><span class="comment"># The variables defined here should be self explanatory.</span></div><div class="line"><span class="comment"># If you are running Kamikaze, delete the DESCRIPTION</span></div><div class="line"><span class="comment"># variable below and uncomment the Kamikaze define</span></div><div class="line"><span class="comment"># directive for the description below</span></div><div class="line">define Package/helloworld</div><div class="line">SECTION:=utils</div><div class="line">CATEGORY:=Utilities</div><div class="line">TITLE:=Helloworld -- prints a <span class="built_in">test</span> message</div><div class="line">endef</div><div class="line"><span class="comment"># Uncomment portion below for Kamikaze and delete DESCRIPTION variable above</span></div><div class="line">define Package/helloworld/description</div><div class="line">        If you can<span class="string">'t figure out what this program does, you'</span>re probably</div><div class="line">        brain-dead and need immediate medical attention.</div><div class="line">endef</div><div class="line"><span class="comment"># Specify what needs to be done to prepare for building the package.</span></div><div class="line"><span class="comment"># In our case, we need to copy the source files to the build directory.</span></div><div class="line"><span class="comment"># This is NOT the default.  The default uses the PKG_SOURCE_URL and the</span></div><div class="line"><span class="comment"># PKG_SOURCE which is not defined here to download the source from the web.</span></div><div class="line"><span class="comment"># In order to just build a simple program that we have just written, it is</span></div><div class="line"><span class="comment"># much easier to do it this way.</span></div><div class="line">define Build/Prepare</div><div class="line">mkdir -p $(PKG_BUILD_DIR)</div><div class="line">$(CP) ./src/* $(PKG_BUILD_DIR)/</div><div class="line">endef</div><div class="line"><span class="comment"># We do not need to define Build/Configure or Build/Compile directives</span></div><div class="line"><span class="comment"># The defaults are appropriate for compiling a simple program such as this one</span></div><div class="line"><span class="comment"># Specify where and how to install the program. Since we only have one file,</span></div><div class="line"><span class="comment"># the helloworld executable, install it by copying it to the /bin directory on</span></div><div class="line"><span class="comment"># the router. The $(1) variable represents the root directory on the router running</span></div><div class="line"><span class="comment"># OpenWrt. The $(INSTALL_DIR) variable contains a command to prepare the install</span></div><div class="line"><span class="comment"># directory if it does not already exist.  Likewise $(INSTALL_BIN) contains the</span></div><div class="line"><span class="comment"># command to copy the binary file from its current location (in our case the build</span></div><div class="line"><span class="comment"># directory) to the install directory.</span></div><div class="line">define Package/helloworld/install</div><div class="line">$(INSTALL_DIR) $(1)/bin</div><div class="line">$(INSTALL_BIN) $(PKG_BUILD_DIR)/helloworld $(1)/bin/</div><div class="line">endef</div><div class="line"><span class="comment"># This line executes the necessary commands to compile our program.</span></div><div class="line"><span class="comment"># The above define directives specify all the information needed, but this</span></div><div class="line"><span class="comment"># line calls BuildPackage which in turn actually uses this information to</span></div><div class="line"><span class="comment"># build a package.</span></div><div class="line">$(<span class="built_in">eval</span> $(call BuildPackage,helloworld))</div></pre></td></tr></table></figure></p>
<p>c).创建src目录，并编写helloworld程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ mkdir src</div><div class="line">~$ <span class="built_in">cd</span> src</div></pre></td></tr></table></figure></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/****************</span></div><div class="line">* Helloworld.c</div><div class="line">*****************/</div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"hello world! \n\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编写Makefile文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># build helloworld executable when user executes "make"</span></div><div class="line">helloworld: helloworld.o</div><div class="line">$(CC) $(LDFLAGS) helloworld.o -o helloworld</div><div class="line">helloworld.o: helloworld.c</div><div class="line">$(CC) $(CFLAGS) -c helloworld.c</div><div class="line"><span class="comment"># remove object files and executable when user executes "make clean"</span></div><div class="line">clean:</div><div class="line">rm *.o helloworld</div><div class="line">在这两个文件的目录下，执行make 应该可以生成helloworld的可执行文件。执行helloworld后，能够打印出“hello world!”。 这一步，主要保证我们的源程序是可以正常编译的。</div><div class="line">d).编译</div><div class="line">~$ make menuconfig</div><div class="line">?6?1 Utilities -&gt; Toolchain Options</div><div class="line">→ (*) helloworld</div><div class="line">~$ make V=s</div></pre></td></tr></table></figure></p>
<h2 id="2015-07-06-OpenWRT-Build"><a href="#2015-07-06-OpenWRT-Build" class="headerlink" title="2015-07-06 OpenWRT Build"></a>2015-07-06 OpenWRT Build</h2><p>####　1.下载OpenWRT源码包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ svn checkout svn://svn.openwrt.org/openwrt/trunk</div></pre></td></tr></table></figure></p>
<p>进入源码文件夹：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ <span class="built_in">cd</span> trunk</div></pre></td></tr></table></figure></p>
<p>复制 feeds.conf.default 为 feeds.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ cp feeds.conf.default feeds.conf</div></pre></td></tr></table></figure></p>
<p>将feeds.conf中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git</div></pre></td></tr></table></figure></p>
<p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">src-git luci https://github.com/openwrt/luci.git;luci-0.12</div></pre></td></tr></table></figure></p>
<p>诸如此类源码,你得定期更新Feeds。 通过如上相同的命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update <span class="_">-a</span></div><div class="line">~$ ./scripts/feeds install <span class="_">-a</span></div></pre></td></tr></table></figure></p>
<p>下一步是检查编译环境，若可进行编译则生成默认配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ make defconfig</div></pre></td></tr></table></figure></p>
<p>menuconfig是一个基于文本的工具，它处理选择的目标（需要还是不需要）、编译生成软件包（openwrt下是IPKG格式）以及内核选项（编译成模块还是内核）等等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ make menuconfig</div></pre></td></tr></table></figure></p>
<h4 id="2-增加profile"><a href="#2-增加profile" class="headerlink" title="2. 增加profile"></a>2. 增加profile</h4><p>$ 在../target/linux/ramips/mt7620/profiles 目录增加 wrtnode.mk<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (C) 2015 OpenWrt.org</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This is free software, licensed under the GNU General Public License v2.</span></div><div class="line"><span class="comment"># See /LICENSE for more information.</span></div><div class="line"><span class="comment"># add by : cuiqingwei</span></div><div class="line"><span class="comment">#</span></div><div class="line">define Profile/WRTNODE</div><div class="line"> NAME:=Wrtnode</div><div class="line"> PACKAGES:=\</div><div class="line">kmod-usb-core kmod-usb-dwc2 kmod-usb2 kmod-usb-ohci \</div><div class="line">kmod-mt76</div><div class="line">endef</div><div class="line">define Profile/WRTNODE/Description</div><div class="line"> Support <span class="keyword">for</span> WRTnode Board</div><div class="line">endef</div><div class="line">$(<span class="built_in">eval</span> $(call Profile,WRTNODE))</div></pre></td></tr></table></figure></p>
<p>特别提醒：<br>a).profile文件的格式一定要书写正确。特别是 “\”反斜杠后面，千万不能有空格，否则会导致mt7620a整个subtarget都消失不见。<br>b).注意package之间的依赖关系，如kmod-ac97 kmod-sound-soc-core kmod-sound-mt7620都依赖于kmod-sound-core，那么就应该按照先后顺序依次写出，同样的道理：kmod-ac97 kmod-sound-soc-core应该出现在kmod-sound-mt7620前面。<br>c).必须删除tmp目录，才能让添加的profile生效。<br>最后，就可以在make menuconfig中看到你想要的东西啦。</p>
<h4 id="3-更改kernel-console打印波特率"><a href="#3-更改kernel-console打印波特率" class="headerlink" title="3.更改kernel console打印波特率"></a>3.更改kernel console打印波特率</h4><p>在..target/linux/ramips/dts/WRTNODE.dts中添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chosen &#123;</div><div class="line">bootargs = <span class="string">"console=ttyS0,115200"</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<hr>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h3 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make clean[清楚bin 目录]</div><div class="line">make dirclean[make clean]+[清除交叉编译工具及工具链目录]</div><div class="line">make distclean[清除所有相关的东西，包括下载的软件包，配置文件，feed内容等]</div></pre></td></tr></table></figure>
<h3 id="装-Luci-web-UI"><a href="#装-Luci-web-UI" class="headerlink" title="装 Luci web UI :"></a>装 Luci web UI :</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./scripts/feeds update packages luci</div><div class="line">./scripts/feeds install <span class="_">-a</span> -p luci</div></pre></td></tr></table></figure>
<h3 id="tftp更新固件"><a href="#tftp更新固件" class="headerlink" title="tftp更新固件"></a>tftp更新固件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tftp 0x80000000 wr703n-f.bin</div><div class="line">tftp 0x80000000 openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin</div><div class="line">erase 0x9f020000 +0x3c0000</div><div class="line">cp.b 0x80000000 0x9f020000 0x3c0000</div><div class="line">bootm 0x9f020000</div></pre></td></tr></table></figure>
<h3 id="scp至路由器更新固件"><a href="#scp至路由器更新固件" class="headerlink" title="scp至路由器更新固件"></a>scp至路由器更新固件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp bin/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin root@192.168.199.175:/tmp/</div><div class="line">mtd -r write openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin firmware</div><div class="line">scp zbGateway.bin root@192.168.199.175:/tmp/</div></pre></td></tr></table></figure>
<h3 id="Network-testing-with-iperf"><a href="#Network-testing-with-iperf" class="headerlink" title="Network-testing with iperf"></a>Network-testing with iperf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ping -c 5 192.168.199.175</div><div class="line">netcat -u <span class="_">-l</span> -p 2000 &gt; /dev/null</div><div class="line">nc -u <span class="_">-l</span> -p 2000 &gt; /dev/null</div><div class="line">dd <span class="keyword">if</span>=/dev/zero bs=1M count=100 | pv -brt | netcat -u 192.168.199.175 2000</div></pre></td></tr></table></figure>
<h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iperf <span class="_">-s</span></div><div class="line">iperf -c 192.168.199.175</div></pre></td></tr></table></figure>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">iperf <span class="_">-s</span> -u</div><div class="line">iperf -c 192.168.199.175 -u</div><div class="line">scp root@192.168.199.175:/etc/opkg.conf /home/router-dev/</div><div class="line">scp /home/router-dev/opkg.conf root@192.168.199.175:/etc/</div><div class="line">scp openwrt-helloworld root@192.168.199.175:/usr/</div><div class="line">root@OpenWrt:/<span class="comment"># gdbserver 192.168.199.175:10000 /usr/openwrt-helloworld</span></div></pre></td></tr></table></figure>
<h3 id="eclipse调试-没有成功"><a href="#eclipse调试-没有成功" class="headerlink" title="eclipse调试[没有成功]"></a>eclipse调试[没有成功]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/staging_dir</div><div class="line">mips-openwrt-linux-</div><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/staging_dir/toolchain-mips_r2_gcc-4.6-linaro_uClibc-0.9.33.2/bin</div><div class="line">/home/router-dev/openwrt/branches/attitude_adjustment/build_dir/toolchain-mips_r2_gcc-4.6-linaro_uClibc-0.9.33.2/gdb-linaro-7.2-2011.03-0/gdb/gdb</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/staging_dir</div><div class="line">mipsel-openwrt-linux-</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/staging_dir/toolchain-mipsel_24kec+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/bin</div><div class="line">/home/router-dev/openwrt/branches/barrier_breaker/build_dir/toolchain-mipsel_24kec+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/gdb-linaro-7.6-2013.05/gdb/gdb</div></pre></td></tr></table></figure>
<p>############################################################<br>??? 问题<br>mipsel-openwrt-linux-g++: warning: environment variable ‘STAGING_DIR’ not defined<br>!!! 解决<br>eclipse菜单Window-&gt;Preferences-&gt;C/C++-&gt;Environmentz增加<br>STAGING_DIR　<br>/home/router-dev/openwrt/trunk-dev/staging_dir<br><a href="http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/" target="_blank" rel="external">http://downloads.openwrt.org/attitude_adjustment/12.09/ar71xx/generic/packages/</a><br>//////////////////////////////////////////////////////////////////////////////////////<br>//////////////////////////////////////////////////////////////////////////////////////<br>将vsftpd编译进openwrt的固件中去</p>
<h1 id="http-chaochaoblog-com-archives-1007"><a href="#http-chaochaoblog-com-archives-1007" class="headerlink" title="http://chaochaoblog.com/archives/1007"></a><a href="http://chaochaoblog.com/archives/1007" target="_blank" rel="external">http://chaochaoblog.com/archives/1007</a></h1><p>首先进去我们已经下载好了源码的目录，如backfire或者其它分支的。然后利用feeds来下载安装vsftpd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">~$ ./scripts/feeds update</div><div class="line">~$ ./scripts/feeds install <span class="_">-d</span> m vsftpd</div></pre></td></tr></table></figure></p>
<p>之后你可以到目录/feeds/package/net/下看了，就会发现我们的vsftpd这个源码包都下载下来了。<br>之后回根目录，输入<br>~$ make menuconfig<br>在network –&gt; file trasfer下就可以找到vsftpd了，果断按下y选择编译进固件，当然你也可以选择m那么就只会编译出ipk文件来了。<br>~$ make V=s 编译出bin的固件镜像文件来，刷入flash，然后ssh之后ps查看进程<br>OpenWrt开启sftp，方便传输文件。修改opkg.conf文件</p>
<p>#<a href="http://see.sl088.com/wiki/Openwrt_opkg%E6%BA%90%E8%AE%BE%E7%BD%AE" target="_blank" rel="external">http://see.sl088.com/wiki/Openwrt_opkg%E6%BA%90%E8%AE%BE%E7%BD%AE</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@OpenWrt:~<span class="comment"># vi /etc/opkg.conf</span></div></pre></td></tr></table></figure></p>
<p>为<br>option overlay_root /overlay<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># src/gz chaos_calmer_base http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/packages/base</span></div><div class="line"><span class="comment"># src/gz chaos_calmer_luci http://downloads.openwrt.org/snapshots/trunk/ramips/mt7620/packages/luci</span></div><div class="line">src/gz chaos_calmer_packages http://downloads.openwrt.org/chaos_calmer/15.05-rc2/ramips/mt7620/packages/packages</div><div class="line"><span class="comment"># option check_signature 1</span></div></pre></td></tr></table></figure></p>
<p>主要去掉签名check,增加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">src/gz chaos_calmer_packages http://downloads.openwrt.org/chaos_calmer/15.05-rc2/ramips/mt7620/packages/packages</div><div class="line">root@OpenWrt:~<span class="comment"># opkg update</span></div><div class="line">root@OpenWrt:~<span class="comment"># opkg install vsftpd openssh-sftp-server</span></div><div class="line">root@OpenWrt:~<span class="comment"># /etc/init.d/vsftpd enable</span></div><div class="line">root@OpenWrt:~<span class="comment"># /etc/init.d/vsftpd start</span></div><div class="line">.....................</div></pre></td></tr></table></figure></p>
<p>#<a href="http://www.cnblogs.com/peteryj/archive/2011/08/23/2151216.html" target="_blank" rel="external">http://www.cnblogs.com/peteryj/archive/2011/08/23/2151216.html</a><br>a).建立调试环境<br>配置编译OpenWRT<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></p>
<p>启动以下两项<br>Advanced configuration options (for developers) –&gt; Toolchain options –&gt; Build gdb<br>Development –&gt; gdbserver<br>b).编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make V=99，如果已经编译过，则make toolchain/install 编译下gdb即可</div></pre></td></tr></table></figure></p>
<p>c).编译待调试程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></p>
<p>启动Advanced configuration options (for developers) –&gt; Build options –&gt; Enable debugging<br>编译程序<br>以snmpd为例 ，使用make package/net-snmp/compile去编译程序，生成带调试信息的snmpd，作为宿主机调试使用。<br>以上就是准备工作。下面简单介绍一下调试过程。<br>d).调试程序<br>启动目标机上的待调试程序<br>首先加载并启动编译好的OpenWRT系统，然后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gdbserver &lt;local_IP&gt;:&lt;port&gt; &lt;program&gt; &lt;args&gt;</div></pre></td></tr></table></figure></p>
<p>启动宿主机gdb<br>(这里要修复一个bug，方法是：cd <openwrtdir>/staging<em>dir/<targetarch>; rmdir lib; ln -s ../toolchain-<targetarch></targetarch></targetarch></em><gccver>/lib lib)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> &lt;openwrtdir&gt;/build_dir/toolchain-&lt;targetarch&gt;_&lt;gccver&gt;/gdb-6.3/gdb</div></pre></td></tr></table></figure></gccver></openwrtdir></p>
<p>./gdb– 启动<br>设置gdb，并启动调试程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">set</span> solib-absolute-prefix &lt;openwrtdir&gt;/staging_dir/&lt;targetarch&gt;</div><div class="line">file &lt;openwrtdir&gt;/build_dir/&lt;targetarch&gt;/&lt;path&gt;/&lt;executable&gt;</div></pre></td></tr></table></figure></p>
<p>连接目标机：target remote <ip>:<port><br>连接成功之后，就可以按正常的gdb调试流程进行调试了。</port></ip></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenWRT之dl下载分享]]></title>
      <url>http://cuiqingwei.github.io/2015/07/07/2015-07-07-OpenWRT%E4%B9%8Bdl%E4%B8%8B%E8%BD%BD%E5%88%86%E4%BA%AB/</url>
      <content type="html"><![CDATA[<p>在编译OpenWrt最新的trunk时，碰到一个Git源码取不下来（你懂得，被墙了！）<br>在google上搜了一下，找到一个dl的地址：<br><a href="http://193.87.95.148/openwrt/raspi/trunk/dl/" target="_blank" rel="external">http://193.87.95.148/openwrt/raspi/trunk/dl/</a><br>补充：OpenWrt中国站也有一个下载地址！<br><a href="http://downloads.openwrt.org.cn/sources/" target="_blank" rel="external">http://downloads.openwrt.org.cn/sources/</a></p>
<p>另外还有一个将openwrt官网上的软件都下载下来了，并在本地建了服务器，然后与共享给大家！！<br>跳转下载链接<a href="http://dl.openwrtdl.com/index.html" target="_blank" rel="external">http://dl.openwrtdl.com/index.html</a><br>软件包总数量达到了<strong>3926</strong>个！<br>最新更新时间：<strong>2016-05-09</strong><br><a id="more"></a><br>并用脚本每小时执行一次，与openwrt官网对比，当官网更新了软件包则将对应的软件包下载到本地，保证官网更新，本地也会更新的效果！</p>
<p>服务器在我家里放着，上海长城宽带，20M光纤，上传速度可以达到3MB，对于下载小的软件包足够了！！</p>
<p>另外我会写个脚本每个一小时与openwrt官网同步一次，发现更新则加入到本地！！</p>
<p>欢迎大家来下载，如果有哪些软件未包含进来，请留言给我！！！</p>
<p>====================================================</p>
<p>我把所有的软件都放进了百度云盘下载，本文章中也会有所有的软件包的列表</p>
<p>只要你在网页内用“ctrl+f”搜索你需要的软件包就可以下载了！</p>
<p>当然也可以先进入百度分享连接中，然后“ctrl+f”搜索，刚发现个问题，百度网盘中并不是一次性的加载完所有的软件包列表，而是加载一部分，当你把滚动条拉到最底时他才会加载新的，这很蛋疼。。。体验就不好了！</p>
<p>网盘分享连接：<a href="http://pan.baidu.com/s/1dD4Rl53" target="_blank" rel="external">http://pan.baidu.com/s/1dD4Rl53</a></p>
<p>另外分享几个国外的openwrt软件源下载的地方，当然速度不一定好</p>
<p><a href="http://mirror2.openwrt.org/sources/" target="_blank" rel="external">http://mirror2.openwrt.org/sources/</a>  （openwrt官方网站，服务器在匈牙利，目前已经停止更新）</p>
<p><a href="https://downloads.openwrt.org/sources/" target="_blank" rel="external">https://downloads.openwrt.org/sources/</a> （openwrt官方网站，服务器在匈牙利）</p>
<p><a href="http://downloads.openwrt.org.cn/sources/" target="_blank" rel="external">http://downloads.openwrt.org.cn/sources/</a> （国内dreambox和pandora团队建立的，服务器在日本）</p>
<p><a href="http://143.129.80.193/openwrt/dl/" target="_blank" rel="external">http://143.129.80.193/openwrt/dl/</a>  （比利时的一个网站上，资源比官方的少，目前已无法访问）</p>
<p>TPLINK-WR703的trunk的dl</p>
<p><a href="http://log.nihon-ryouri.asia/tpl703n/trunk/dl/" target="_blank" rel="external">http://log.nihon-ryouri.asia/tpl703n/trunk/dl/</a>  （服务器在法国）</p>
<p>========感谢leejon提供的统计数据========</p>
<p>软件包条目数：<br><a href="http://pan.baidu.com/s/1dD4Rl53" target="_blank" rel="external">http://pan.baidu.com/s/1dD4Rl53</a>   2022个<br><a href="http://mirror2.openwrt.org/sources" target="_blank" rel="external">http://mirror2.openwrt.org/sources</a>   3860个<br><a href="https://downloads.openwrt.org/sources" target="_blank" rel="external">https://downloads.openwrt.org/sources</a>   2672个<br><a href="http://downloads.openwrt.org.cn/sources" target="_blank" rel="external">http://downloads.openwrt.org.cn/sources</a>   3223个<br><a href="http://143.129.80.193/openwrt/dl" target="_blank" rel="external">http://143.129.80.193/openwrt/dl</a>   590个</p>
<p>原文链接 <a href="http://www.openwrtdl.com/wordpress/package-index-download" target="_blank" rel="external">http://www.openwrtdl.com/wordpress/package-index-download</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenWRT下ifconfig各接口说明]]></title>
      <url>http://cuiqingwei.github.io/2015/07/06/2015-07-06-OpenWRT%E4%B8%8Bifconfig%E5%90%84%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h1 id="rao-和raio（无线）"><a href="#rao-和raio（无线）" class="headerlink" title="rao 和raio（无线）"></a>rao 和raio（无线）</h1><p>这两个是成对出现，一看就知道是无线设备，它们各自对应一个SSID，分别是2.4G和5G。</p>
<h1 id="eth0（物理网卡）"><a href="#eth0（物理网卡）" class="headerlink" title="eth0（物理网卡）"></a>eth0（物理网卡）</h1><p>eth0.1 是vlan1分出的lan口。<br>eth0.2 是vlan分出的wan口。<br><a id="more"></a></p>
<h1 id="br-lan（无线-有线）"><a href="#br-lan（无线-有线）" class="headerlink" title="br-lan（无线+有线）"></a>br-lan（无线+有线）</h1><p>虚拟设备，br-lan = eth0.1 + rai0 + ra0，即将有线LAN口和无线网统一划分为 LAN，便于管理</p>
<h1 id="lo"><a href="#lo" class="headerlink" title="lo"></a>lo</h1><p>虚拟设备，自身的回环网设备。127.0.0.1</p>
<h1 id="aplic"><a href="#aplic" class="headerlink" title="aplic"></a>aplic</h1><p>虚拟设备，无线中继</p>
<h1 id="ppp0"><a href="#ppp0" class="headerlink" title="ppp0"></a>ppp0</h1><p>虚拟设备，连接PPTP服务器后分配的虚拟ip</p>
<h1 id="pppoe-wan"><a href="#pppoe-wan" class="headerlink" title="pppoe-wan"></a>pppoe-wan</h1><p>虚拟设备，拨号上网的</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenWRT经典网站]]></title>
      <url>http://cuiqingwei.github.io/2015/07/01/2015-07-01-OpenWRT%E7%BB%8F%E5%85%B8%E7%BD%91%E7%AB%99/</url>
      <content type="html"><![CDATA[<h1 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h1><p><a href="https://openwrt.org/" target="_blank" rel="external">https://openwrt.org/</a></p>
<ul>
<li>Releases<br><a href="https://downloads.openwrt.org/" target="_blank" rel="external">https://downloads.openwrt.org/</a></li>
<li>环境搭建及下载<br><a href="https://wiki.openwrt.org/doc/howto/buildroot.exigence" target="_blank" rel="external">https://wiki.openwrt.org/doc/howto/buildroot.exigence</a><br><a href="https://wiki.openwrt.org/zh-cn/doc/howto/buildroot.exigence" target="_blank" rel="external">https://wiki.openwrt.org/zh-cn/doc/howto/buildroot.exigence</a></li>
<li>使用说明<br><a href="https://wiki.openwrt.org/doc/howto/build" target="_blank" rel="external">https://wiki.openwrt.org/doc/howto/build</a><br><a href="https://wiki.openwrt.org/zh-cn/doc/howto/build" target="_blank" rel="external">https://wiki.openwrt.org/zh-cn/doc/howto/build</a></li>
<li>硬件支持列表<br><a href="https://wiki.openwrt.org/toh/start" target="_blank" rel="external">https://wiki.openwrt.org/toh/start</a><a id="more"></a>
<h1 id="OpenWRT中文网"><a href="#OpenWRT中文网" class="headerlink" title="OpenWRT中文网"></a>OpenWRT中文网</h1><a href="http://www.openwrt.org.cn/" target="_blank" rel="external">http://www.openwrt.org.cn/</a></li>
</ul>
<ul>
<li>网站提供的常用小工具，下载使用起来比较方方便<br><a href="http://downloads.openwrt.org.cn/software/" target="_blank" rel="external">http://downloads.openwrt.org.cn/software/</a></li>
</ul>
<h1 id="恩山无线论坛OpenWRT专版"><a href="#恩山无线论坛OpenWRT专版" class="headerlink" title="恩山无线论坛OpenWRT专版"></a>恩山无线论坛OpenWRT专版</h1><p><a href="http://www.right.com.cn/forum/forum-72-1.html" target="_blank" rel="external">http://www.right.com.cn/forum/forum-72-1.html</a></p>
<h1 id="openwrt-io"><a href="#openwrt-io" class="headerlink" title="openwrt.io"></a>openwrt.io</h1><p><a href="http://openwrt.io/" target="_blank" rel="external">http://openwrt.io/</a></p>
<ol>
<li>此站完全开源，放在github.com上，大家共同修改，通过travis-ci.org持续集成自动构建部署到七牛云存储上，无需服务器。</li>
<li>网站内容采用markdown，通过mkdocs生成HTML，是一个纯静态的网站。</li>
<li>为提高国内下载速度，OpenWrt SDK、opkg软件源等文件放在七牛云储存国内CDN上。</li>
</ol>
<h1 id="dl下载网"><a href="#dl下载网" class="headerlink" title="dl下载网"></a>dl下载网</h1><p><a href="http://www.openwrtdl.com/" target="_blank" rel="external">http://www.openwrtdl.com/</a><br>在编译OpenWrt最新的trunk时，碰到一个Git源码取不下来（你懂得，被墙了！）<br>该站点作者将openwrt官网上的软件都下载下来了，并在本地建了服务器，然后与共享给大家<br>另外，还有<br><a href="http://193.87.95.148/openwrt/raspi/trunk/dl/" target="_blank" rel="external">http://193.87.95.148/openwrt/raspi/trunk/dl/</a><br><strong>当你make过程出现Download failed或是404 Not Found时，到这些网站Ctrl+F找到你需要的，wget到dl目录即可继续make</strong></p>
<h1 id="夢想家"><a href="#夢想家" class="headerlink" title="夢想家"></a>夢想家</h1><p><a href="https://datahunter.org/wrt" target="_blank" rel="external">https://datahunter.org/wrt</a></p>
<h1 id="森亮号航海见识"><a href="#森亮号航海见识" class="headerlink" title="森亮号航海见识"></a>森亮号航海见识</h1><p><a href="http://see.sl088.com/wiki/%E5%88%86%E7%B1%BB:Openwrt%E7%BC%96%E8%AF%91" target="_blank" rel="external">http://see.sl088.com/wiki/%E5%88%86%E7%B1%BB:Openwrt%E7%BC%96%E8%AF%91</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[技术领域的深刻体会、教训]]></title>
      <url>http://cuiqingwei.github.io/2015/06/24/2015-06-24-%E6%8A%80%E6%9C%AF%E9%A2%86%E5%9F%9F%E7%9A%84%E6%B7%B1%E5%88%BB%E4%BD%93%E4%BC%9A%E3%80%81%E6%95%99%E8%AE%AD/</url>
      <content type="html"><![CDATA[<p>记录之，告诫自己；分享之，愿助他人。</p>
<p>学习一定要，知之为知之，不知为不知，不仅自己不能装逼，也不能向装逼的人讨教，否则只是相互浪费时间而已。</p>
<p>不要和不懂规则且贪婪的人合作，否则他们会反过来诬陷和要挟你。</p>
<p>和学生合作一定要谨慎，他们往往会高估自己的能力。</p>
<p>商业项目，一定要先签合同再做事。</p>
<p>不要用不成熟的技术做开发。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[三星平板工厂模式]]></title>
      <url>http://cuiqingwei.github.io/2015/06/03/2015-06-03-%E4%B8%89%E6%98%9F%E5%B9%B3%E6%9D%BF%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>进入应用桌面打开计算器输入 <strong>(+30012012732+</strong> 进入Factory Mode</p>
<p>On android 3.X version <strong>(+32286798378+</strong>           left bracket, plus, 3,2,2,8,6,7,9,8,3,7,8, plus<br>On android 4.X version <strong>(+30012012732+</strong>           left bracket, plus, 3,0,0,1,2,0,1,2,7,3,2, plus<br><a id="more"></a><br>Android 4.X 示例:<br><img src="/img/20150603/1.jpeg" alt=""></p>
<p>工厂模式代码一览（供参考）</p>
<p>*#06#                      – <em>To check IMEI No.</em><br>*#9090#                    – <em>Diagnostic Configuration</em><br>*#1234#                    – <em>to check software version of phone.</em><br>*#272*IMEI#                – <em>Reset User data + Change Sales Code</em><br>*#12580*369#               – <em>to check software and hardware information.</em><br>*#0228#                    – <em>Battery status (ADC, RSSI reading)</em><br>*2767*3855#                – <em>Full factory reset (Don’t dial it does not ask you to confirm unless you have problem)</em><br>*#0*#                      – <em>This Code shows Screen Test Menu (LCD Test Menu) Hidden Menu</em><br>*#7353#                    – <em>Self Test Mode (2nd Hidden Menu)</em></p>
<p>*#34971539#                <em>Camera firmware check/update</em><br>*#2263#                    <em>Service Mode - Baseband selection</em><br>*#9900#                    <em>SysDump</em><br>*#0011#                    <em>Service Mode - Radio parameters</em><br>*#0808#                    <em>USB Settings</em><br>*#2222#                    <em>Service Mode - FTA HW Version</em><br>*#1111#                    <em>Service Mode - FTA SW Version</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ZigBee射频模块晶振选型]]></title>
      <url>http://cuiqingwei.github.io/2015/03/01/2015-03-01-ZigBee%E5%B0%84%E9%A2%91%E6%A8%A1%E5%9D%97%E6%99%B6%E6%8C%AF%E9%80%89%E5%9E%8B/</url>
      <content type="html"><![CDATA[<p><a href="http://www.ti.com/lit/an/swra372c/swra372c.pdf" target="_blank" rel="external">AN100 - Crystal Selection Guide (Rev. C)</a></p>
<h3 id="CC2530"><a href="#CC2530" class="headerlink" title="CC2530"></a>CC2530</h3><p>NX3225SA : Crystal, 32.000MHz, 10/15ppm, 16 pF  ! Temp range -30 - +85 deg C !<br><a href="http://www.ndk.com/cn/products/search/crystal/1188115_1533.html" target="_blank" rel="external">http://www.ndk.com/cn/products/search/crystal/1188115_1533.html</a><br>TSX-3225 : Crystal, 32.000MHz, 16 pF, -10PPM/+10PPM, -40DEGC/+85DEGC, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/at/tsx3225.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/at/tsx3225.html</a><br>MC-306 : Crystal, 32.768 kHz, 12.5pF, 20/50 ppm,SMD package<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/mc306.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/mc306.html</a></p>
<h3 id="CC2538"><a href="#CC2538" class="headerlink" title="CC2538"></a>CC2538</h3><p>FA-128 : CRYSTAL, OSCILATOR, 32MHz, 10pF, -10PPM/+10PPM, -40DEGC/+85DEGC, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/at/fa128.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/at/fa128.html</a><br>FC-12M : CRYSTAL, OSCILATOR, 32.768kHz, -20PPM/ + 20PPM, -40DEGC/ +85DEGC, 12.5pF, SMD<br><a href="http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/fc12d12m.html" target="_blank" rel="external">http://www5.epsondevice.com/cn/quartz/product/crystal/tuning_fork/fc12d12m.html</a><br>ABS05 : 32.768KHZ<br><a href="http://www.abracon.com/Resonators/ABS05.pdf" target="_blank" rel="external">http://www.abracon.com/Resonators/ABS05.pdf</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[xclip,pbcopy,xsel用法 terminal 复制粘帖 (mac, ubuntu)]]></title>
      <url>http://cuiqingwei.github.io/2015/01/15/2015-01-15-xclip-pbcopy-xsel%E7%94%A8%E6%B3%95-terminal-%E5%A4%8D%E5%88%B6%E7%B2%98%E5%B8%96-mac-ubuntu/</url>
      <content type="html"><![CDATA[<h3 id="1-Mac下"><a href="#1-Mac下" class="headerlink" title="1.Mac下"></a>1.Mac下</h3><p>使用pbcopy命令。 # 对应有个pbpaste命令。</p>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">'Hello World!'</span> | pbcopy</div></pre></td></tr></table></figure></p>
<h1 id="将字符串Hello-World放入剪贴板"><a href="#将字符串Hello-World放入剪贴板" class="headerlink" title="将字符串Hello World放入剪贴板"></a>将字符串Hello World放入剪贴板</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat myFile.txt | pbcopy</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pbpaste &gt; file.txt</div></pre></td></tr></table></figure>
<a id="more"></a>
<p><em>要复制结果又想看到命令的输出</em><br>命令的结果输出时，如果给复制命令（即上面提到的命令clip、xsel、pbcopy）那么命令输出就看不到了。如果你想先看到命令的输出，可以下面这么做。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">echo</span> <span class="string">'Hello World!'</span> | tee tmp.file.txt  </div><div class="line">Hello World!  </div><div class="line">$ xsel &lt; tmp.file.txt  </div><div class="line">$ rm tmp.file.txt</div></pre></td></tr></table></figure></p>
<p>即先使用tee命令把输出输到控制台和一个文件中。命令执行完成后，再把输出的内容放到剪贴板中。</p>
<h3 id="2-Ubuntu下"><a href="#2-Ubuntu下" class="headerlink" title="2.Ubuntu下"></a>2.Ubuntu下</h3><p>ubuntu下的用户可以只用apt-get来安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install xclip</div></pre></td></tr></table></figure></p>
<p>其他发行版的用户可以选择自己的安装方式，也可以用源码编译安装，xclip项目的主页是：<a href="http://sourceforge.net/projects/xclip/" target="_blank" rel="external">http://sourceforge.net/projects/xclip/</a><br>xclip可以将内容输出到‘X’的剪切板中，比如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"Hello, world"</span> | xclip</div></pre></td></tr></table></figure></p>
<p>执行这个命令后你就可以用鼠标中键来在X程序中将内容粘贴出来。但是更多的时候，我们需要不仅仅把内容输出到‘X’的剪切板中，而是希望可以在GUI程序 中用ctrl + v也可以粘贴（比如，输出到gnome的剪切板中），下面这段命令就可以让你将内容输出到gnome的剪切板中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"Hello, world"</span> | xclip -selection clipboard</div></pre></td></tr></table></figure></p>
<p>再在一个GUI程序中按下ctrl + v，看下是不是粘贴上去了呢？顺着这个命令，我也重新写了一下ifconfig，让它在执行后输入内容到终端的同时，也将ip地址输出到剪切板中，因为通常情况下，查看ifconfig就是为了获取机器的ip地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> ifconfig=<span class="string">'/sbin/ifconfig &amp;&amp; echo `/sbin/ifconfig | sed -n 2p | awk "&#123; print \\$2 &#125;" | grep -o "[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;"` | xclip -selection clipboard'</span></div></pre></td></tr></table></figure></p>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xclip -sel clip &lt; file</div></pre></td></tr></table></figure></p>
<p>此时你就可以在网页等编辑框CTRL+V了。</p>
<p>项目主页：<a href="http://sourceforge.net/projects/xclip/" target="_blank" rel="external">http://sourceforge.net/projects/xclip/</a><br>命令man page: <a href="http://linux.die.net/man/1/xclip" target="_blank" rel="external">http://linux.die.net/man/1/xclip</a></p>
<p><strong>-i, -in</strong><br>read text into X selection from standard input or files (default)<br><strong>-o, -out</strong><br>prints the selection to standard out (generally for piping to a file or program)<br><strong>-f, -filter</strong><br>when xclip is invoked in the in mode with output level set to silent (the defaults), the filter option will cause xclip to print the text piped to standard in back to standard out unmodified<br><strong>-l, -loops</strong><br>number of X selection requests (pastes into X applications) to wait for before exiting, with a value of 0 (default) causing xclip to wait for an unlimited number of requests until another application (possibly another invocation of xclip) takes ownership of the selection<br><strong>-d, -display</strong><br>X display to use (e.g. “localhost:0”), xclip defaults to the value in $DISPLAY if this option is omitted</p>
<h3 id="3-Linux下"><a href="#3-Linux下" class="headerlink" title="3.Linux下"></a>3.Linux下</h3><p>使用xsel命令。</p>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cat README.TXT | xsel  </div><div class="line">cat README.TXT | xsel -b <span class="comment"># 如有问题可以试试-b选项  </span></div><div class="line">xsel &lt; README.TXT  </div><div class="line"><span class="comment"># 将readme.txt的文本放入剪贴板  </span></div><div class="line">xsel -c  </div><div class="line"><span class="comment"># 清空剪贴板</span></div></pre></td></tr></table></figure></p>
<h3 id="4-Windows下"><a href="#4-Windows下" class="headerlink" title="4.Windows下"></a>4.Windows下</h3><p>使用系统自带的clip命令。<br># 位于C:\Windows\system32\clip.exe。<br><!--more--><br>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> Hello | clip  </div><div class="line"><span class="comment"># 将字符串Hello放入Windows剪贴板  </span></div><div class="line">dir | clip  </div><div class="line"><span class="comment"># 将dir命令输出（当前目录列表）放入Windows剪贴板  </span></div><div class="line">clip &lt; README.TXT    </div><div class="line"><span class="comment"># 将readme.txt的文本放入Windows剪贴板  </span></div><div class="line"><span class="built_in">echo</span> | clip  </div><div class="line"><span class="comment"># 将一个空行放入Windows剪贴板，即清空Windows剪贴板</span></div></pre></td></tr></table></figure></p>
<p>注：不同系统使用不同的复制命令。避免用文本编辑器打开这个文件、选中文本、CTRL + C这样繁琐操作。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu]]></title>
      <url>http://cuiqingwei.github.io/2015/01/13/2015-01-13-Ubuntu/</url>
      <content type="html"><![CDATA[<h3 id="1-常用指令"><a href="#1-常用指令" class="headerlink" title="1.常用指令"></a>1.常用指令</h3><pre><code>版本查看：
      cat /etc/issue
      sudo lsb_release -a
</code></pre><a id="more"></a>
<h3 id="2-环境设置"><a href="#2-环境设置" class="headerlink" title="2.环境设置"></a>2.环境设置</h3><pre><code>zsh
     sudo apt-get install zsh
     https://github.com/robbyrussell/oh-my-zsh
fortune
      sudo apt-get install fortune
      https://github.com/ruanyf/fortunes

 右键添加终端打开
      sudo apt-get install nautilus-open-terminal
      sudo reboot

chrome
      apt-get install chromium chromium-l10n
      cd /tmp
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo apt-get install libxss1
      sudo dpkg -i google-chrome-stable_current_amd64.deb

svn&amp;git
      sudo apt-get install subversion
      sudo apt-get install git

sublime text       
      wget https://download.sublimetext.com/sublime-text_build-3114_amd64.deb
      sudo dpkg -i sublime-text_build-3114_amd64.deb
      key http://www.52pojie.cn/thread-499175-1-1.html
      &quot;update_check&quot;:false
      https://packagecontrol.io/installation          
meld
     sudo apt-get install meld

eclipse
     sudo apt-get install eclipse eclipse-cdt

arduino
     sudo apt-get install arduino

eagle
     wget http://web.cadsoft.de/ftp/eagle/program/7.6/eagle-lin64-7.6.0.run
     sh eagle-lin64-7.6.0.run

hosts
     https://github.com/racaljk/hosts
</code></pre><p><strong>Cannot Set LC_ALL to default locale: No such file or directory</strong><br><a href="http://linoxide.com/linux-how-to/fix-error-locale-cannot-set-lc_all-to-default-locale-no-such-file-or-directory/" target="_blank" rel="external">http://linoxide.com/linux-how-to/fix-error-locale-cannot-set-lc_all-to-default-locale-no-such-file-or-directory/</a></p>
<p>sEx只是调用相关程序，本身并无压缩、解压功能，请注意！<br>sEx请到： <a href="http://sourceforge.net/projects/sex下载！" target="_blank" rel="external">http://sourceforge.net/projects/sex下载！</a><br>解压后请将sEx拷贝到/usr/bin目录（其他由$PATH环境变量指定的目录也可以）：<br>[root@www2 tmp]# cp sEx /usr/bin/</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MacOS]]></title>
      <url>http://cuiqingwei.github.io/2015/01/13/2015-01-13-MacOS/</url>
      <content type="html"><![CDATA[<h3 id="Mac入门"><a href="#Mac入门" class="headerlink" title="Mac入门"></a>Mac入门</h3><p><a href="http://www.cnblogs.com/TankXiao/archive/2013/01/05/2845413.html" target="_blank" rel="external">http://www.cnblogs.com/TankXiao/archive/2013/01/05/2845413.html</a></p>
<h3 id="1-AppStore"><a href="#1-AppStore" class="headerlink" title="1. AppStore"></a>1. AppStore</h3><p>工作：Evernote、Alfred、Go2Shell、The Unarchiver、CheatSheet、Xcode、SourceTree(Git/Hg)<br><a href="http://www.tuicool.com/articles/yeyIfuu" target="_blank" rel="external">http://www.tuicool.com/articles/yeyIfuu</a><br>系统：QQ、CleanMyDrive 3<br><a id="more"></a></p>
<h3 id="2-dmg"><a href="#2-dmg" class="headerlink" title="2. dmg"></a>2. dmg</h3><p>Chrome、VMwareFusion、RDC、QQInput、RTX、cornerstone<br>Sublime Text</p>
<h3 id="3-brew"><a href="#3-brew" class="headerlink" title="3. brew"></a>3. brew</h3><p>ruby -e “$(curl -fsSL <a href="https://raw.github.com/Homebrew/homebrew/go/install" target="_blank" rel="external">https://raw.github.com/Homebrew/homebrew/go/install</a>)”<br><a href="http://brew.sh/" target="_blank" rel="external">http://brew.sh/</a><br><a href="http://blog.csdn.net/aaawqqq/article/details/44088141" target="_blank" rel="external">http://blog.csdn.net/aaawqqq/article/details/44088141</a></p>
<p>升级更新 brew update<br>cd /usr/local<br>git reset –hard<br>git checkout .<br>sudo chown -R cuiqingwei /usr/local<br>brew update<br><a href="http://www.xitongzhijia.net/xtjc/20141204/31879.html" target="_blank" rel="external">http://www.xitongzhijia.net/xtjc/20141204/31879.html</a></p>
<h3 id="4-MacPorts"><a href="#4-MacPorts" class="headerlink" title="4. MacPorts"></a>4. MacPorts</h3><p><a href="https://www.macports.org/install.php" target="_blank" rel="external">https://www.macports.org/install.php</a><br><a href="http://guide.macports.org/#installing.macports" target="_blank" rel="external">http://guide.macports.org/#installing.macports</a></p>
<h3 id="5-wget"><a href="#5-wget" class="headerlink" title="5. wget"></a>5. wget</h3><p>sudo port install wget</p>
<h3 id="6-zsh"><a href="#6-zsh" class="headerlink" title="6. zsh"></a>6. zsh</h3><p>wget <a href="https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh" target="_blank" rel="external">https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh</a> -O - | sh<br><a href="http://leeiio.me/bash-to-zsh-for-mac/" target="_blank" rel="external">http://leeiio.me/bash-to-zsh-for-mac/</a><br><a href="http://www.sketchup.com/download/all" target="_blank" rel="external">http://www.sketchup.com/download/all</a><br>打开 “终端” 输入： chflags nohidden ~/library/ 即可显示被隐藏的 Library（资源库）!</p>
<h3 id="7-mac-say-唱歌"><a href="#7-mac-say-唱歌" class="headerlink" title="7. mac say 唱歌"></a>7. mac say 唱歌</h3><p>应用程序&gt;实用工具&gt;Terminal 复制和黏贴以下内容，然后回车：</p>
<ul>
<li>spotlight搜索框中输入”终端”或者”terminal”, 找到并打开”终端”这个程序。</li>
<li>在下面引用框里单击三下，cmd+c复制歌词，cmd+v粘贴到终端窗口，回车。</li>
<li>开始听歌了。</li>
</ul>
<h2 id="保-修服-务和支-持期-限（序-列-号）查-询-工-具"><a href="#保-修服-务和支-持期-限（序-列-号）查-询-工-具" class="headerlink" title="保﻿修服﻿务和支﻿持期﻿限（序﻿列﻿号）查﻿询﻿工﻿具"></a>保﻿修服﻿务和支﻿持期﻿限（序﻿列﻿号）查﻿询﻿工﻿具</h2><p><a href="https://checkcoverage.apple.com/cn/zh/" target="_blank" rel="external">https://checkcoverage.apple.com/cn/zh/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SDK之uClinux、Ralink、Atheros、Realtek、Broadcom]]></title>
      <url>http://cuiqingwei.github.io/2014/12/08/2014-12-08-SDK%E4%B9%8BuClinux%E3%80%81Ralink%E3%80%81Atheros%E3%80%81Realtek%E3%80%81Broadcom/</url>
      <content type="html"><![CDATA[<p>接触的Linux SDK越来越多，整理整理，分享分享，不求系统全面，对您有帮助便足矣<br>文中大部分是与AP/Router SoC解决方案（单芯片WIFI 路由器解决方案）相关的Linux SDK</p>
<h1 id="SDK（Software-Development-Kit）软件开发工具包"><a href="#SDK（Software-Development-Kit）软件开发工具包" class="headerlink" title="SDK（Software Development Kit）软件开发工具包"></a>SDK（Software Development Kit）软件开发工具包</h1><p>一般是一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的开发工具的集合<br>想想，最早接触到的SDK是在Cortex-M3项目开发中，也叫BSP（板级支持包），<br>这种SDK里大部分是芯片资源（硬件平台）的驱动和测试程序，少有软件框架和操作系统的源码<br><a id="more"></a></p>
<h1 id="uClinux"><a href="#uClinux" class="headerlink" title="uClinux"></a>uClinux</h1><p>在用的ATMEL9200和9G25的SDK包就是uClinux的风格，Ralink的Ralink_Ap_SoC_SDK也是uClinux的风格，<br>不用多说，直接上地址：<a href="http://www.uclinux.org/" target="_blank" rel="external">http://www.uclinux.org/</a></p>
<h1 id="Ralink平台"><a href="#Ralink平台" class="headerlink" title="Ralink平台"></a>Ralink平台</h1><p>在用他们的AP/Router SoC方案，比如RT3050/3052，对应SDK的版本是Ralink_Ap_SoC_SDK_3301.tar.bz2，应该是从uClinux基础上修改而来，<br>SDK的下载地址：<a href="http://www.tw-mcse.net/mcic/（重新更新下载地址），http://www.tw-mcse.net/mcic/Ralink_ApSoC_SDK_3301.tar.bz2" target="_blank" rel="external">http://www.tw-mcse.net/mcic/（重新更新下载地址），http://www.tw-mcse.net/mcic/Ralink_ApSoC_SDK_3301.tar.bz2</a><br>华硕的RT-N56U/RT-N65U有在google code上公开源码，地址：<a href="https://code.google.com/p/rt-n56u/" target="_blank" rel="external">https://code.google.com/p/rt-n56u/</a></p>
<h1 id="Atheros平台"><a href="#Atheros平台" class="headerlink" title="Atheros平台"></a>Atheros平台</h1><p>也在用他们的AP/Router SoC方案，比如AR9331/9344，说起Atheros不得不提TP-Link，TP-Link大量使用Atheros的方案，其中TL-WDR4300/4310就是用的AR9344，<br>TP-Link根据GPL协议开放了一些源码，地址：<a href="http://www.tp-link.com/en/support/gpl/" target="_blank" rel="external">http://www.tp-link.com/en/support/gpl/</a><br>比如下载TL-WDR4300的源码包（GPL_2.6.31），是在Atheros官方提供的SDK包（LSDK-9.2.0和LSDK-WLAN-9.2.0）基础上进行了修改，但是没有开放LSDK-WLAN-9.2.0，不过没关系，LSDK-WLAN-9.2.0在CSDN上可以下载，地址：<a href="http://download.csdn.net/detail/nolycjyf/3722308" target="_blank" rel="external">http://download.csdn.net/detail/nolycjyf/3722308</a><br>对于Atheros的WLAN驱动，另插一句，还记得madwifi、ath9k吗，没错，是同族的</p>
<h1 id="Realtek平台"><a href="#Realtek平台" class="headerlink" title="Realtek平台"></a>Realtek平台</h1><p>因为芯片封装上都有一只大螃蟹，所以大家喜欢叫他螃蟹，<br>在sourceforge上找到了它的一个SDK（RTL819x-SDK-v3.2.3），也是AP/Router SoC方案，感兴趣的可以下下来看看，<br>地址：<a href="http://sourceforge.net/projects/rtl819x/?source=directory" target="_blank" rel="external">http://sourceforge.net/projects/rtl819x/?source=directory</a></p>
<h1 id="Broadcom平台"><a href="#Broadcom平台" class="headerlink" title="Broadcom平台"></a>Broadcom平台</h1><p>想换成这个平台，这个平台的SDK资料相对少一点，但还是找到了一点踪迹，<br>华硕的RT-N16有在google code上开放源码，RT-N16用的就是Broadcom的BCM4716<br>地址：<a href="https://code.google.com/p/rt-n16/" target="_blank" rel="external">https://code.google.com/p/rt-n16/</a></p>
<p>遗憾是没有找到任何有关Marvell平台的SDK资料<br>找了这么多SDK源码包拿来干什么？<br>首先学习软件框架，Makefile会告诉你真相<br>然后就是Linux驱动，尤其WLAN/WIFI驱动</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[骑行7：滴水湖2014]]></title>
      <url>http://cuiqingwei.github.io/2014/06/08/2014-06-08-%E9%AA%91%E8%A1%8C7%EF%BC%9A%E6%BB%B4%E6%B0%B4%E6%B9%962014/</url>
      <content type="html"><![CDATA[<p><img src="/img/20130429/head.png" alt=""></p>
<h1 id="具体安排"><a href="#具体安排" class="headerlink" title="具体安排"></a>具体安排</h1><p><img src="/img/20140608/1.png" alt=""><br><strong>【活动时间】</strong>： 2014-06-08，周日<br><strong>【活动目的地】</strong>：滴水湖（南汇嘴观海公园）<br><strong>【集合地点】</strong>：上海闵行龙之梦影城、上海闵行区东川路地铁站<br><a id="more"></a><br><strong>【时间】</strong>：7:00开始汇合，8:50出发<br><strong>【返程解散点】</strong>：上海市闵行区东川路地铁站<br><strong>【返程到达解散点时间】</strong>：大约17点<br><strong>【骑行工具】</strong>：任何车型；任何品牌变速车（请保证车况良好） 非快拆车辆请自带扳手!<br><strong>【骑行线路（去程）】</strong>：<em>集合地点-&gt;沪闵公路à闵浦二桥-&gt;沪杭公路（S103）-&gt;大叶公路（S324）-&gt;东大公路（S324-&gt;滨果公路à临港大道-&gt;环湖西一路-&gt;目的地</em><br><strong>【骑行线路（返程）】</strong>：<em>临港大道-&gt;滨果公路-&gt;东大公路（S324）-&gt;大叶公路（S324）-&gt;沪杭公路（S103）-&gt;闵浦二桥-&gt;沪闵公路-&gt;返程解散点</em><br><strong>【全程单程距离】</strong>：谷歌测算83.3KM<br><strong>【休息段】</strong>：约每20公里休息一次<br><strong>【装备建议】</strong>：头盔必须<br><strong>【活动取消条件】</strong>：活动前一天晚上天气预报为准,如取消活动会在活动出发前2小时短息通知</p>
<p>#汇合安排<br><img src="/img/20140608/2.png" alt=""><br>7:00 徐超，始发<br>7:10 崔庆伟，七宝实验中学<br>7:20严铠锋，万兆家园<br>7:50 林建建、郑乐锋，闵行龙之梦影城十字路口<br>8:25 汪烁华，东川路地铁站(近沪闵路)<br>8:50 孙东亮，大叶公路沪杭公路交叉口(大叶公路右边)</p>
<h1 id="路线规划-链接"><a href="#路线规划-链接" class="headerlink" title="路线规划 链接"></a>路线规划 <a href="https://maps.google.com/maps?saddr=%E4%B8%8A%E6%B5%B7%E5%B8%82%E9%BE%99%E6%9F%8F%E4%B8%AD%E5%AD%A6,+%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E9%97%B5%E8%A1%8C%E5%8C%BA%E5%85%B0%E7%AB%B9%E8%B7%AF8%E5%8F%B7&amp;daddr=%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E5%8C%BA%E9%BE%99%E8%8C%97%E8%B7%AF%E4%B8%83%E5%AE%9D%E5%AE%9E%E9%AA%8C%E4%B8%AD%E5%AD%A6+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E5%8C%BA%E4%B8%83%E8%8E%98%E8%B7%AF%E4%B8%87%E5%85%86%E5%AE%B6%E5%9B%AD+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E9%BE%99%E4%B9%8B%E6%A2%A6%E5%BD%B1%E5%9F%8E+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E9%97%B5%E8%A1%8C%E5%8C%BA%E4%B8%9C%E5%B7%9D%E8%B7%AF%E5%9C%B0%E9%93%81%E7%AB%99+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E5%B8%82%E4%B8%8A%E6%B5%B7%E5%A5%89%E8%B4%A4%E5%8C%BA%E6%B2%AA%E6%9D%AD%E5%85%AC%E8%B7%AF%E5%A4%A7%E5%8F%B6%E5%85%AC%E8%B7%AF%E7%AB%99+to:30.970446591026537,121.90078552812338+to:30.967392676524668,121.90163176506758+to:%E4%B8%AD%E5%9B%BD%E4%B8%8A%E6%B5%B7%E6%B5%A6%E4%B8%9C%E6%96%B0%E5%8C%BA%E7%8E%AF%E6%B9%96%E4%B8%9C%E4%B8%80%E8%B7%AF%E6%BB%B4%E6%B0%B4%E6%B9%96%E6%B0%B4%E4%B8%8A%E8%BF%90%E5%8A%A8%E4%BF%B1%E4%B9%90%E9%83%A8&amp;hl=zh-CN&amp;ie=UTF8&amp;ll=31.035873,121.629639&amp;spn=0.358303,0.676346&amp;sll=30.944489,121.863098&amp;sspn=0.089662,0.169086&amp;geocode=FQ-_2wEditU7ByEyLI6WZ53axCmB1TnsGGSyNTEyLI6WZ53axA%3BFdWB2wEd0SM8ByFWBSfLxRW7Uik5olk8cmSyNTFWBSfLxRW7Ug%3BFT5O2wEd_Ks7ByHFvAkDGVlTXCnplA-rWWGyNTHFvAkDGVlTXA%3BFT-s2gEdcBw8ByG_Y-hjBpiyEylZk1jVS2KyNTG_Y-hjBpiyEw%3BFdFM2QEdBrg8BykDWAWo9YiyNTGPPjgBgOhQPw%3BFdiA2AEd9A09ByHU61Afmx6ZqSkHgOfuVo-yNTHU61Afmx6ZqQ%3BFU6S2AEd8Q5EBynv2OPz1J2tNTFy558lN6oX2w%3BFWCG2AEdPxJEByknvMKF1Z2tNTFU1aQtsGkRiw%3BFXhb1wEdD9lEByF9cKaWFO0zvCm5URr7C3WtNTF9cKaWFO0zvA&amp;oq=%E6%BB%B4%E6%B0%B4%E6%B9%96&amp;dirflg=w&amp;mra=dpe&amp;mrsp=7&amp;sz=13&amp;via=6,7&amp;t=m&amp;z=11" target="_blank" rel="external">链接</a></h1><p><img src="/img/20140608/3.png" alt=""></p>
<h1 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h1><p>该活动为非商业盈利行为，纯属自发参与，凡报名参加者均视为具有完全民事行为能力人，若活动过程中出现意外，该活动组织人有义务帮助，无责任承担，不承担任何赔偿责任。请参与者酌情考虑！<br><img src="/img/20130429/foot.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20140608/4.jpeg" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze90x5L06/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze90x5L06/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[骑行6：上海南京路步行街]]></title>
      <url>http://cuiqingwei.github.io/2014/05/21/2014-05-21-%E9%AA%91%E8%A1%8C6%EF%BC%9A%E4%B8%8A%E6%B5%B7%E5%8D%97%E4%BA%AC%E8%B7%AF%E6%AD%A5%E8%A1%8C%E8%A1%97/</url>
      <content type="html"><![CDATA[<p><img src="/img/20130429/head.png" alt=""></p>
<h1 id="下班后同事一起夜骑上海南京路步行街，临时决定未策划线路"><a href="#下班后同事一起夜骑上海南京路步行街，临时决定未策划线路" class="headerlink" title="下班后同事一起夜骑上海南京路步行街，临时决定未策划线路"></a>下班后同事一起夜骑上海南京路步行街，临时决定未策划线路</h1><p><img src="/img/20130429/foot.png" alt=""><br><a id="more"></a></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20140521/1.jpeg" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze92cPbM5/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze92cPbM5/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网络命令]]></title>
      <url>http://cuiqingwei.github.io/2014/04/17/2014-04-17-%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h3><p>这个应该大家都会用的吧，最主要的就是检测目标主机是不是可连通。Ping程序实际就是发送一个ICMP回显请求报文给目的主机，并等待回显的ICMP应答。然后打印出回显的报文。Ping不通一个地址，并不一定表示这个IP不存在或者没有连接在网络上，因为对方主机可能做了限制，比如安装了防火墙，因此Ping不通并不表示不能使用FTP或者TELNET连接。<br><a id="more"></a><br>PING得到的结果包括字节数、反应时间、以及生存时间。Ping程序通过在ICMP报文数据中存放发送请求的时间来计算返回时间。当应答返回时，根据现在时间减去报文中存放的发送时间就得到反应时间了。生存时间（TTL），本来就存放在IP数据报的头部，直接就能够获取。<br>上次和Dancefire说天网防火墙的时候，现在不是天网能识别哪些程序在进行网络连接么，结果试验用Ping的时候，天网就不知道了，呵呵，反正是没有警告。那ICMP木马天网能防么？</p>
<h3 id="Tracert"><a href="#Tracert" class="headerlink" title="Tracert"></a>Tracert</h3><p>一个探测路由的程序，可以让我们看见IP数据报到达目的地经过的路由。<br>Tracert利用ICMP数据报和IP数据报头部中的TTL值。TTL（Time To Live）是一个IP数据报的生存时间，当每个IP数据报经过路由器的时候都回把TTL值减去1或者减去在路由器中停留的时间，但是大多数数据报在路由器中停留的时间都小于1秒种，因此实际上就是在TTL值减去了1。这样，TTL值就相当于一个路由器的计数器。<br>当路由器接收到一个TTL为0或者1的IP数据报的时候，路由器就不再转发这个数据了，而直接丢弃，并且发送一个ICMP“超时”信息给源主机。Tracert程序的关键就是这个回显的ICMP报文的IP报头的信源地址就是这个路由器的IP地址。同时，如果到达了目的主机，我们并不能知道，于是，Tracert还同时发送一个UDP信息给目的主机，并且选择一个很大的值作为UDP的端口，使主机的任何一个应用程序都不使用这个端口。所以，当达到目的主机的时候，UDP模块就产生一个“端口不可到达”的错误，这样就能判断是否是到达目的地了。<br>有说法是利用ping得到的TTL值来判断主机类型，这种办法可以大概地用来判断，有人问为什么一般得到的都不是标准的TTL值。这个就是因为ICMP数据包走的路由器线路的原因，所以，用ping 和 tracert 一起来用更容易判断主机类型（不过并不一定两次走的路线都一样，所以，还是个大概值，不过更接近点，而且主机的默认TTL值是可以改变的）。</p>
<p><strong>ping</strong> 211.95.60.151 -l 1200 -t  (带包ping)<br><strong>tracert</strong> 211.95.60.151</p>
<p><a href="http://ping.eu/" target="_blank" rel="external">http://ping.eu/</a><br><a href="http://www.21andy.com/new/20090427/1168.html" target="_blank" rel="external">http://www.21andy.com/new/20090427/1168.html</a></p>
<p><a href="http://www.speedtest.net/" target="_blank" rel="external">http://www.speedtest.net/</a><br><a href="http://www.ip138.com/" target="_blank" rel="external">http://www.ip138.com/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Marketplace Client]]></title>
      <url>http://cuiqingwei.github.io/2013/07/05/2013-07-05-Marketplace-Client/</url>
      <content type="html"><![CDATA[<p>Eclipse Marketplace是个插件应用商店，很实用的一个功能。</p>
<p>打开 eclipse，help–Eclipse Marketplace Client就能找到</p>
<p>有的eclipse中没有这个功能就需手动添加Eclipse Marketplace Client。</p>
<p>help–install new software–add</p>
<p>添加name: Eclipse Marketplace Client  (随意起名)</p>
<pre><code>Location:http://download.eclipse.org/mpc/indigo/
</code></pre><p>添加完成后，work with 选择Eclipse Marketplace Client</p>
<p>就可以下载了。下载完成后，重启eclipse，help–Eclipse Marketplace Client</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[骑行5：沪杭公路到九龙山]]></title>
      <url>http://cuiqingwei.github.io/2013/06/15/2013-06-15-%E9%AA%91%E8%A1%8C5%EF%BC%9A%E6%B2%AA%E6%9D%AD%E5%85%AC%E8%B7%AF%E5%88%B0%E4%B9%9D%E9%BE%99%E5%B1%B1/</url>
      <content type="html"><![CDATA[<p><img src="/img/20130429/head.png" alt=""><br><img src="/img/20130615/1.png" alt=""><br>【“老沪杭公路起自上海闵行西渡，南下经奉贤柘林镇，西折沿杭州湾北海岸，蜿蜒如龙，曲折而行，过乔司，九堡进杭州城。一路串联许多江南名镇，人文景观丰富。尽管现代化进程它被渐渐淘汰，但老路的古朴，乡间公路的风味，还是深深吸引我们，每年去徽杭，或观潮，我们总会骑上几趟。弯弯曲曲的老沪路，两排合抱粗的老树，密密的夹着公路，浓密的树荫遮蔽夏日的骄阳，就是盛夏也非常凉爽。春秋季节又仿佛行走在五彩斑斓的树的隧道，这里骑行是享受，这样的美好感觉，在宽广的公路320国道，01东西道是没有的。路的两边连片果园，桑树林，农舍，小桥流水，是典型的江南田园风光。最引人入胜的是，公路大部分路段贴海堤而行，石块砌就的海堤，挡住滔滔海水，上筑宽阔通道，人们都会上海堤骑行。远望迷蒙，一袭烟波粼粼，看着这无限诲景，枯燥的骑行心情随美景变得盈润了。观潮季节一路都能看到”乱石穿空，惊涛拍岸”钱江潮壮观。在与日俱进的今天你还能看到蔚为壮观的跨海大桥，现代化的秦山核电站。南北湖风景，盐官古镇——众多景观我就不一一介绍，你去骑一趟就全知道了。<br>老沪杭路是条美丽的路，值得单车骑行的路，它似一条彩练，我们深深喜爱它。“<br><em>—— 引自<a href="http://bbs.bikehome.net/forum.php?mod=viewthread&amp;tid=72438" target="_blank" rel="external">http://bbs.bikehome.net/forum.php?mod=viewthread&amp;tid=72438</a></em><br><a id="more"></a></p>
<h1 id="具体安排"><a href="#具体安排" class="headerlink" title="具体安排"></a>具体安排</h1><p><strong>【目的地点】</strong>：沿沪杭公路到九龙山<br><strong>【全程距离】</strong>：谷歌测算约140KM<br><strong>【活动时间】</strong>：2013-06-15，周六<br><strong>【集合地点】</strong>：上海市闵行区东川路地铁站<br><strong>【集合时间】</strong>：7:50集合，8:00出发。<br><strong>【解散地点】</strong>：上海市闵行区东川路地铁站<br><strong>【解散时间】</strong>：大约18点<br><strong>【骑行工具】</strong>：任何车型；任何品牌变速车（请保证车况良好） 非快拆车辆请自带扳手!<br><strong>【装备建议】</strong>：头盔必须<br><strong>【配备手台】</strong>：至少2部<br><strong>【休息段】</strong>：约每10公里休息一次。<br><strong>【活动取消条件】</strong>：活动前一天晚上天气预报为准。如取消活动会在活动出发前2小时短息通知</p>
<h1 id="路线规划"><a href="#路线规划" class="headerlink" title="路线规划"></a>路线规划</h1><p> <a href="http://goo.gl/maps/N6hoa" target="_blank" rel="external">http://goo.gl/maps/N6hoa</a><br><img src="/img/20130615/2.png" alt=""></p>
<h1 id="路书规划"><a href="#路书规划" class="headerlink" title="路书规划"></a>路书规划</h1><p><a href="http://map.sogou.com/lushu/swf/lushu.swf?id=8a8c084d3f12ea13013f14e27cf6782a" target="_blank" rel="external">http://map.sogou.com/lushu/swf/lushu.swf?id=8a8c084d3f12ea13013f14e27cf6782a</a><br><img src="/img/20130615/3.png" alt=""><br><img src="/img/20130429/foot.png" alt=""></p>
<h1 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h1><p>该活动为非商业盈利行为，纯属自发参与，凡报名参加者均视为具有完全民事行为能力人，若活动过程中出现意外，该活动组织人有义务帮助，无责任承担，不承担任何赔偿责任。请参与者酌情考虑！</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20130615/4.jpeg" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze90ZzNFa/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze90ZzNFa/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[骑行4：老上海&浦西世博园]]></title>
      <url>http://cuiqingwei.github.io/2013/04/29/2013-04-29-%E9%AA%91%E8%A1%8C4%EF%BC%9A%E8%80%81%E4%B8%8A%E6%B5%B7-%E6%B5%A6%E8%A5%BF%E4%B8%96%E5%8D%9A%E5%9B%AD/</url>
      <content type="html"><![CDATA[<p><img src="/img/20130429/head.png" alt=""></p>
<h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><p> <strong>【目的地点】</strong>：老上海&amp;浦西世博园<br> <strong>【全程距离】</strong>：路书测算28.4KM<br> <strong>【活动时间】</strong>：未定<br> <strong>【集合地点】</strong>：公司<br> <strong>【集合时间】</strong>：12:50集合，13:00出发。<br> <strong>【解散地点】</strong>：龙华塔<br> <strong>【解散时间】</strong>：大约15点<br> <strong>【骑行工具】</strong>：任何车型；任何品牌变速车（请保证车况良好） 非快拆车辆请自带扳手!<br> <strong>【装备建议】</strong>：头盔必须<br> <strong>【配备手台】</strong>：至少2部<br> <strong>【休息段】</strong>：约每10公里休息一次。<br> <strong>【活动取消条件】</strong>：活动前一天晚上天气预报为准。如取消活动会在活动出发前2小时短息通知！<br> <strong>【天气】</strong>：<a href="http://tianqi.2345.com/shanghai/58362.htm" target="_blank" rel="external">http://tianqi.2345.com/shanghai/58362.htm</a><br> <strong>【路线】</strong>：<a href="http://map.sogou.com/lushu/swf/lushu.swf?id=8a8c084d3e2ee224013e3104ab85514d" target="_blank" rel="external">http://map.sogou.com/lushu/swf/lushu.swf?id=8a8c084d3e2ee224013e3104ab85514d</a><br><img src="/img/20130429/1.png" alt=""><br><img src="/img/20130429/foot.png" alt=""><br><a id="more"></a></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20130429/2.png" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze93VPE4q/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze93VPE4q/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[骑行3：天马山&淀山湖]]></title>
      <url>http://cuiqingwei.github.io/2013/04/20/2013-04-20-%E9%AA%91%E8%A1%8C3%EF%BC%9A%E5%A4%A9%E9%A9%AC%E5%B1%B1-%E6%B7%80%E5%B1%B1%E6%B9%96/</url>
      <content type="html"><![CDATA[<h1 id="路线"><a href="#路线" class="headerlink" title="路线"></a>路线</h1><p><a href="http://map.sogou.com/lushu/swf/lushu.swf?id=8a8c07c83e1f7cf5013e205ac8d428be" target="_blank" rel="external">http://map.sogou.com/lushu/swf/lushu.swf?id=8a8c07c83e1f7cf5013e205ac8d428be</a><br><a id="more"></a></p>
<h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><p><img src="/img/20130420/1.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20130420/2.png" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze91LoLPk/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze91LoLPk/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的单车装备]]></title>
      <url>http://cuiqingwei.github.io/2013/04/06/2013-04-06-%E6%88%91%E7%9A%84%E5%8D%95%E8%BD%A6%E8%A3%85%E5%A4%87/</url>
      <content type="html"><![CDATA[<p>整理自己所买装备，记录备忘。同时，也希望能给准备买车的人做个参考。</p>
<h1 id="GIANT-ATX777：￥-2998-00-专门店售价"><a href="#GIANT-ATX777：￥-2998-00-专门店售价" class="headerlink" title="GIANT ATX777：￥ 2998.00 [专门店售价]"></a><strong>GIANT ATX777</strong>：￥ 2998.00 [专门店售价]</h1><p><a href="http://www.giant.com.cn/Bike/BikeView/972" target="_blank" rel="external">http://www.giant.com.cn/Bike/BikeView/972</a><br>淘宝推荐<a href="http://detail.tmall.com/item.htm?spm=a230r.1.14.3.gtHCFG&amp;id=21684276849" target="_blank" rel="external">http://detail.tmall.com/item.htm?spm=a230r.1.14.3.gtHCFG&amp;id=21684276849</a><br><img src="/img/20130406/1.png" alt=""><br><a id="more"></a></p>
<h1 id="脚撑：￥-97-00-专门店售价"><a href="#脚撑：￥-97-00-专门店售价" class="headerlink" title="脚撑：￥ 97.00 [专门店售价]"></a><strong>脚撑</strong>：￥ 97.00 [专门店售价]</h1><p>淘宝推荐<a href="http://item.taobao.com/item.htm?spm=a230r.1.0.174.IWDnCY&amp;id=8229495532" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a230r.1.0.174.IWDnCY&amp;id=8229495532</a><br><img src="/img/20130406/2.png" alt=""></p>
<h1 id="半指手套：￥-98-00-专门店售价"><a href="#半指手套：￥-98-00-专门店售价" class="headerlink" title="半指手套：￥ 98.00 [专门店售价]"></a><strong>半指手套</strong>：￥ 98.00 [专门店售价]</h1><p>淘宝推荐<a href="http://detail.tmall.com/item.htm?spm=a230r.1.14.22.Rz8pZa&amp;id=10701685019" target="_blank" rel="external">http://detail.tmall.com/item.htm?spm=a230r.1.14.22.Rz8pZa&amp;id=10701685019</a><br><img src="/img/20130406/3.png" alt=""></p>
<p><strong>以上三样，我都是从专卖店买的。 Gaint不允许网销，淘宝上卖的单车会把钢印抹掉。抹掉后不保修，我觉得不爽。所以，从专卖店买的！锁就不列了，专门店送我一把，直接扔家里了。不相信任何锁，不要把车放到自己的视线外。</strong></p>
<h1 id="码表（西格玛-BC1009）：￥-110-00"><a href="#码表（西格玛-BC1009）：￥-110-00" class="headerlink" title="码表（西格玛 BC1009）：￥ 110.00"></a><strong>码表（西格玛 BC1009）</strong>：￥ 110.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.RO15hP&amp;id=10520177756" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.RO15hP&amp;id=10520177756</a><br><img src="/img/20130406/4.png" alt=""></p>
<h1 id="前包：￥-12-00"><a href="#前包：￥-12-00" class="headerlink" title="前包：￥ 12.00"></a><strong>前包</strong>：￥ 12.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.RFJWUK&amp;id=2976718454" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.RFJWUK&amp;id=2976718454</a><br><img src="/img/20130406/5.png" alt=""></p>
<h1 id="水壶架：￥-3-00"><a href="#水壶架：￥-3-00" class="headerlink" title="水壶架：￥ 3.00"></a><strong>水壶架</strong>：￥ 3.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.4coTpl&amp;id=17656156265" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.4coTpl&amp;id=17656156265</a><br><img src="/img/20130406/6.png" alt=""></p>
<h1 id="水壶：￥-12-50"><a href="#水壶：￥-12-50" class="headerlink" title="水壶：￥ 12.50"></a><strong>水壶</strong>：￥ 12.50</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.5SCWIv&amp;id=1053264542" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.5SCWIv&amp;id=1053264542</a><br><img src="/img/20130406/7.png" alt=""></p>
<h1 id="LED尾灯：￥-10-00"><a href="#LED尾灯：￥-10-00" class="headerlink" title="LED尾灯：￥ 10.00"></a><strong>LED尾灯</strong>：￥ 10.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.jnJK1w&amp;id=3469991728" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.jnJK1w&amp;id=3469991728</a><br><img src="/img/20130406/8.png" alt=""></p>
<h1 id="组合工具：￥-23-00"><a href="#组合工具：￥-23-00" class="headerlink" title="组合工具：￥ 23.00"></a><strong>组合工具</strong>：￥ 23.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.SFmv3W&amp;id=4536037308" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.SFmv3W&amp;id=4536037308</a><br><img src="/img/20130406/9.png" alt=""></p>
<h1 id="头盔：￥-128-00"><a href="#头盔：￥-128-00" class="headerlink" title="头盔：￥ 128.00"></a><strong>头盔</strong>：￥ 128.00</h1><p><a href="http://detail.tmall.com/item.htm?spm=a1z09.5.0.43.Fi0LoP&amp;id=13326209777" target="_blank" rel="external">http://detail.tmall.com/item.htm?spm=a1z09.5.0.43.Fi0LoP&amp;id=13326209777</a><br><img src="/img/20130406/10.png" alt=""></p>
<h1 id="魔术头巾：￥-4-50"><a href="#魔术头巾：￥-4-50" class="headerlink" title="魔术头巾：￥ 4.50"></a><strong>魔术头巾</strong>：￥ 4.50</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.ahZRSf&amp;id=5038727372" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.ahZRSf&amp;id=5038727372</a><br><img src="/img/20130406/11.png" alt=""></p>
<h1 id="风镜：￥-83-00"><a href="#风镜：￥-83-00" class="headerlink" title="风镜：￥ 83.00"></a><strong>风镜</strong>：￥ 83.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.33.uitOdT&amp;id=17297342854" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.33.uitOdT&amp;id=17297342854</a><br><img src="/img/20130406/12.png" alt=""></p>
<h1 id="骑行裤：￥-109-00"><a href="#骑行裤：￥-109-00" class="headerlink" title="骑行裤：￥ 109.00"></a><strong>骑行裤</strong>：￥ 109.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.42.4MxEH1&amp;id=3335431728" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.42.4MxEH1&amp;id=3335431728</a><br><img src="/img/20130406/13.png" alt=""></p>
<h1 id="骑行长袖上衣：￥-110-00"><a href="#骑行长袖上衣：￥-110-00" class="headerlink" title="骑行长袖上衣：￥ 110.00"></a><strong>骑行长袖上衣</strong>：￥ 110.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.41.8XdZT4&amp;id=20343852687" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.41.8XdZT4&amp;id=20343852687</a><br><img src="/img/20130406/14.png" alt=""></p>
<h1 id="骑行单反包：￥-100-00"><a href="#骑行单反包：￥-100-00" class="headerlink" title="骑行单反包：￥ 100.00"></a><strong>骑行单反包</strong>：￥ 100.00</h1><p><a href="http://detail.tmall.com/item.htm?id=21892972592" target="_blank" rel="external">http://detail.tmall.com/item.htm?id=21892972592</a><br><img src="/img/20130406/15.png" alt=""></p>
<h1 id="对讲机-x-2：￥-240-00"><a href="#对讲机-x-2：￥-240-00" class="headerlink" title="对讲机 x 2：￥ 240.00"></a><strong>对讲机</strong> x 2：￥ 240.00</h1><p><a href="http://item.taobao.com/item.htm?spm=0.0.0.0.CKUri9&amp;id=10670557643" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=0.0.0.0.CKUri9&amp;id=10670557643</a><br><img src="/img/20130406/16.png" alt=""></p>
<h1 id="防水强光手电筒：￥-8-00"><a href="#防水强光手电筒：￥-8-00" class="headerlink" title="防水强光手电筒：￥ 8.00"></a><strong>防水强光手电筒</strong>：￥ 8.00</h1><p><a href="http://tradearchive.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.77.KlKTft&amp;tradeID=61062558013115" target="_blank" rel="external">http://tradearchive.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.77.KlKTft&amp;tradeID=61062558013115</a><br><img src="/img/20130406/17.png" alt=""></p>
<h1 id="硅胶绑带：￥-2-00"><a href="#硅胶绑带：￥-2-00" class="headerlink" title="硅胶绑带：￥ 2.00"></a><strong>硅胶绑带</strong>：￥ 2.00</h1><p><a href="http://item.taobao.com/item.htm?id=14583952112" target="_blank" rel="external">http://item.taobao.com/item.htm?id=14583952112</a><br><img src="/img/20130406/18.png" alt=""></p>
<h1 id="美法双气嘴打气筒：￥-28-00"><a href="#美法双气嘴打气筒：￥-28-00" class="headerlink" title="美法双气嘴打气筒：￥ 28.00"></a><strong>美法双气嘴打气筒</strong>：￥ 28.00</h1><p><a href="http://item.taobao.com/item.htm?id=17492074086" target="_blank" rel="external">http://item.taobao.com/item.htm?id=17492074086</a><br><img src="/img/20130406/19.png" alt=""></p>
<h1 id="补胎套装：￥-20-00"><a href="#补胎套装：￥-20-00" class="headerlink" title="补胎套装：￥ 20.00"></a><strong>补胎套装</strong>：￥ 20.00</h1><p><a href="http://item.taobao.com/item.htm?id=12504959194" target="_blank" rel="external">http://item.taobao.com/item.htm?id=12504959194</a><br><img src="/img/20130406/20.png" alt=""></p>
<h1 id="洗链器套装：￥-55-00"><a href="#洗链器套装：￥-55-00" class="headerlink" title="洗链器套装：￥ 55.00"></a><strong>洗链器套装</strong>：￥ 55.00</h1><p><a href="http://item.taobao.com/item.htm?id=13391021637" target="_blank" rel="external">http://item.taobao.com/item.htm?id=13391021637</a><br><img src="/img/20130406/21.png" alt=""></p>
<h1 id="护链贴：￥-2-00"><a href="#护链贴：￥-2-00" class="headerlink" title="护链贴：￥ 2.00"></a><strong>护链贴</strong>：￥ 2.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z10.3.w1565264129.12.mGWML3&amp;id=13875544608&amp;_u=b18alp74fe6" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z10.3.w1565264129.12.mGWML3&amp;id=13875544608&amp;_u=b18alp74fe6</a><br><img src="/img/20130406/22.png" alt=""></p>
<h1 id="迪卡侬短袖骑行服：￥-69-00"><a href="#迪卡侬短袖骑行服：￥-69-00" class="headerlink" title="迪卡侬短袖骑行服：￥ 69.00"></a><strong>迪卡侬短袖骑行服</strong>：￥ 69.00</h1><p><a href="http://detail.tmall.com/item.htm?id=17393589527&amp;spm=0.0.0.0.BKOmmW" target="_blank" rel="external">http://detail.tmall.com/item.htm?id=17393589527&amp;spm=0.0.0.0.BKOmmW</a><br><img src="/img/20130406/23.png" alt=""></p>
<h1 id="翰光自行车前灯C702：￥-45-56"><a href="#翰光自行车前灯C702：￥-45-56" class="headerlink" title="翰光自行车前灯C702：￥ 45.56"></a><strong>翰光自行车前灯C702</strong>：￥ 45.56</h1><p><a href="http://detail.tmall.com/item.htm?id=17257647432&amp;spm=0.0.0.0.R71rQB" target="_blank" rel="external">http://detail.tmall.com/item.htm?id=17257647432&amp;spm=0.0.0.0.R71rQB</a><br><img src="/img/20130406/24.png" alt=""></p>
<h1 id="乐炫新款车前包：￥-30-00"><a href="#乐炫新款车前包：￥-30-00" class="headerlink" title="乐炫新款车前包：￥ 30.00"></a><strong>乐炫新款车前包</strong>：￥ 30.00</h1><p><a href="http://item.taobao.com/item.htm?spm=0.0.0.0.hrxeet&amp;id=19583051908" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=0.0.0.0.hrxeet&amp;id=19583051908</a><br><img src="/img/20130406/25.png" alt=""></p>
<h1 id="GIANT爆款捷安特骑行服短袖套装：￥-111-00"><a href="#GIANT爆款捷安特骑行服短袖套装：￥-111-00" class="headerlink" title="GIANT爆款捷安特骑行服短袖套装：￥ 111.00"></a><strong>GIANT爆款捷安特骑行服短袖套装</strong>：￥ 111.00</h1><p><a href="http://item.taobao.com/item.htm?spm=0.0.0.0.X7uNpP&amp;id=20619612833" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=0.0.0.0.X7uNpP&amp;id=20619612833</a><br><img src="/img/20130406/26.png" alt=""></p>
<h1 id="自行车停车架：￥-35-00"><a href="#自行车停车架：￥-35-00" class="headerlink" title="自行车停车架：￥ 35.00"></a><strong>自行车停车架</strong>：￥ 35.00</h1><p><a href="http://detail.tmall.com/item.htm?id=19536943860&amp;spm=0.0.0.0.ZT0icV" target="_blank" rel="external">http://detail.tmall.com/item.htm?id=19536943860&amp;spm=0.0.0.0.ZT0icV</a><br><img src="/img/20130406/27.png" alt=""></p>
<h1 id="自行车防雨罩：￥-21-00"><a href="#自行车防雨罩：￥-21-00" class="headerlink" title="自行车防雨罩：￥ 21.00"></a><strong>自行车防雨罩</strong>：￥ 21.00</h1><p><a href="http://detail.tmall.com/item.htm?id=17357830896&amp;spm=0.0.0.0.09snou" target="_blank" rel="external">http://detail.tmall.com/item.htm?id=17357830896&amp;spm=0.0.0.0.09snou</a><br><img src="/img/20130406/28.png" alt=""></p>
<h1 id="赛领避震油：￥-18-18"><a href="#赛领避震油：￥-18-18" class="headerlink" title="赛领避震油：￥ 18.18"></a><strong>赛领避震油</strong>：￥ 18.18</h1><p><a href="http://detail.tmall.com/item.htm?id=17822739316&amp;spm=0.0.0.0.X2YbB4" target="_blank" rel="external">http://detail.tmall.com/item.htm?id=17822739316&amp;spm=0.0.0.0.X2YbB4</a><br><img src="/img/20130406/29.png" alt=""></p>
<h1 id="春秋山地车骑行长裤：￥-188-00"><a href="#春秋山地车骑行长裤：￥-188-00" class="headerlink" title="春秋山地车骑行长裤：￥ 188.00"></a><strong>春秋山地车骑行长裤</strong>：￥ 188.00</h1><p><a href="http://trade.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.193.yBn1ma&amp;tradeID=438849221168112" target="_blank" rel="external">http://trade.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.193.yBn1ma&amp;tradeID=438849221168112</a><br><img src="/img/20130406/30.png" alt=""></p>
<h1 id="三叶草死飞冲锋衣：￥-268-00"><a href="#三叶草死飞冲锋衣：￥-268-00" class="headerlink" title="三叶草死飞冲锋衣：￥ 268.00"></a><strong>三叶草死飞冲锋衣</strong>：￥ 268.00</h1><p><a href="http://item.taobao.com/item.htm?id=22816744077" target="_blank" rel="external">http://item.taobao.com/item.htm?id=22816744077</a><br><img src="/img/20130406/31.png" alt=""></p>
<h1 id="正品玛吉斯-MAXXIS-DETONATOR-26x1-5-外胎半光头彩色-x-2：￥-146-00"><a href="#正品玛吉斯-MAXXIS-DETONATOR-26x1-5-外胎半光头彩色-x-2：￥-146-00" class="headerlink" title="正品玛吉斯 MAXXIS DETONATOR 26x1.5 外胎半光头彩色 x 2：￥ 146.00"></a><strong>正品玛吉斯 MAXXIS DETONATOR 26x1.5 外胎半光头彩色</strong> x 2：￥ 146.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.0.A0Vy5f&amp;id=13436563362" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.0.A0Vy5f&amp;id=13436563362</a><br><img src="/img/20130406/32.png" alt=""></p>
<h1 id="MAXXIS-ULTRA-LIGHT-26-1-5-1-75-美嘴SV-超轻内胎-x-2：￥-72-00"><a href="#MAXXIS-ULTRA-LIGHT-26-1-5-1-75-美嘴SV-超轻内胎-x-2：￥-72-00" class="headerlink" title="MAXXIS ULTRA LIGHT 26*1.5/1.75 美嘴SV 超轻内胎 x 2：￥ 72.00"></a><strong>MAXXIS ULTRA LIGHT 26*1.5/1.75 美嘴SV 超轻内胎</strong> x 2：￥ 72.00</h1><p><a href="http://item.taobao.com/item.htm?id=35282829794" target="_blank" rel="external">http://item.taobao.com/item.htm?id=35282829794</a><br><img src="/img/20130406/33.png" alt=""></p>
<h1 id="GIANT反光护链贴：￥-4-00"><a href="#GIANT反光护链贴：￥-4-00" class="headerlink" title="GIANT反光护链贴：￥ 4.00"></a><strong>GIANT反光护链贴</strong>：￥ 4.00</h1><p><a href="http://item.taobao.com/item.htm?id=25292508462" target="_blank" rel="external">http://item.taobao.com/item.htm?id=25292508462</a><br><img src="/img/20130406/34.png" alt=""></p>
<h1 id="GIANT前叉保护套：￥-6-00"><a href="#GIANT前叉保护套：￥-6-00" class="headerlink" title="GIANT前叉保护套：￥ 6.00"></a><strong>GIANT前叉保护套</strong>：￥ 6.00</h1><p><a href="http://item.taobao.com/item.htm?id=20659743731" target="_blank" rel="external">http://item.taobao.com/item.htm?id=20659743731</a><br><img src="/img/20130406/35.png" alt=""></p>
<h1 id="日本CATEYE猫眼-脚踏-反光片-x-4：￥-4-00"><a href="#日本CATEYE猫眼-脚踏-反光片-x-4：￥-4-00" class="headerlink" title="日本CATEYE猫眼 脚踏 反光片 x 4：￥ 4.00"></a><strong>日本CATEYE猫眼 脚踏 反光片</strong> x 4：￥ 4.00</h1><p><a href="http://item.taobao.com/item.htm?id=19683560013" target="_blank" rel="external">http://item.taobao.com/item.htm?id=19683560013</a><br><img src="/img/20130406/36.png" alt=""></p>
<h1 id="正品捷安特打气筒带软管便携美法嘴：￥-50-00"><a href="#正品捷安特打气筒带软管便携美法嘴：￥-50-00" class="headerlink" title="正品捷安特打气筒带软管便携美法嘴：￥ 50.00"></a><strong>正品捷安特打气筒带软管便携美法嘴</strong>：￥ 50.00</h1><p><a href="http://item.taobao.com/item.htm?spm=a1z09.5.0.0.reC3Ft&amp;id=15467277267&amp;_u=7154cj1cb97" target="_blank" rel="external">http://item.taobao.com/item.htm?spm=a1z09.5.0.0.reC3Ft&amp;id=15467277267&amp;_u=7154cj1cb97</a><br><img src="/img/20130406/37.jpeg" alt=""></p>
<h2 id="共花费约合人民币：5320-74，陆续增加中。。。"><a href="#共花费约合人民币：5320-74，陆续增加中。。。" class="headerlink" title="共花费约合人民币：5320.74，陆续增加中。。。"></a>共花费约合人民币：5320.74，陆续增加中。。。</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[骑行2：滴水湖]]></title>
      <url>http://cuiqingwei.github.io/2013/04/05/2013-04-05-%E9%AA%91%E8%A1%8C2%EF%BC%9A%E6%BB%B4%E6%B0%B4%E6%B9%96/</url>
      <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20130405/2.png" alt=""><br><a id="more"></a></p>
<h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><p><img src="/img/20130405/1.jpeg" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze90Nolq2/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze90Nolq2/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[骑行1：佘山]]></title>
      <url>http://cuiqingwei.github.io/2013/04/02/2013-04-02-%E9%AA%91%E8%A1%8C1%EF%BC%9A%E4%BD%98%E5%B1%B1/</url>
      <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/img/20130402/2.png" alt=""><br><a id="more"></a></p>
<h1 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h1><p><img src="/img/20130402/1.jpeg" alt=""></p>
<h1 id="留影"><a href="#留影" class="headerlink" title="留影"></a>留影</h1><p><a href="http://user.qzone.qq.com/39886157/photo/V12hjze93dVIi6/" target="_blank" rel="external">http://user.qzone.qq.com/39886157/photo/V12hjze93dVIi6/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GitHub建立个人站点]]></title>
      <url>http://cuiqingwei.github.io/2013/03/23/2013-03-23-GitHub%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/</url>
      <content type="html"><![CDATA[<p>Jekyll-简单的博客、静态网站工具<a href="http://jekyll.bootcss.om/" target="_blank" rel="external">http://jekyll.bootcss.com/</a>;</p>
<h3 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h3><ul>
<li>Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</li>
</ul>
<ul>
<li>GitHub可以托管各种git库的站点。</li>
</ul>
<ul>
<li>GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。</li>
</ul>
<h3 id="2-为什么使用Github-Pages"><a href="#2-为什么使用Github-Pages" class="headerlink" title="2.为什么使用Github Pages"></a>2.为什么使用Github Pages</h3><ul>
<li>搭建简单而且免费；</li>
<li>支持静态脚本；</li>
<li>可以绑定你的域名；</li>
<li>DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；</li>
<li>理想写博环境，git+github+markdown+jekyll；<a id="more"></a>
<h3 id="3-创建Github-Pages"><a href="#3-创建Github-Pages" class="headerlink" title="3 创建Github Pages"></a>3 创建Github Pages</h3></li>
</ul>
<h4 id="3-1-安装git工具"><a href="#3-1-安装git工具" class="headerlink" title="3.1 安装git工具"></a>3.1 安装git工具</h4><ul>
<li>Windows <a href="http://windows.github.com/" target="_blank" rel="external">http://windows.github.com/</a>;</li>
<li>Mac OS X <a href="http://mac.github.com/&amp;gt" target="_blank" rel="external">http://mac.github.com/&amp;gt</a>;</li>
</ul>
<h4 id="3-2-两种pages模式"><a href="#3-2-两种pages模式" class="headerlink" title="3.2 两种pages模式"></a>3.2 两种pages模式</h4><h5 id="1-User-Organization-Pages-个人或公司站点"><a href="#1-User-Organization-Pages-个人或公司站点" class="headerlink" title="1) User/Organization Pages 个人或公司站点"></a>1) User/Organization Pages 个人或公司站点</h5><ul>
<li>使用自己的用户名，每个用户名下面只能建立一个；</li>
<li>资源命名必须符合这样的规则username/username.github.com；</li>
<li>主干上内容被用来构建和发布页面</li>
</ul>
<h5 id="2-Project-Pages-项目站点"><a href="#2-Project-Pages-项目站点" class="headerlink" title="2) Project Pages 项目站点"></a>2) Project Pages 项目站点</h5><ul>
<li>gh-pages分支用于构建和发布；</li>
<li>如果user/org pages使用了独立域名，那么托管在账户下的所有project pages将使用相同的域名进行重定向，除非project pages使用了自己的独立域名；</li>
<li>如果没有使用独立域名，project pages将通过子路径的形式提供服务username.github.com/projectname；</li>
<li>自定义404页面只能在独立域名下使用，否则会使用User Pages 404；</li>
<li><p>创建项目站点步骤：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/USERNAME/PROJECT.git PROJECT</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div><div class="line">$ git add .</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">"First pages commit"</span></div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
</li>
<li><p>可以通过User/OrganizationPages建立主站，而通过ProjectPages挂载二级应用页面。</p>
</li>
</ul>
<h3 id="4-使用Jekyll搭建博客"><a href="#4-使用Jekyll搭建博客" class="headerlink" title="4 使用Jekyll搭建博客"></a>4 使用Jekyll搭建博客</h3><h4 id="4-1-什么是jekyll"><a href="#4-1-什么是jekyll" class="headerlink" title="4.1 什么是jekyll"></a>4.1 什么是jekyll</h4><ul>
<li>Jekyll是一种简单的、适用于博客的、静态网站生成引擎。它使用一个模板目录作为网站布局的基础框架，支持Markdown、Textile等标记语言的解析，提供了模板、变量、插件等功能，最终生成一个完整的静态Web站点。说白了就是，只要安装Jekyll的规范和结构，不用写html，就可以生成网站。[jekyll介绍][jekyll on github][jekyllbootstrap]。</li>
<li>Jekyll使用Liquid模板语言，表示文章标题，<p>Jekyll-简单的博客、静态网站工具<a href="http://jekyll.bootcss.om/" target="_blank" rel="external">http://jekyll.bootcss.com/</a>;</p>
<h3 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h3><ul>
<li>Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</li>
</ul>
<ul>
<li>GitHub可以托管各种git库的站点。</li>
</ul>
<ul>
<li>GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。</li>
</ul>
<h3 id="2-为什么使用Github-Pages"><a href="#2-为什么使用Github-Pages" class="headerlink" title="2.为什么使用Github Pages"></a>2.为什么使用Github Pages</h3><ul>
<li>搭建简单而且免费；</li>
<li>支持静态脚本；</li>
<li>可以绑定你的域名；</li>
<li>DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；</li>
<li>理想写博环境，git+github+markdown+jekyll；<!--more-->
<h3 id="3-创建Github-Pages"><a href="#3-创建Github-Pages" class="headerlink" title="3 创建Github Pages"></a>3 创建Github Pages</h3></li>
</ul>
<h4 id="3-1-安装git工具"><a href="#3-1-安装git工具" class="headerlink" title="3.1 安装git工具"></a>3.1 安装git工具</h4><ul>
<li>Windows <a href="http://windows.github.com/" target="_blank" rel="external">http://windows.github.com/</a>;</li>
<li>Mac OS X <a href="http://mac.github.com/&amp;gt" target="_blank" rel="external">http://mac.github.com/&amp;gt</a>;</li>
</ul>
<h4 id="3-2-两种pages模式"><a href="#3-2-两种pages模式" class="headerlink" title="3.2 两种pages模式"></a>3.2 两种pages模式</h4><h5 id="1-User-Organization-Pages-个人或公司站点"><a href="#1-User-Organization-Pages-个人或公司站点" class="headerlink" title="1) User/Organization Pages 个人或公司站点"></a>1) User/Organization Pages 个人或公司站点</h5><ul>
<li>使用自己的用户名，每个用户名下面只能建立一个；</li>
<li>资源命名必须符合这样的规则username/username.github.com；</li>
<li>主干上内容被用来构建和发布页面</li>
</ul>
<h5 id="2-Project-Pages-项目站点"><a href="#2-Project-Pages-项目站点" class="headerlink" title="2) Project Pages 项目站点"></a>2) Project Pages 项目站点</h5><ul>
<li>gh-pages分支用于构建和发布；</li>
<li>如果user/org pages使用了独立域名，那么托管在账户下的所有project pages将使用相同的域名进行重定向，除非project pages使用了自己的独立域名；</li>
<li>如果没有使用独立域名，project pages将通过子路径的形式提供服务username.github.com/projectname；</li>
<li>自定义404页面只能在独立域名下使用，否则会使用User Pages 404；</li>
<li><p>创建项目站点步骤：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/USERNAME/PROJECT.git PROJECT</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div><div class="line">$ git add .</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">"First pages commit"</span></div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
</li>
<li><p>可以通过User/OrganizationPages建立主站，而通过ProjectPages挂载二级应用页面。</p>
</li>
</ul>
<h3 id="4-使用Jekyll搭建博客"><a href="#4-使用Jekyll搭建博客" class="headerlink" title="4 使用Jekyll搭建博客"></a>4 使用Jekyll搭建博客</h3><h4 id="4-1-什么是jekyll"><a href="#4-1-什么是jekyll" class="headerlink" title="4.1 什么是jekyll"></a>4.1 什么是jekyll</h4><ul>
<li>Jekyll是一种简单的、适用于博客的、静态网站生成引擎。它使用一个模板目录作为网站布局的基础框架，支持Markdown、Textile等标记语言的解析，提供了模板、变量、插件等功能，最终生成一个完整的静态Web站点。说白了就是，只要安装Jekyll的规范和结构，不用写html，就可以生成网站。[jekyll介绍][jekyll on github][jekyllbootstrap]。</li>
<li>Jekyll使用Liquid模板语言，{{page.title}}表示文章标题，{{content}}表示文章内容。我们可以用两种Liquid标记语言：输出标记（output markup）和标签标记 (tag markup)。输出标记会输出文本（如果被引用的变量存在），而标签标记不会。输出标记是用双花括号分隔，而标签标记是用花括号-百分号对分隔。[Liquid模板语言] [Liquid模板变量参考]。</li>
<li>jekyll与github的关系：GitHub Pages一个由 GitHub 提供的用于托管项目主页或博客的服务，jekyll是后台所运行的引擎。</li>
</ul>
<h4 id="4-2-jekyll本地环境搭建"><a href="#4-2-jekyll本地环境搭建" class="headerlink" title="4.2 jekyll本地环境搭建"></a>4.2 jekyll本地环境搭建</h4><ul>
<li>下载最新的RubyInstaller并安装(我下载的是rubyinstaller-1.9.3-p194.exe)，设置环境变量，path中配置C:\Ruby193\bin目录，然后在命令行终端下输入gem update –system来升级gem；</li>
<li><p>下载最新的DevKit，DevKit是windows平台下编译和使用本地C/C++扩展包的工具。它就是用来模拟Linux平台下的make,gcc,sh来进行编译。但是这个方法目前仅支持通过RubyInstaller安装的Ruby，并双击运行解压到C:\DevKit。然后打开终端cmd，输入下列命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> C:\DevKit</div><div class="line">ruby dk.rb init</div><div class="line">ruby dk.rb install</div></pre></td></tr></table></figure>
</li>
<li><p>完成上面的准备就可以安装Jekyll了,因为Jekyll是用Ruby编写的,最好的安装方式是通过RubyGems(gem):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install Jekyll</div></pre></td></tr></table></figure>
</li>
<li><p>并使用命令检验是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --version</div></pre></td></tr></table></figure>
</li>
<li><p>安装Rdiscount，这个用来解析Markdown标记的包，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rdiscount</div></pre></td></tr></table></figure>
</li>
<li><p>运行本地工程：<br>cd 到工程目录，启动服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-3-jekyll目录结构"><a href="#4-3-jekyll目录结构" class="headerlink" title="4.3 jekyll目录结构**"></a>4.3 jekyll目录结构**</h4><ul>
<li><p><strong>_posts：</strong><br>: _posts中的数据文档，通过注入_layouts定义的模板，通过jekyll –server最终生成的静态页面在_sites目录。目录是用来存放你的文章的，一般以日期的形式书写标题。</p>
</li>
<li><p><strong>_layouts：</strong><br>: _layouts中的模板一般指向了_includes/themes中的模板。目录是用来存放模板的，在这里你可以定义页面中不同的头部和底部。</p>
</li>
<li><p><strong>_includes：</strong><br>: _includes/JB中有一些常用的工具，用于列表显示、评论等；<br>: _includes/themes中可参看主题的相关html文档。<br>: _includes/themes中的主题一般包含default.html、post.html和page.html三个文档。default.html定义了网站的最上层框架（模板），post.html和page.html是其子框架（模板）。<br>: 生成好的html子页面通过default.html的{{ content }}变量调用，生成整个页面。</p>
<ul>
<li><strong>assets</strong><br>: 渲染页面的CSS和JS文档在assets/themes中</li>
</ul>
</li>
<li><p><strong>_config.yml</strong><br>: 站点生成需要用到_config.yml配置文件，站点的全局变量在_config.yml中定义，用site.访问；页面的变量在YAML Front Matter中定义，用page.访问，更多的模板变量可参考模板数据。</p>
</li>
<li><p><strong>index.html</strong> 是你的页面首页。</p>
</li>
</ul>
<h4 id="4-4-Jekyll-Bootstrap创建博客"><a href="#4-4-Jekyll-Bootstrap创建博客" class="headerlink" title="4.4 Jekyll-Bootstrap创建博客"></a>4.4 Jekyll-Bootstrap创建博客</h4><ul>
<li>创建个人站点，即创建一个新资源，格式为username.github.com；</li>
<li><p>安装Jekyll-Bootstrap：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com</div><div class="line">$ <span class="built_in">cd</span> USERNAME.github.com</div><div class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com:USERNAME/USERNAME.github.com.git</div><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
</li>
<li><p>访问创建好的个人站点：username.github.com</p>
</li>
<li>在本地测试查看效果：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> USERNAME.github.com</div><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-5-Jekyll-写博过程"><a href="#4-5-Jekyll-写博过程" class="headerlink" title="4.5 Jekyll 写博过程"></a>4.5 Jekyll 写博过程</h4><h5 id="1-配置-config-yml"><a href="#1-配置-config-yml" class="headerlink" title="1) 配置_config.yml"></a>1) 配置_config.yml</h5><ul>
<li><p>修改标题：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title : My B<span class="built_in">log</span> =)</div></pre></td></tr></table></figure>
</li>
<li><p>修改个人信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">author :</div><div class="line">name : Name Lastname</div><div class="line">email : blah@email.test</div><div class="line">github : username</div><div class="line">twitter : username</div><div class="line">feedburner : feedname</div><div class="line">``</div><div class="line"></div><div class="line"><span class="comment">##### 2) 写文章</span></div><div class="line">按照_config.yml的格式permalink: /:categories/:year/:month/:day/:title，可以修改格式，创建markdown格式文件，就可以发布了。</div><div class="line"></div><div class="line"><span class="comment">##### 3) 发布</span></div><div class="line">本地预览修改：运行jekyll –server，预览http:127.0.0.1:4000。</div><div class="line">发布到github上：通过命令提交或者客户端提交。</div><div class="line"></div><div class="line"><span class="comment">#### 4.6 个性化博客</span></div><div class="line">Github Page完成了博客的主要功能，写作、发布、修改，这些都是相对静态的东西，就是你自己可以控制的事情，还有一些动态的东西Github Pages无法支持，比如说文章浏览次数、文章的评论等，还有一些个性化的东西，像个性化页头页尾、代码高亮可以把博客整的更漂亮一点，其实这写都可以通过第三方应用来实现，个性化自己的博客。</div><div class="line">加上Disqus云评论:</div><div class="line">注册http://disqus.com</div><div class="line">修改_config.yml:</div><div class="line">``` bash</div><div class="line">comments :</div><div class="line">provider : disqus</div><div class="line">disqus :</div><div class="line">short_name : tiansj</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-使用Markdown"><a href="#5-使用Markdown" class="headerlink" title="5 使用Markdown"></a>5 使用Markdown</h3><h4 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h4><ul>
<li>Markdown 的宗旨是实现「易读易写」。可读性，无论如何，都是最重要的。</li>
<li>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。格式撰写的文件可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</li>
<li>资料：<a href="http://www.cnblogs.com/purediy/archive/2013/01/10/2855397.html" target="_blank" rel="external">搭建环境</a></li>
</ul>
<h4 id="5-2-基本语法"><a href="#5-2-基本语法" class="headerlink" title="5.2 基本语法"></a>5.2 基本语法</h4><ul>
<li>使用一个或多个空行分隔内容段来生成段落 <p>。</p></li>
<li>标题（h1~h6）格式为使用相应个数的“#”作前缀，比如表示h3用 ### this is a level-3 header ###</li>
<li>使用“&gt;”作为段落前缀来标识引用文字段落。这其实是 email 中标记引用文字的标准方式；</li>
<li>使用<strong>*</strong>或<strong>+</strong>或<strong>-</strong>来表示无序列表；使用数字加“.”表示有序列表。如：</li>
</ul>
<ol>
<li>I am ordered list item 1…</li>
<li>So I should be item 2</li>
</ol>
<ul>
<li>使用4个以上<strong>空格</strong>或1个以上的<strong>tab</strong>来标记代码段落，它们将被<strong>\<pre\></pre\></strong>和<strong>\<code\></code\></strong>包裹，这意味着代码段内的字体会是monospace家族的，并且特殊符号不会被转义。</li>
<li>使用[test](<a href="http://example.net" target="_blank" rel="external">http://example.net</a> “optional title”)来标记普通链接。</li>
<li>使用![img](<a href="http://example.net/img.png" target="_blank" rel="external">http://example.net/img.png</a> “optional title”)&gt;来标记图片。引号内的title文字是可选的，链接也可以使用相对路径。</li>
<li>使用* 或 _ 包裹文本产生 strong 效果：<em>语气很重的文本</em> 以及 <strong>语气更重的文本</strong></li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>GitHub Pages 建立个人主页 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a></li>
<li>jekyll <a href="http://jekyll.bootcss.com/" target="_blank" rel="external">http://jekyll.bootcss.com/</a></li>
<li>GitHub Pages和Jekyll入门 <a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html</a></li>
<li>通过GitHub Pages建立个人站点 <a href="http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="external">http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html</a></li>
<li>基于jekyll-bootstrap的GitHub Pages搭建过程 <a href="http://www.cnblogs.com/Leo_wl/p/3402935.html" target="_blank" rel="external">http://www.cnblogs.com/Leo_wl/p/3402935.html</a></li>
<li>jekyll-bootstrap模板 <a href="http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html" target="_blank" rel="external">http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html</a></li>
<li>Markdown 语法说明 <a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="external">http://wowubuntu.com/markdown/index.html</a></li>
<li>highlight.js <a href="https://highlightjs.org/" target="_blank" rel="external">https://highlightjs.org/</a></li>
</ul>
表示文章内容。我们可以用两种Liquid标记语言：输出标记（output markup）和标签标记 (tag markup)。输出标记会输出文本（如果被引用的变量存在），而标签标记不会。输出标记是用双花括号分隔，而标签标记是用花括号-百分号对分隔。[Liquid模板语言] [Liquid模板变量参考]。</li>
<li>jekyll与github的关系：GitHub Pages一个由 GitHub 提供的用于托管项目主页或博客的服务，jekyll是后台所运行的引擎。</li>
</ul>
<h4 id="4-2-jekyll本地环境搭建"><a href="#4-2-jekyll本地环境搭建" class="headerlink" title="4.2 jekyll本地环境搭建"></a>4.2 jekyll本地环境搭建</h4><ul>
<li>下载最新的RubyInstaller并安装(我下载的是rubyinstaller-1.9.3-p194.exe)，设置环境变量，path中配置C:\Ruby193\bin目录，然后在命令行终端下输入gem update –system来升级gem；</li>
<li><p>下载最新的DevKit，DevKit是windows平台下编译和使用本地C/C++扩展包的工具。它就是用来模拟Linux平台下的make,gcc,sh来进行编译。但是这个方法目前仅支持通过RubyInstaller安装的Ruby，并双击运行解压到C:\DevKit。然后打开终端cmd，输入下列命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> C:\DevKit</div><div class="line">ruby dk.rb init</div><div class="line">ruby dk.rb install</div></pre></td></tr></table></figure>
</li>
<li><p>完成上面的准备就可以安装Jekyll了,因为Jekyll是用Ruby编写的,最好的安装方式是通过RubyGems(gem):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install Jekyll</div></pre></td></tr></table></figure>
</li>
<li><p>并使用命令检验是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --version</div></pre></td></tr></table></figure>
</li>
<li><p>安装Rdiscount，这个用来解析Markdown标记的包，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rdiscount</div></pre></td></tr></table></figure>
</li>
<li><p>运行本地工程：<br>cd 到工程目录，启动服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-3-jekyll目录结构"><a href="#4-3-jekyll目录结构" class="headerlink" title="4.3 jekyll目录结构**"></a>4.3 jekyll目录结构**</h4><ul>
<li><p><strong>_posts：</strong><br>: _posts中的数据文档，通过注入_layouts定义的模板，通过jekyll –server最终生成的静态页面在_sites目录。目录是用来存放你的文章的，一般以日期的形式书写标题。</p>
</li>
<li><p><strong>_layouts：</strong><br>: _layouts中的模板一般指向了_includes/themes中的模板。目录是用来存放模板的，在这里你可以定义页面中不同的头部和底部。</p>
</li>
<li><p><strong>_includes：</strong><br>: _includes/JB中有一些常用的工具，用于列表显示、评论等；<br>: _includes/themes中可参看主题的相关html文档。<br>: _includes/themes中的主题一般包含default.html、post.html和page.html三个文档。default.html定义了网站的最上层框架（模板），post.html和page.html是其子框架（模板）。<br>: 生成好的html子页面通过default.html的</p><p>Jekyll-简单的博客、静态网站工具<a href="http://jekyll.bootcss.om/" target="_blank" rel="external">http://jekyll.bootcss.com/</a>;</p>
<h3 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1.Git简介"></a>1.Git简介</h3><ul>
<li>Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</li>
</ul>
<ul>
<li>GitHub可以托管各种git库的站点。</li>
</ul>
<ul>
<li>GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。</li>
</ul>
<h3 id="2-为什么使用Github-Pages"><a href="#2-为什么使用Github-Pages" class="headerlink" title="2.为什么使用Github Pages"></a>2.为什么使用Github Pages</h3><ul>
<li>搭建简单而且免费；</li>
<li>支持静态脚本；</li>
<li>可以绑定你的域名；</li>
<li>DIY自由发挥，动手实践一些有意思的东西git,markdown,bootstrap,jekyll；</li>
<li>理想写博环境，git+github+markdown+jekyll；<!--more-->
<h3 id="3-创建Github-Pages"><a href="#3-创建Github-Pages" class="headerlink" title="3 创建Github Pages"></a>3 创建Github Pages</h3></li>
</ul>
<h4 id="3-1-安装git工具"><a href="#3-1-安装git工具" class="headerlink" title="3.1 安装git工具"></a>3.1 安装git工具</h4><ul>
<li>Windows <a href="http://windows.github.com/" target="_blank" rel="external">http://windows.github.com/</a>;</li>
<li>Mac OS X <a href="http://mac.github.com/&amp;gt" target="_blank" rel="external">http://mac.github.com/&amp;gt</a>;</li>
</ul>
<h4 id="3-2-两种pages模式"><a href="#3-2-两种pages模式" class="headerlink" title="3.2 两种pages模式"></a>3.2 两种pages模式</h4><h5 id="1-User-Organization-Pages-个人或公司站点"><a href="#1-User-Organization-Pages-个人或公司站点" class="headerlink" title="1) User/Organization Pages 个人或公司站点"></a>1) User/Organization Pages 个人或公司站点</h5><ul>
<li>使用自己的用户名，每个用户名下面只能建立一个；</li>
<li>资源命名必须符合这样的规则username/username.github.com；</li>
<li>主干上内容被用来构建和发布页面</li>
</ul>
<h5 id="2-Project-Pages-项目站点"><a href="#2-Project-Pages-项目站点" class="headerlink" title="2) Project Pages 项目站点"></a>2) Project Pages 项目站点</h5><ul>
<li>gh-pages分支用于构建和发布；</li>
<li>如果user/org pages使用了独立域名，那么托管在账户下的所有project pages将使用相同的域名进行重定向，除非project pages使用了自己的独立域名；</li>
<li>如果没有使用独立域名，project pages将通过子路径的形式提供服务username.github.com/projectname；</li>
<li>自定义404页面只能在独立域名下使用，否则会使用User Pages 404；</li>
<li><p>创建项目站点步骤：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/USERNAME/PROJECT.git PROJECT</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div><div class="line">$ git add .</div><div class="line">$ git commit <span class="_">-a</span> -m <span class="string">"First pages commit"</span></div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
</li>
<li><p>可以通过User/OrganizationPages建立主站，而通过ProjectPages挂载二级应用页面。</p>
</li>
</ul>
<h3 id="4-使用Jekyll搭建博客"><a href="#4-使用Jekyll搭建博客" class="headerlink" title="4 使用Jekyll搭建博客"></a>4 使用Jekyll搭建博客</h3><h4 id="4-1-什么是jekyll"><a href="#4-1-什么是jekyll" class="headerlink" title="4.1 什么是jekyll"></a>4.1 什么是jekyll</h4><ul>
<li>Jekyll是一种简单的、适用于博客的、静态网站生成引擎。它使用一个模板目录作为网站布局的基础框架，支持Markdown、Textile等标记语言的解析，提供了模板、变量、插件等功能，最终生成一个完整的静态Web站点。说白了就是，只要安装Jekyll的规范和结构，不用写html，就可以生成网站。[jekyll介绍][jekyll on github][jekyllbootstrap]。</li>
<li>Jekyll使用Liquid模板语言，{{page.title}}表示文章标题，{{content}}表示文章内容。我们可以用两种Liquid标记语言：输出标记（output markup）和标签标记 (tag markup)。输出标记会输出文本（如果被引用的变量存在），而标签标记不会。输出标记是用双花括号分隔，而标签标记是用花括号-百分号对分隔。[Liquid模板语言] [Liquid模板变量参考]。</li>
<li>jekyll与github的关系：GitHub Pages一个由 GitHub 提供的用于托管项目主页或博客的服务，jekyll是后台所运行的引擎。</li>
</ul>
<h4 id="4-2-jekyll本地环境搭建"><a href="#4-2-jekyll本地环境搭建" class="headerlink" title="4.2 jekyll本地环境搭建"></a>4.2 jekyll本地环境搭建</h4><ul>
<li>下载最新的RubyInstaller并安装(我下载的是rubyinstaller-1.9.3-p194.exe)，设置环境变量，path中配置C:\Ruby193\bin目录，然后在命令行终端下输入gem update –system来升级gem；</li>
<li><p>下载最新的DevKit，DevKit是windows平台下编译和使用本地C/C++扩展包的工具。它就是用来模拟Linux平台下的make,gcc,sh来进行编译。但是这个方法目前仅支持通过RubyInstaller安装的Ruby，并双击运行解压到C:\DevKit。然后打开终端cmd，输入下列命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> C:\DevKit</div><div class="line">ruby dk.rb init</div><div class="line">ruby dk.rb install</div></pre></td></tr></table></figure>
</li>
<li><p>完成上面的准备就可以安装Jekyll了,因为Jekyll是用Ruby编写的,最好的安装方式是通过RubyGems(gem):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install Jekyll</div></pre></td></tr></table></figure>
</li>
<li><p>并使用命令检验是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --version</div></pre></td></tr></table></figure>
</li>
<li><p>安装Rdiscount，这个用来解析Markdown标记的包，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install rdiscount</div></pre></td></tr></table></figure>
</li>
<li><p>运行本地工程：<br>cd 到工程目录，启动服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-3-jekyll目录结构"><a href="#4-3-jekyll目录结构" class="headerlink" title="4.3 jekyll目录结构**"></a>4.3 jekyll目录结构**</h4><ul>
<li><p><strong>_posts：</strong><br>: _posts中的数据文档，通过注入_layouts定义的模板，通过jekyll –server最终生成的静态页面在_sites目录。目录是用来存放你的文章的，一般以日期的形式书写标题。</p>
</li>
<li><p><strong>_layouts：</strong><br>: _layouts中的模板一般指向了_includes/themes中的模板。目录是用来存放模板的，在这里你可以定义页面中不同的头部和底部。</p>
</li>
<li><p><strong>_includes：</strong><br>: _includes/JB中有一些常用的工具，用于列表显示、评论等；<br>: _includes/themes中可参看主题的相关html文档。<br>: _includes/themes中的主题一般包含default.html、post.html和page.html三个文档。default.html定义了网站的最上层框架（模板），post.html和page.html是其子框架（模板）。<br>: 生成好的html子页面通过default.html的{{ content }}变量调用，生成整个页面。</p>
<ul>
<li><strong>assets</strong><br>: 渲染页面的CSS和JS文档在assets/themes中</li>
</ul>
</li>
<li><p><strong>_config.yml</strong><br>: 站点生成需要用到_config.yml配置文件，站点的全局变量在_config.yml中定义，用site.访问；页面的变量在YAML Front Matter中定义，用page.访问，更多的模板变量可参考模板数据。</p>
</li>
<li><p><strong>index.html</strong> 是你的页面首页。</p>
</li>
</ul>
<h4 id="4-4-Jekyll-Bootstrap创建博客"><a href="#4-4-Jekyll-Bootstrap创建博客" class="headerlink" title="4.4 Jekyll-Bootstrap创建博客"></a>4.4 Jekyll-Bootstrap创建博客</h4><ul>
<li>创建个人站点，即创建一个新资源，格式为username.github.com；</li>
<li><p>安装Jekyll-Bootstrap：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com</div><div class="line">$ <span class="built_in">cd</span> USERNAME.github.com</div><div class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com:USERNAME/USERNAME.github.com.git</div><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
</li>
<li><p>访问创建好的个人站点：username.github.com</p>
</li>
<li>在本地测试查看效果：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> USERNAME.github.com</div><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-5-Jekyll-写博过程"><a href="#4-5-Jekyll-写博过程" class="headerlink" title="4.5 Jekyll 写博过程"></a>4.5 Jekyll 写博过程</h4><h5 id="1-配置-config-yml"><a href="#1-配置-config-yml" class="headerlink" title="1) 配置_config.yml"></a>1) 配置_config.yml</h5><ul>
<li><p>修改标题：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title : My B<span class="built_in">log</span> =)</div></pre></td></tr></table></figure>
</li>
<li><p>修改个人信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">author :</div><div class="line">name : Name Lastname</div><div class="line">email : blah@email.test</div><div class="line">github : username</div><div class="line">twitter : username</div><div class="line">feedburner : feedname</div><div class="line">``</div><div class="line"></div><div class="line"><span class="comment">##### 2) 写文章</span></div><div class="line">按照_config.yml的格式permalink: /:categories/:year/:month/:day/:title，可以修改格式，创建markdown格式文件，就可以发布了。</div><div class="line"></div><div class="line"><span class="comment">##### 3) 发布</span></div><div class="line">本地预览修改：运行jekyll –server，预览http:127.0.0.1:4000。</div><div class="line">发布到github上：通过命令提交或者客户端提交。</div><div class="line"></div><div class="line"><span class="comment">#### 4.6 个性化博客</span></div><div class="line">Github Page完成了博客的主要功能，写作、发布、修改，这些都是相对静态的东西，就是你自己可以控制的事情，还有一些动态的东西Github Pages无法支持，比如说文章浏览次数、文章的评论等，还有一些个性化的东西，像个性化页头页尾、代码高亮可以把博客整的更漂亮一点，其实这写都可以通过第三方应用来实现，个性化自己的博客。</div><div class="line">加上Disqus云评论:</div><div class="line">注册http://disqus.com</div><div class="line">修改_config.yml:</div><div class="line">``` bash</div><div class="line">comments :</div><div class="line">provider : disqus</div><div class="line">disqus :</div><div class="line">short_name : tiansj</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-使用Markdown"><a href="#5-使用Markdown" class="headerlink" title="5 使用Markdown"></a>5 使用Markdown</h3><h4 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h4><ul>
<li>Markdown 的宗旨是实现「易读易写」。可读性，无论如何，都是最重要的。</li>
<li>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。格式撰写的文件可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</li>
<li>资料：<a href="http://www.cnblogs.com/purediy/archive/2013/01/10/2855397.html" target="_blank" rel="external">搭建环境</a></li>
</ul>
<h4 id="5-2-基本语法"><a href="#5-2-基本语法" class="headerlink" title="5.2 基本语法"></a>5.2 基本语法</h4><ul>
<li>使用一个或多个空行分隔内容段来生成段落 <p>。</p></li>
<li>标题（h1~h6）格式为使用相应个数的“#”作前缀，比如表示h3用 ### this is a level-3 header ###</li>
<li>使用“&gt;”作为段落前缀来标识引用文字段落。这其实是 email 中标记引用文字的标准方式；</li>
<li>使用<strong>*</strong>或<strong>+</strong>或<strong>-</strong>来表示无序列表；使用数字加“.”表示有序列表。如：</li>
</ul>
<ol>
<li>I am ordered list item 1…</li>
<li>So I should be item 2</li>
</ol>
<ul>
<li>使用4个以上<strong>空格</strong>或1个以上的<strong>tab</strong>来标记代码段落，它们将被<strong>\<pre\></pre\></strong>和<strong>\<code\></code\></strong>包裹，这意味着代码段内的字体会是monospace家族的，并且特殊符号不会被转义。</li>
<li>使用[test](<a href="http://example.net" target="_blank" rel="external">http://example.net</a> “optional title”)来标记普通链接。</li>
<li>使用![img](<a href="http://example.net/img.png" target="_blank" rel="external">http://example.net/img.png</a> “optional title”)&gt;来标记图片。引号内的title文字是可选的，链接也可以使用相对路径。</li>
<li>使用* 或 _ 包裹文本产生 strong 效果：<em>语气很重的文本</em> 以及 <strong>语气更重的文本</strong></li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>GitHub Pages 建立个人主页 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a></li>
<li>jekyll <a href="http://jekyll.bootcss.com/" target="_blank" rel="external">http://jekyll.bootcss.com/</a></li>
<li>GitHub Pages和Jekyll入门 <a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html</a></li>
<li>通过GitHub Pages建立个人站点 <a href="http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="external">http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html</a></li>
<li>基于jekyll-bootstrap的GitHub Pages搭建过程 <a href="http://www.cnblogs.com/Leo_wl/p/3402935.html" target="_blank" rel="external">http://www.cnblogs.com/Leo_wl/p/3402935.html</a></li>
<li>jekyll-bootstrap模板 <a href="http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html" target="_blank" rel="external">http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html</a></li>
<li>Markdown 语法说明 <a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="external">http://wowubuntu.com/markdown/index.html</a></li>
<li>highlight.js <a href="https://highlightjs.org/" target="_blank" rel="external">https://highlightjs.org/</a></li>
</ul>
变量调用，生成整个页面。<p></p>
<ul>
<li><strong>assets</strong><br>: 渲染页面的CSS和JS文档在assets/themes中</li>
</ul>
</li>
<li><p><strong>_config.yml</strong><br>: 站点生成需要用到_config.yml配置文件，站点的全局变量在_config.yml中定义，用site.访问；页面的变量在YAML Front Matter中定义，用page.访问，更多的模板变量可参考模板数据。</p>
</li>
<li><p><strong>index.html</strong> 是你的页面首页。</p>
</li>
</ul>
<h4 id="4-4-Jekyll-Bootstrap创建博客"><a href="#4-4-Jekyll-Bootstrap创建博客" class="headerlink" title="4.4 Jekyll-Bootstrap创建博客"></a>4.4 Jekyll-Bootstrap创建博客</h4><ul>
<li>创建个人站点，即创建一个新资源，格式为username.github.com；</li>
<li><p>安装Jekyll-Bootstrap：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com</div><div class="line">$ <span class="built_in">cd</span> USERNAME.github.com</div><div class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com:USERNAME/USERNAME.github.com.git</div><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
</li>
<li><p>访问创建好的个人站点：username.github.com</p>
</li>
<li>在本地测试查看效果：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> USERNAME.github.com</div><div class="line">jekyll --server</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-5-Jekyll-写博过程"><a href="#4-5-Jekyll-写博过程" class="headerlink" title="4.5 Jekyll 写博过程"></a>4.5 Jekyll 写博过程</h4><h5 id="1-配置-config-yml"><a href="#1-配置-config-yml" class="headerlink" title="1) 配置_config.yml"></a>1) 配置_config.yml</h5><ul>
<li><p>修改标题：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title : My B<span class="built_in">log</span> =)</div></pre></td></tr></table></figure>
</li>
<li><p>修改个人信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">author :</div><div class="line">name : Name Lastname</div><div class="line">email : blah@email.test</div><div class="line">github : username</div><div class="line">twitter : username</div><div class="line">feedburner : feedname</div><div class="line">``</div><div class="line"></div><div class="line"><span class="comment">##### 2) 写文章</span></div><div class="line">按照_config.yml的格式permalink: /:categories/:year/:month/:day/:title，可以修改格式，创建markdown格式文件，就可以发布了。</div><div class="line"></div><div class="line"><span class="comment">##### 3) 发布</span></div><div class="line">本地预览修改：运行jekyll –server，预览http:127.0.0.1:4000。</div><div class="line">发布到github上：通过命令提交或者客户端提交。</div><div class="line"></div><div class="line"><span class="comment">#### 4.6 个性化博客</span></div><div class="line">Github Page完成了博客的主要功能，写作、发布、修改，这些都是相对静态的东西，就是你自己可以控制的事情，还有一些动态的东西Github Pages无法支持，比如说文章浏览次数、文章的评论等，还有一些个性化的东西，像个性化页头页尾、代码高亮可以把博客整的更漂亮一点，其实这写都可以通过第三方应用来实现，个性化自己的博客。</div><div class="line">加上Disqus云评论:</div><div class="line">注册http://disqus.com</div><div class="line">修改_config.yml:</div><div class="line">``` bash</div><div class="line">comments :</div><div class="line">provider : disqus</div><div class="line">disqus :</div><div class="line">short_name : tiansj</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-使用Markdown"><a href="#5-使用Markdown" class="headerlink" title="5 使用Markdown"></a>5 使用Markdown</h3><h4 id="5-1-简介"><a href="#5-1-简介" class="headerlink" title="5.1 简介"></a>5.1 简介</h4><ul>
<li>Markdown 的宗旨是实现「易读易写」。可读性，无论如何，都是最重要的。</li>
<li>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。格式撰写的文件可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。</li>
<li>资料：<a href="http://www.cnblogs.com/purediy/archive/2013/01/10/2855397.html" target="_blank" rel="external">搭建环境</a></li>
</ul>
<h4 id="5-2-基本语法"><a href="#5-2-基本语法" class="headerlink" title="5.2 基本语法"></a>5.2 基本语法</h4><ul>
<li>使用一个或多个空行分隔内容段来生成段落 <p>。</p></li>
<li>标题（h1~h6）格式为使用相应个数的“#”作前缀，比如表示h3用 ### this is a level-3 header ###</li>
<li>使用“&gt;”作为段落前缀来标识引用文字段落。这其实是 email 中标记引用文字的标准方式；</li>
<li>使用<strong>*</strong>或<strong>+</strong>或<strong>-</strong>来表示无序列表；使用数字加“.”表示有序列表。如：</li>
</ul>
<ol>
<li>I am ordered list item 1…</li>
<li>So I should be item 2</li>
</ol>
<ul>
<li>使用4个以上<strong>空格</strong>或1个以上的<strong>tab</strong>来标记代码段落，它们将被<strong>\<pre\></pre\></strong>和<strong>\<code\></code\></strong>包裹，这意味着代码段内的字体会是monospace家族的，并且特殊符号不会被转义。</li>
<li>使用[test](<a href="http://example.net" target="_blank" rel="external">http://example.net</a> “optional title”)来标记普通链接。</li>
<li>使用![img](<a href="http://example.net/img.png" target="_blank" rel="external">http://example.net/img.png</a> “optional title”)&gt;来标记图片。引号内的title文字是可选的，链接也可以使用相对路径。</li>
<li>使用* 或 _ 包裹文本产生 strong 效果：<em>语气很重的文本</em> 以及 <strong>语气更重的文本</strong></li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li>GitHub Pages 建立个人主页 <a href="https://pages.github.com/" target="_blank" rel="external">https://pages.github.com/</a></li>
<li>jekyll <a href="http://jekyll.bootcss.com/" target="_blank" rel="external">http://jekyll.bootcss.com/</a></li>
<li>GitHub Pages和Jekyll入门 <a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html</a></li>
<li>通过GitHub Pages建立个人站点 <a href="http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="external">http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html</a></li>
<li>基于jekyll-bootstrap的GitHub Pages搭建过程 <a href="http://www.cnblogs.com/Leo_wl/p/3402935.html" target="_blank" rel="external">http://www.cnblogs.com/Leo_wl/p/3402935.html</a></li>
<li>jekyll-bootstrap模板 <a href="http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html" target="_blank" rel="external">http://layouts-the.me.s3-website-us-east-1.amazonaws.com/index.html</a></li>
<li>Markdown 语法说明 <a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="external">http://wowubuntu.com/markdown/index.html</a></li>
<li>highlight.js <a href="https://highlightjs.org/" target="_blank" rel="external">https://highlightjs.org/</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[InstantContiki2.6 for CC2530]]></title>
      <url>http://cuiqingwei.github.io/2013/01/11/2013-01-11-InstantContiki2-6-for-CC2530/</url>
      <content type="html"><![CDATA[<p>搞zigbee算是国内第一批了，很早就知道6lowpan。用cc2430时，从研究<a href="http://www.tinyos8051wg.net" target="_blank" rel="external">http://www.tinyos8051wg.net</a>，找寻资料了解到 Nanostack1.0.0，直到Nanostack1.1.0 之后就转为contiki了。好久没发帖了，发个帖Mark一下，先！</p>
<p>1.Download Instant Contiki</p>
<p><a href="http://sourceforge.net/projects/contiki/files/Instant%20Contiki/" target="_blank" rel="external"><font color="#000080">http://sourceforge.net/projects/contiki/files/Instant%20Contiki/</font></a></p>
<p>2.Install VMWare Player</p>
<p><a href="https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0" target="_blank" rel="external"><font color="#000080">https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0</font></a></p>
<p>3.Log into Instant Contiki.</p>
<p>password is: <strong><font color="red">user</font></strong><br><a id="more"></a><br>4.编译~/contiki/examples/cc2530dk下例子，需要先安装SDCC.</p>
<p>&nbsp;&nbsp;参考文档</p>
<p>&nbsp;&nbsp;<a href="https://github.com/contiki-os/contiki/wiki/8051-Requirements" target="_blank" rel="external"><font color="#000080">https://github.com/contiki-os/contiki/wiki/8051-Requirements</font></a></p>
<p>&nbsp;&nbsp;4.1）下载SDCC</p>
<font color="blue">&nbsp;&nbsp;cd /opt<br><br>&nbsp;&nbsp;sudo svn co -r 7100 </font><a href="https://sdcc.svn.sourceforge.net/svnroot/sdcc/trunk/sdcc/" target="_blank" rel="external"><font color="blue">&nbsp;&nbsp;https://sdcc.svn.sourceforge.net/svnroot/sdcc/trunk/sdcc/</font></a><br><br>&nbsp;&nbsp;4.2) 更改配置<br><br>&nbsp;&nbsp;<font color="blue">sudo vi /opt/sdcc/device/libs/incl.mk</font>

<p>&nbsp;&nbsp;将最后一行</p>
<p>&nbsp;&nbsp;MODELS = small medium large</p>
<p>&nbsp;&nbsp;替换为</p>
<p>&nbsp;&nbsp;<strong>MODELS = small <font color="red">large huge</font></strong></p>
<p>&nbsp;&nbsp;<font color="blue">sudo vi /opt/sdcc/device/libs/Makefile.in</font></p>
<p>&nbsp;&nbsp;将最后一行</p>
<p>&nbsp;&nbsp;TARGETS += models small-mcs51-stack-auto</p>
<p>&nbsp;&nbsp;替换为</p>
<p>&nbsp;&nbsp;<strong>TARGETS += models <font color="red">model-</font>mcs51-stack-auto</strong></p>
<p>&nbsp;&nbsp;<font color="blue">cd /opt/sdcc</font></p>
<p>&nbsp;&nbsp;•Run this:</p>
<p>&nbsp;&nbsp;<font color="blue">sudo ./configure –disable-gbz80-port –disable-z80-port –disable-ds390-port \</font></p>
<p>&nbsp;&nbsp;<font color="blue">–disable-ds400-port –disable-pic14-port –disable-pic16-port \</font></p>
<p>&nbsp;&nbsp;<font color="blue">–disable-hc08-port –disable-r2k-port –disable-z180-port \</font></p>
<p>&nbsp;&nbsp;<font color="blue">–disable-sdcdb –disable-ucsim</font></p>
<p>&nbsp;&nbsp;此过程若出现</p>
<p>&nbsp;&nbsp;_configure: error: boost library not found (boost/graph/adjacency<em>list.hpp)</em></p>
<p>&nbsp;&nbsp;执行</p>
<font color="red">&nbsp;&nbsp;sudo apt-get install libboost-graph-dev</font>

<p>&nbsp;&nbsp;完成后，重新执行</p>
<p>&nbsp; &nbsp;<font color="blue">sudo ./configure –disable-gbz80-port –disable-z80-port –disable-ds390-port \</font></p>
<p>&nbsp;&nbsp;<font color="blue">–disable-ds400-port –disable-pic14-port –disable-pic16-port \</font></p>
<p>&nbsp;&nbsp;<font color="blue">–disable-hc08-port –disable-r2k-port –disable-z180-port \</font></p>
<p>&nbsp;&nbsp;<font color="blue">–disable-sdcdb –disable-ucsim_</font></p>
<p>&nbsp;&nbsp;4.3）编译，安装</p>
<font color="blue">&nbsp;&nbsp;sudo make<br><br>&nbsp;&nbsp;sudo make install</font>

<p>&nbsp;&nbsp;4.4）完成</p>
<font color="blue">&nbsp;&nbsp;sdcc -v</font>

<p>&nbsp;&nbsp;显示</p>
<p>&nbsp;&nbsp;<em>SDCC : mcs51 3.1.1 #7100 (Jan 10 2013) (Linux)</em></p>
<p>5.编译cc2530dk</p>
<p>&nbsp;&nbsp;5.1) hello world</p>
<p>&nbsp;&nbsp;<font color="blue">cd ~/contiki/examples/cc2530dk</font></p>
<p>&nbsp;&nbsp;<font color="blue">make hello-world</font></p>
<p>&nbsp;&nbsp;编译完成</p>
<p>&nbsp;&nbsp;<a href="mailto:user@instant-contiki:~/contiki/examples/cc2530dk$" target="_blank" rel="external"><font color="#000080">user@instant-contiki:~/contiki/examples/cc2530dk$</font></a> ls</p>
<p>&nbsp;&nbsp;blink-hello.c&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;hello-world.c&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;obj_cc2530dk&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;timer-test.c</p>
<p>&nbsp;&nbsp;blink-hello.cc2530dk&nbsp;&nbsp;hello-world.cc2530dk&nbsp;&nbsp;sensors-demo.c&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;timer-test.cc2530dk</p>
<p>&nbsp;&nbsp;blink-hello.cdb&nbsp; &nbsp;&nbsp; &nbsp; hello-world.cdb&nbsp; &nbsp;&nbsp; &nbsp; sensors-demo.cc2530dk&nbsp;&nbsp;timer-test.cdb</p>
<p>&nbsp;&nbsp;blink-hello.hex&nbsp; &nbsp;&nbsp; &nbsp; hello-world.hex&nbsp; &nbsp;&nbsp; &nbsp; sensors-demo.cdb&nbsp; &nbsp;&nbsp; &nbsp; timer-test.hex</p>
<p>&nbsp;&nbsp;blink-hello.lk&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;hello-world.lk&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sensors-demo.hex&nbsp; &nbsp;&nbsp; &nbsp; timer-test.lk</p>
<p>&nbsp;&nbsp;blink-hello.map&nbsp; &nbsp;&nbsp; &nbsp; hello-world.map&nbsp; &nbsp;&nbsp; &nbsp; sensors-demo.lk&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;timer-test.map</p>
<p>&nbsp;&nbsp;blink-hello.mem&nbsp; &nbsp;&nbsp; &nbsp; hello-world.mem&nbsp; &nbsp;&nbsp; &nbsp; sensors-demo.map&nbsp; &nbsp;&nbsp; &nbsp; timer-test.mem</p>
<p>&nbsp;&nbsp;blink-hello.omf&nbsp; &nbsp;&nbsp; &nbsp; hello-world.omf&nbsp; &nbsp;&nbsp; &nbsp; sensors-demo.mem&nbsp; &nbsp;&nbsp; &nbsp; timer-test.omf</p>
<p>&nbsp;&nbsp;border-router&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Makefile&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;sensors-demo.omf&nbsp; &nbsp;&nbsp; &nbsp; udp-ipv6</p>
<p>&nbsp;&nbsp;contiki-cc2530dk.lib&nbsp;&nbsp;Makefile.target&nbsp; &nbsp;&nbsp; &nbsp; sniffer</p>
<p>&nbsp;&nbsp;5.2) udp-ipv6</p>
<font color="blue">&nbsp;&nbsp;cd ~/contiki/examples/cc2530dk/udp-ipv6</font>

<font color="blue">&nbsp;&nbsp;make</font>

<p>&nbsp;&nbsp;报错，缺少<strong><font color="red">srecord</font></strong></p>
<p>&nbsp;&nbsp;Pack hex file</p>
<p>&nbsp;&nbsp;===============</p>
<p>&nbsp;&nbsp;srec_cat -disable_sequence_warnings client.banked-hex -intel -crop 0x18000 0x1FFFF -offset -65536 -o bank1.hex -intel</p>
<p>&nbsp;&nbsp;/bin/sh: 5: srec_cat: not found</p>
<p>&nbsp;&nbsp;srec_cat -disable_sequence_warnings client.banked-hex -intel -crop 0x28000 0x2FFFF -offset -98304 -o bank2.hex -intel</p>
<p>&nbsp;&nbsp;/bin/sh: 5: srec_cat: not found</p>
<p>&nbsp;&nbsp;srec_cat -disable_sequence_warnings client.banked-hex -intel -crop 0x38000 0x3FFFF -offset -131072 -o bank3.hex -intel</p>
<p>&nbsp;&nbsp;/bin/sh: 5: srec_cat: not found</p>
<p>&nbsp;&nbsp;srec_cat -disable_sequence_warnings client.banked-hex -intel -crop 0x48000 0x4FFFF -offset -163840 -o bank4.hex -intel</p>
<p>&nbsp;&nbsp;/bin/sh: 5: srec_cat: not found</p>
<p>&nbsp;&nbsp;make: <em>*</em> [client.hex] Error 127</p>
<p>&nbsp;&nbsp;执行</p>
<p>&nbsp;&nbsp;<font color="blue">sudo apt-get install srecord</font></p>
<p>6.TI SmartRF Flash Programmer 烧录 *.hex</p>
<p>&nbsp;&nbsp;已烧录hello-world.hex为例，CC2530 UART0 会打印输出如下信息：</p>
<p>&nbsp;&nbsp;##########################################</p>
<p>&nbsp;&nbsp;Contiki-2.6</p>
<p>&nbsp;&nbsp;TI SmartRF05 EB</p>
<p>&nbsp;&nbsp;cc2530-F256, 08KB SRAM</p>
<p>&nbsp;&nbsp;SDCC Build:</p>
<p>&nbsp; &nbsp; –model-large</p>
<p>&nbsp; &nbsp; –stack-auto</p>
<p>&nbsp; &nbsp;Net: Rime</p>
<p>&nbsp; &nbsp;MAC: CSMA</p>
<p>&nbsp; &nbsp;RDC: nullrdc</p>
<p>&nbsp;&nbsp;##########################################</p>
<p>&nbsp;&nbsp;Rime is 0x02 bytes long</p>
<p>&nbsp;&nbsp;Reading MAC from Info Page</p>
<p>&nbsp;&nbsp;Rime configured with address c6:1c</p>
<p>&nbsp;&nbsp;Rime is 0x02 bytes long</p>
<p>&nbsp;&nbsp;Reading MAC from Info Page</p>
<p>&nbsp;&nbsp;Rime configured with address 67:af</p>
<font color="magenta">&nbsp;&nbsp;Hello World!</font>

<p>7.建立自己的硬件平台[我的是：edutech]和工程[我的是：edutech]</p>
<p>&nbsp;&nbsp;7.1) cpu</p>
<p>&nbsp;&nbsp;<font color="blue">cd ~/contiki/cpu/cc253x</font></p>
<p>&nbsp;&nbsp;cp Makefile.cc253x Makefile.cc253x-edutech</p>
<p>&nbsp;&nbsp;cp bank-alloc.py bank-alloc-edutech.py</p>
<font color="blue">&nbsp;&nbsp;vi Makefile.cc253x-edutech</font>

<p>&nbsp;&nbsp;编辑第14行</p>
<p>&nbsp;&nbsp;BANK_ALLOC = $(CONTIKI_CPU)/bank-alloc.py</p>
<p>&nbsp;&nbsp;为</p>
<p>&nbsp;&nbsp;<strong>BANK_ALLOC = $(CONTIKI_CPU)/<font color="red">bank-alloc-edutech.py</font></strong></p>
<p>&nbsp;&nbsp;保存</p>
<font color="blue">&nbsp;&nbsp;:wq</font>

<font color="blue">&nbsp;&nbsp;vi bank-alloc-edutech.py</font>

<p>&nbsp;&nbsp;编辑第101行</p>
<p>&nbsp;&nbsp;file_pat = re.compile(‘obj_cc2530dk[^ ]+.‘)</p>
<p>&nbsp;&nbsp;为</p>
<p><strong> file_pat = re.compile(<font color="red">‘obj_edutech</font>[^ ]+.‘)</strong></p>
<p>&nbsp;&nbsp;将文中4处，157、158、172、173行中</p>
<p>&nbsp;&nbsp;bank-alloc.py 替换为 <strong><font color="red">bank-alloc-edutech.py</font> </strong></p>
<p>&nbsp;&nbsp;保存</p>
<font color="blue">&nbsp;&nbsp;:wq</font>

<p>&nbsp;&nbsp;7.2) platform</p>
<font color="blue">&nbsp;&nbsp;cd ~/contiki/platform<br><br>&nbsp;&nbsp;cp cc2530dk edutech -R<br><br>&nbsp;&nbsp;cd edutech<br><br>&nbsp;&nbsp;mv Makefile.cc2530dk&nbsp;&nbsp;Makefile.edutech<br><br>&nbsp;&nbsp;vi Makefile.edutech</font>

<p>&nbsp;&nbsp;编辑第1行[非必须]</p>
<p>&nbsp;&nbsp;# cc2530dk platform makefile</p>
<p>&nbsp;&nbsp;为</p>
<p><strong>&nbsp;&nbsp;# <font color="red">edutech</font> platform makefile</strong></p>
<p>&nbsp;&nbsp;编辑第19行</p>
<p>&nbsp;&nbsp;CLEAN += *.cc2530dk</p>
<p>&nbsp;&nbsp;为</p>
<p>&nbsp;&nbsp;CLEAN += <font color="red"><em>.edutech </em>.native</font></p>
<p>&nbsp;&nbsp;编辑第52行,最后一行</p>
<p>&nbsp;&nbsp;include $(CONTIKI_CPU)/Makefile.cc253x</p>
<p>&nbsp;&nbsp;为</p>
<p>&nbsp;&nbsp;<strong>include $(CONTIKI_CPU)/<font color="red">Makefile.cc253x-edutech</font></strong></p>
<p>&nbsp;&nbsp;保存</p>
<font color="blue">&nbsp;&nbsp;:wq</font>

<p>&nbsp;&nbsp;接下来根据实际硬件情况，编辑或创建驱动文件</p>
<p>&nbsp;&nbsp;7.3) project</p>
<font color="blue">&nbsp;&nbsp;cd ~/contiki/examples<br><br>&nbsp;&nbsp;cp cc2530dk/ edutech -R<br><br>&nbsp;&nbsp;cd edutech<br><br>&nbsp;&nbsp;vi Makefile.target</font>

<p>&nbsp;&nbsp;编辑第1行</p>
<p>&nbsp;&nbsp;TARGET = cc2530dk</p>
<p>&nbsp;&nbsp;为</p>
<p>&nbsp;&nbsp;TARGET = <font color="red">edutech</font></p>
<p>&nbsp;&nbsp;保存</p>
<font color="blue">&nbsp;&nbsp;:wq</font>

<font color="blue">&nbsp;&nbsp;make</font>

<p>&nbsp;&nbsp;烧录</p>
<p><img src="/images/markdown/20130111/1.jpg" alt="programmer"></p>
<p>#using TI CC Debugger (based on Ubuntu)<br>install Package libboost-all-dev and libusb-1.0-0-dev by using command</p>
<p>sudo apt-get install libboost-all-dev</p>
<p>sudo apt-get install libusb-1.0-0-dev</p>
<ul>
<li><p>download cc-tool source code from <a href="https://github.com/misham/cc-tool" target="_blank" rel="external">https://github.com/misham/cc-tool</a></p>
</li>
<li><p>extract cc-tool source code and install by using command</p>
<p>  <strong>sudo wget <a href="https://github.com/misham/cc-tool/archive/master.zip" target="_blank" rel="external">https://github.com/misham/cc-tool/archive/master.zip</a></strong></p>
<p>  <strong>sudo unzip master.zip</strong></p>
<p>  <strong>cd cc-tool- master</strong></p>
<p>  <strong>sudo ./configure</strong></p>
<p>  <strong>make</strong></p>
<p>  <strong>make install</strong></p>
</li>
<li><p>use lsusb command for list your Board</p>
<p>  <strong>lsusb</strong></p>
</li>
<li><p>the output should be</p>
</li>
</ul>
<p>..Bus 006 Device 015: ID 0451:16a0 Texas Instruments, Inc. Bus 006 Device 013: ID 0451:16a0 Texas Instruments, Inc. ..</p>
<ul>
<li><p>change directory to your .hex file</p>
<p>  (example /home/user/contiki-sensinode/examples/cc2530dk)</p>
<p>  <strong>cd /home/user/contiki-sensinode/examples/cc2530dk</strong></p>
</li>
<li><p>start program board (cc-tool -ew FILE_NAME.hex -d’Bus:Device’ -v)</p>
<p>  <strong>cc-tool -ew blink-hello.hex -d’006:015’ -v</strong></p>
</li>
<li><p>the result should be</p>
</li>
</ul>
<p>Programmer: SmartRF05EB Target: CC2530 Erasing flash… Erasing completed Writing flash… (42 KB)… Writing completed (3.13 s.) Verifying flash… Verification completed (3.33 s.)</p>
<ul>
<li><p>for more cc-tool command option you can use –help</p>
<p>  <strong>cc-tool –help</strong></p>
</li>
</ul>
<p>可使用 <strong><font color="red">sudo cc-tool –n cc2530 –w blink-hello.hex –v</font></strong> 烧录</p>
<p>#sensniff</p>
<p><a href="https://github.com/g-oikonomou/sensniff" target="_blank" rel="external">https://github.com/g-oikonomou/sensniff</a></p>
<p><a href="https://github.com/jerusalemdax/contiki-cc2530eb" target="_blank" rel="external">https://github.com/jerusalemdax/contiki-cc2530eb</a></p>
<p>下载</p>
<p><a href="git clone git://github.com/jerusalemdax/contiki-cc2530eb.git">git clone git://github.com/jerusalemdax/contiki-cc2530eb.git</a></p>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-5515866-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-5515866-1-1.html</a></p>
<p>www.iotdev.net <a href="http://www.iotdev.net/thread-210-1-1.html" target="_blank" rel="external">http://www.iotdev.net/thread-210-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[曾经折腾过的那些]]></title>
      <url>http://cuiqingwei.github.io/2012/10/14/2012-10-14-%E6%9B%BE%E7%BB%8F%E6%8A%98%E8%85%BE%E8%BF%87%E7%9A%84%E9%82%A3%E4%BA%9B/</url>
      <content type="html"><![CDATA[<p>整理硬盘资料时，看到这些图片。心情很激动，这些个都是与硬件相关的，什么MP3啊等等，可惜没有保留图片,纯软件的就更多了。才发现自己2009年到现在这几年一直忙着搞公司的事。已好久没停下来做点自己真正喜欢或是让自己心动的事了！<br><a id="more"></a></p>
<ul>
<li><p>2002年.闪动的LOVE<br><img src="/img/20121014/1.jpeg" alt="2002年.闪动的LOVE"><br><em>大学期间参加大学电子设计大赛，利用当时所学知识和课余时间制作，用来哄现在的老婆（当时的女朋友）开心的小东西。</em></p>
</li>
<li><p>2003年.有源音箱<br><img src="/img/20121014/2.jpeg" alt="2003年.有源音箱(1)"><br><img src="/img/20121014/3.jpeg" alt="2003年.有源音箱(2)"><br><img src="/img/20121014/4.jpeg" alt="2003年.有源音箱(3)"><br><img src="/img/20121014/5.jpeg" alt="2003年.有源音箱(4)"><br><em>大学快毕业时自己制作的有源音箱，电路板用的是公板，音箱箱体还是几个同学跑到学校外面自己买得大木板，最后找木工切割的。喷漆也是自己处理的。想想还是挺激动人心的。现在这东西已被我运回老家，音质我一直觉得非常好，不比当时流行的几百块的“低音炮”差。</em></p>
</li>
<li><p>2005年1月18日.创自电动读卡器测试工装<br><img src="/img/20121014/6.jpeg" alt="创自电动读卡器测试"></p>
</li>
<li><p>2005年1月18日.按键寿命测试工装<br><img src="/img/20121014/7.jpeg" alt="按键测试工装"></p>
</li>
<li><p>2005年5月20日.驱动软驱步进电机<br><img src="/img/20121014/8.jpeg" alt="驱动软驱步进电机"><br><em>为了学习步进电机驱动原理，从一个旧软驱上拆下了磁头的驱动电机，并利用手上现有电路板改装成功驱动。当时，很开心！因为，那时才真正开始学习单片机编程。</em></p>
</li>
<li><p>2005年6月3日.八路电池工装<br><img src="/img/20121014/9.jpeg" alt="八路电池工装"><br><em>电池充放电测试工装，用于测试电池充放电时间，容量等指示。</em></p>
</li>
<li><p>2005年6月3日.分币器测试<br><img src="/img/20121014/10.jpeg" alt="分币器测试"><br><em>利用现有电路板，编写软件解决测试问题。此时，是对单片机编程最痴迷的时候，也是学东西最多的时候。</em></p>
</li>
<li><p>2005年6月3日.升降式IC卡座测试<br><img src="/img/20121014/11.jpeg" alt="升降式IC卡座测试工装"></p>
</li>
<li><p>2005年6月3日.摇摆测试机<br><img src="/img/20121014/12.jpeg" alt="摇摆测试机(1)"><br><img src="/img/20121014/13.jpeg" alt="摇摆测试机(2)"><br><em>测试链接线的弯折寿命，比如我们常用的耳机线、电源适配器DC插头。。。</em></p>
</li>
<li><p>2005年6月3日.琴键开关测试简易装置<br><img src="/img/20121014/14.jpeg" alt="琴键天关测试简易装置(1)"><br><img src="/img/20121014/15.jpeg" alt="琴键天关测试简易装置(2)"><br><em>缩写简易软件测试琴键开关寿命，带检测功能。</em></p>
</li>
<li><p>2005年6月3日.硬币识别测试工装<br><img src="/img/20121014/16.jpeg" alt="硬币识别测试"><br><em>这东西，看着就很牛，流水作业。</em></p>
</li>
<li><p>2005年6月3日.自设计电动读卡测试<br><img src="/img/20121014/17.jpeg" alt="自设计电动读卡测试"></p>
</li>
<li><p>2005年7月27日.可计行程的小车<br><img src="/img/20121014/18.jpeg" alt="可计行程的小车(1)"><br><img src="/img/20121014/19.jpeg" alt="可计行程的小车(2)"><br><em>参加电子设计大赛抽到的题目是小车，可惜当时没把参赛资料保留下来。参加工作后，一天突发其想再设计一下。学生时代很难的东西，工作后一个下午就DIY出来了。</em></p>
</li>
<li><p>2005年9月1日.智能高温箱<br><img src="/img/20121014/20.jpeg" alt="智能高温箱(1)"><br><img src="/img/20121014/21.jpeg" alt="智能高温箱(2)"><br><img src="/img/20121014/22.jpeg" alt="智能高温箱(3)"><br><img src="/img/20121014/23.jpeg" alt="智能高温箱(4)"><br><em>我一直觉得这是个很牛的设计，创作源头是当时的老大，老大很牛。从他那学到了好多东西。至今都受益匪浅！那也是自己成长最快的时期。</em></p>
</li>
<li><p>2006年10月4日.自学C++Builder<br><img src="/img/20121014/24.jpeg" alt="ThinkPad"><br><em>国庆假期自学了C++Builder（图中的ThinkPad花了自己8000多元。当时，自己也不过刚当上万元户，买了ThinkPad就近乎破产了。这也证明了：只有穷单身汉才会毫无顾及的拿出所有积蓄去做自己喜欢的事！珍惜单身的时光，去做点自己喜欢做的事！）<br>学习单片机，做东西做多了。发现好多时候需要用到上位机软件配合。于是，利用一个十一假期恶补了C++Builder，这个非常有意义，为后面自己做项目奠定了坚实的基础！</em></p>
</li>
<li><p>2006年4月4日.反冲流灌溉控制器<br><img src="/img/20121014/25.jpeg" alt="反冲流灌溉控制器(1)"><br><img src="/img/20121014/26.jpeg" alt="反冲流灌溉控制器(2)"><br><em>工作之余，做得第一项目。Mark一下，后面做得比这好得多的项目反而没留下什么图片，或是也不能公开什么 ：）</em><br><a href="http://www.amobbs.com/thread-612138-1-1.html" target="_blank" rel="external">论坛链接</a></p>
</li>
<li><p>2006年4月4日.收银箱寿命测试仪<br><img src="/img/20121014/27.jpeg" alt="收银箱寿命测试仪"><br><em>当时做出这个东西的时候，我们还找到一个机械打领带机，比我们这个牛多了！</em></p>
</li>
<li><p>2006年8月14.接触电流测试仪<br><img src="/img/20121014/28.jpeg" alt="接触电流测试仪 (1)"><br><img src="/img/20121014/29.jpeg" alt="接触电流测试仪 (2)"><br><img src="/img/20121014/30.jpeg" alt="接触电流测试仪 (3)"><br><img src="/img/20121014/31.jpeg" alt="接触电流测试仪 (4)"><br><img src="/img/20121014/32.jpeg" alt="接触电流测试仪 (5)"><br><img src="/img/20121014/33.jpeg" alt="接触电流测试仪 (6)"><br><img src="/img/20121014/34.jpeg" alt="接触电流测试仪 (7)"><br><img src="/img/20121014/35.jpeg" alt="接触电流测试仪 (8)"><br><img src="/img/20121014/36.jpeg" alt="接触电流测试仪 (9)"><br><img src="/img/20121014/37.jpeg" alt="接触电流测试仪 (10)"><br><em>这个项目，菜单处理部分让我花了很多心血。在单片机上实现了checkbox效果，引入了进度条。。。每个小图标都精心设计。现在想想当初那股劲，都让我很自豪！</em><br><a href="http://www.amobbs.com/thread-1054447-1-1.html" target="_blank" rel="external">论坛链接</a></p>
</li>
<li><p>2007年10月11日.AVRasp<br><img src="/img/20121014/38.jpeg" alt="AVRasp(1)"><br><img src="/img/20121014/39.jpeg" alt="AVRasp(2)"><br><img src="/img/20121014/40.jpeg" alt="AVRasp-3D(1)"><br><img src="/img/20121014/41.jpeg" alt="AVRasp-3D(2)"><br><img src="/img/20121014/42.jpeg" alt="AVRasp成品(1)"><br><img src="/img/20121014/43.jpeg" alt="AVRasp成品(2)"><br><em>自己制作的AVR小工具，重点是为了学习Eagle 3D。Eagle 3D是众多EDA里最漂亮的，至今我还是这么认为！</em><br><a href="http://www.amobbs.com/thread-831661-1-1.html" target="_blank" rel="external">论坛链接1</a><br><a href="http://www.amobbs.com/thread-854275-1-1.html" target="_blank" rel="external">论坛链接2</a></p>
</li>
<li><p>2007年1月25日.1.25雷击发生器<br><img src="/img/20121014/41.jpeg" alt="1.25雷击发生器"><br><em>这东西很牛，主要还是牛在硬件上。这个还是得说当时的老大牛。如果想体验”雷劈一下”的感觉，可以拿这个试试。</em></p>
</li>
<li><p>2007年1月28日.第一版小崔风火轮<br><img src="/img/20121014/45.jpeg" alt="第一版小崔风火轮设计现场(1)"><br><img src="/img/20121014/46.jpeg" alt="第一版小崔风火轮设计现场(2)"><br><img src="/img/20121014/47.jpeg" alt="第一版小崔风火轮设计现场(3)"><br><img src="/img/20121014/48.jpeg" alt="第一版小崔风火轮设计现场(4)"><br><img src="/img/20121014/49.jpeg" alt="第一版小崔风火轮设计现场(5)"><br><img src="/img/20121014/50.jpeg" alt="第一版小崔风火轮设计现场(5)"><br><em>本人做东西一向都很快，调试软件只用了一个下午和晚上。当时，就已养成了事情搞不完不睡觉的优良传统。</em><br><a href="http://www.amobbs.com/thread-716357-1-1.html" target="_blank" rel="external">论坛链接</a></p>
</li>
<li><p>2007年1月29.基于C++Builder6编写的风火轮取模软件<br><img src="/img/20121014/51.jpeg" alt="取模软件1"><br><img src="/img/20121014/52.jpeg" alt="取模软件2"><br><em>此时，我的C++Builder6已炉火纯青，不过现在搞这类小软件已转向C#.net了。</em></p>
</li>
<li><p>2007年1月29日.第一版小崔风火轮设计完成<br><img src="/img/20121014/53.jpeg" alt="第一版小崔风火轮"><br><em>当看到这个效果时，真得有说不出的激动。</em><br><a href="http://www.amobbs.com/thread-850834-1-1.html" target="_blank" rel="external">论坛链接</a></p>
</li>
<li><p>2008年11月20日.基于CC1110+TRF7960的RFID读卡器<br><img src="/img/20121014/54.jpeg" alt="读卡器"><br><em>折腾了我好久的中断触发模式，最后还是用的轮询。CC1110跟MSP430还是有区别地。</em></p>
</li>
<li><p>2008年1月2日.RGB LED<br><img src="/img/20121014/55.jpeg" alt="调光调试现场(1)"><br><img src="/img/20121014/56.jpeg" alt="调光调试现场(2)"><br><img src="/img/20121014/57.jpeg" alt="调光调试现场(3)"><br><em>当时如果坚持做点调光的产品，现在说不定发了。</em><br><a href="http://www.amobbs.com/thread-883719-1-1.html" target="_blank" rel="external">论坛链接</a></p>
</li>
<li><p>2008年3月31日.第一版RGB小崔风火轮<br><img src="/img/20121014/58.jpeg" alt="第一版RGB小崔风火轮调试现场(1)"><br><img src="/img/20121014/59.jpeg" alt="第一版RGB小崔风火轮调试现场(2)"><br><img src="/img/20121014/60.jpeg" alt="第一版RGB小崔风火轮调试现场(3)"><br><em>在租住的小房间里调试RGB风火轮。很投入。。。。。。如今住进了自己的房子，却怎么也找不到一个可以自己折腾的空间了。</em></p>
</li>
<li><p>2008年3月9日.小崔风火轮简易版<br><img src="/img/20121014/61.jpeg" alt="小崔风火轮简易版(1)"><br><img src="/img/20121014/62.jpeg" alt="小崔风火轮简易版(2)"><br><em>在老婆的英明指导下，将小崔风火轮包装成产品。虽然，没搞出什么名堂。但还是赚了点零花钱。这东西至今还有人经常联系我聊合作的事。可惜已决定不在江湖混了，只能婉拒！</em><br><a href="http://www.amobbs.com/thread-946455-1-1.html" target="_blank" rel="external">论坛链接</a></p>
</li>
<li><p>2008年5月11日.CC2430仿真器<br><img src="/img/20121014/63.jpeg" alt="CC2430仿真器"><br><em>赚到最多的一个DIY产品。</em></p>
</li>
<li><p>2008年5月16.为老外定制的RGB风火轮<br><img src="/img/20121014/64.jpeg" alt="为老外定制的RGB风火轮(1)"><br><img src="/img/20121014/65.jpeg" alt="为老外定制的RGB风火轮(2)"><br><img src="/img/20121014/66.jpeg" alt="为老外定制的RGB风火轮(3)"><br><img src="/img/20121014/67.jpeg" alt="为老外定制的RGB风火轮(4)"><br><em>给一个国外客户弄的，好像也是中国人，只是移民了。</em></p>
</li>
<li><p>2009年8月31日.CC2530仿真器<br><img src="/img/20121014/68.jpeg" alt="CC2530仿真器"><br><em>这个的重点是设计上做了优化，成本上要比TI原厂那个低很多！</em></p>
</li>
</ul>
<hr>
<p><em>发表链接</em></p>
<p>QQZone <a href="http://user.qzone.qq.com/39886157/blog/1350188306" target="_blank" rel="external">http://user.qzone.qq.com/39886157/blog/1350188306</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[autoRootfs.sh]]></title>
      <url>http://cuiqingwei.github.io/2012/09/07/2012-09-07-autoRootfs-sh/</url>
      <content type="html"><![CDATA[<p>autoRootfs.sh<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"------autoRootfs-------"</span></div><div class="line"><span class="comment"># 设定目录</span></div><div class="line">TARGET_DIR=/home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line"><span class="comment"># =====================================</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"create rootfs"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> root ]</div><div class="line"><span class="keyword">then</span></div><div class="line">mkdir root dev etc bin sbin mnt sys proc lib home tmp var usr</div><div class="line">mkdir usr/sbin usr/bin usr/lib usr/modules</div><div class="line">mkdir etc/init.d</div><div class="line">mkdir lib/modules</div><div class="line">chmod 777 tmp</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment"># =====================================</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"create dev nod"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/dev</div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> console ]</div><div class="line"><span class="keyword">then</span></div><div class="line">mknod -m 600 mem		c 1 1</div><div class="line">mknod -m 666 null		c 1 3</div><div class="line">mknod -m 666 zero		c 1 5</div><div class="line">mknod -m 644 random		c 1 8</div><div class="line">mknod -m 600 tty0		c 4 0</div><div class="line">mknod -m 600 tty1		c 4 1</div><div class="line">mknod -m 600 ttyS0		c 4 64</div><div class="line">mknod -m 600 ttyS1		c 4 65</div><div class="line">mknod -m 600 tty		c 5 0</div><div class="line">mknod -m 600 console	c 5 1</div><div class="line">mknod -m 755 mmcblk0    b 179 0</div><div class="line">mknod -m 755 mmcblk0p1  b 179 1</div><div class="line">chmod 644 random</div><div class="line">chmod 600 tty0 tty1 ttyS0</div><div class="line">ln <span class="_">-s</span> /proc/self/fd fd</div><div class="line">ln <span class="_">-s</span> fd/0 stdin</div><div class="line">ln <span class="_">-s</span> fd/0 stdout</div><div class="line">ln <span class="_">-s</span> fd/0 stderr</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment"># =====================================</span></div><div class="line"><span class="comment"># 建立配置文件</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/profile"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> profile ]</div><div class="line"><span class="keyword">then</span></div><div class="line">cat &lt;&lt;EOT &gt; profile</div><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment">#/etc/profile:system-wide .profile file for the Bourne shell</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Processing /etc/profile ... "</span></div><div class="line"><span class="comment"># no-op</span></div><div class="line"><span class="comment"># Set search library path</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Set search library path in /etc/profile"</span></div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/lib:/usr/lib</div><div class="line"><span class="comment"># host name</span></div><div class="line">HOSTNAME=`/bin/hostname`</div><div class="line"><span class="built_in">export</span> HOSTNAME</div><div class="line"><span class="comment"># Set user path</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Set user path in /etc/profile"</span></div><div class="line">PATH=/bin:/sbin:/usr/bin:/usr/sbin</div><div class="line"><span class="built_in">export</span> PATH</div><div class="line"><span class="comment"># alias</span></div><div class="line"><span class="built_in">alias</span> ll=<span class="string">"ls -al"</span></div><div class="line"><span class="comment"># Prompt</span></div><div class="line">USER=<span class="string">"`id -un`"</span></div><div class="line">LOGNAME=<span class="variable">$USER</span></div><div class="line">PS1=<span class="string">'[\u@\h \W]\$'</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Welcome to Linux"</span></div><div class="line">EOT</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/inittab"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> inittab ]</div><div class="line"><span class="keyword">then</span></div><div class="line">cat &lt;&lt;EOT &gt; inittab</div><div class="line"><span class="comment"># /etc/inittab</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (C) 2009 Edutech &lt;cuiqingwei@gmail.com&gt;</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Note: BusyBox init doesn't support runlevels.  The runlevels field is</span></div><div class="line"><span class="comment"># completely ignored by BusyBox init. If you want runlevels, use</span></div><div class="line"><span class="comment"># sysvinit.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Format for each entry: &lt;id&gt;:&lt;runlevels&gt;:&lt;action&gt;:&lt;process&gt;</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># id        == tty to run on, or empty for /dev/console</span></div><div class="line"><span class="comment"># runlevels == ignored</span></div><div class="line"><span class="comment"># action    == one of sysinit, respawn, askfirst, wait, and once</span></div><div class="line"><span class="comment"># process   == program to run</span></div><div class="line"><span class="comment"># now run any rc scripts</span></div><div class="line">::sysinit:/etc/init.d/rcS</div><div class="line"><span class="comment"># 不需要设置登录验证</span></div><div class="line"><span class="comment">#console::respawn:-/bin/sh    </span></div><div class="line"><span class="comment"># 需要设置登录验证 Put a getty on the serial port</span></div><div class="line">ttyS0::askfirst:/sbin/getty -L ttyS0 115200 vt100</div><div class="line"><span class="comment"># Logging</span></div><div class="line"><span class="comment">#null::respawn:/sbin/syslogd -n -m 0</span></div><div class="line"><span class="comment">#null::respawn:/sbin/klogd -n</span></div><div class="line"><span class="comment"># ctrl+alt+del restart</span></div><div class="line">::ctrlaltdel:/sbin/reboot</div><div class="line"><span class="comment"># restart init process</span></div><div class="line">::restart:/sbin/init</div><div class="line"><span class="comment"># Stuff to do before rebooting</span></div><div class="line"><span class="comment">#null::shutdown:/usr/bin/killall klogd</span></div><div class="line"><span class="comment">#null::shutdown:/usr/bin/killall syslogd</span></div><div class="line">null::shutdown:/bin/umount <span class="_">-a</span> -r</div><div class="line">null::shutdown:/sbin/swapoff <span class="_">-a</span></div><div class="line"><span class="comment"># end 2012-09-22</span></div><div class="line">EOT</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/fstab"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> fstab ]</div><div class="line"><span class="keyword">then</span></div><div class="line">cat &lt;&lt;EOT &gt; fstab</div><div class="line"><span class="comment"># /etc/fstab: static file system information.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># &lt;File system&gt; 	&lt;mount pt&gt;		&lt;type&gt;	&lt;options&gt;		&lt;dump&gt;	&lt;pass&gt;</span></div><div class="line"><span class="comment">#rootfs			/             	auto	defaults 				1	1</span></div><div class="line">porc    		/proc         	proc 	defaults              	0	0</div><div class="line"><span class="comment">#tmpfs       	/dev         	tmpfs 	size=512k,mode=0755		0	0</span></div><div class="line"><span class="comment">#devpts      	/dev/pts       	devpts	mode=0620,gid=5  		0	0</span></div><div class="line">usbfs         	/proc/bus/usb 	usbfs 	defaults              	0	0</div><div class="line"><span class="comment"># Here, we use 1MB memory as tmpfs,and mount on /var/volatile. Can be used to</span></div><div class="line"><span class="comment"># hold log files (Lost when shut down, but can avoid write NAND</span></div><div class="line">tmpfs         	/var/volatile 	tmpfs 	size=1M               	0	0</div><div class="line"><span class="comment"># uncomment this if your device has a SD/MMC/Transflash slot</span></div><div class="line"><span class="comment">#/dev/mmcblk0p1	/mnt/mmc		auto   	defaults,sync,noauto  	0	0</span></div><div class="line"><span class="comment">#/dev/mtdblock1	/mnt/mtd     	jffs2  	defaults,sync,noauto  	0	0</span></div><div class="line">EOT</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/init.d/rcS"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc/init.d</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> rcS ]</div><div class="line"><span class="keyword">then</span></div><div class="line">cat &lt;&lt;EOT &gt; rcS</div><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" Exec rcS  "</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line">runlevel=S</div><div class="line"><span class="built_in">export</span> runlevel</div><div class="line"><span class="comment"># Host name</span></div><div class="line">/bin/hostname mdk9261</div><div class="line"><span class="comment"># Mount /proc if not</span></div><div class="line">[ <span class="_">-d</span> <span class="string">"/proc/1"</span> ] || mount /proc</div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"********* mount all ************"</span></div><div class="line">/bin/mount -av</div><div class="line">mount -t tmpfs 	mdev   /dev</div><div class="line">mount -t sysfs 	sysfs  /sys</div><div class="line">mkdir /dev/pts</div><div class="line">mount -t devpts devpts /dev/pts</div><div class="line"><span class="comment"># Read the busybox docs: mdev.txt</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"******** starting mdev *********"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"This may take some time ..."</span></div><div class="line"><span class="comment">#/bin/mount -t sysfs sysfs /sys</span></div><div class="line">/bin/<span class="built_in">echo</span> /sbin/mdev &gt; /proc/sys/kernel/hotplug</div><div class="line">mdev <span class="_">-s</span></div><div class="line"><span class="comment"># When mdev is mounted, /sys can be umounted</span></div><div class="line"><span class="comment">#/bin/umount /sys</span></div><div class="line"><span class="comment"># Start local services</span></div><div class="line">/etc/init.d/rc.local</div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" Linux for mdk9261 "</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line"><span class="comment"># by: cuiqingwei 20120913"</span></div><div class="line">EOT</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/init.d/rc.local"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc/init.d</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> rc.local ]</div><div class="line"><span class="keyword">then</span></div><div class="line">cat &lt;&lt;EOT &gt; rc.local</div><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"***** start local services *****"</span></div><div class="line">ifconfig lo up</div><div class="line"><span class="comment">#udhcpc -t 3 -i eth0</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"******* starting telnetd *******"</span></div><div class="line">telnetd</div><div class="line"><span class="comment">#ntpd -p 209.81.9.7</span></div><div class="line"><span class="comment">#echo "******** starting boa **********"</span></div><div class="line"><span class="comment">#mkdir /var/log/boa</span></div><div class="line"><span class="comment">#boa</span></div><div class="line"><span class="comment">#echo "******** starting samba ********"</span></div><div class="line"><span class="comment">#nmbd -D</span></div><div class="line"><span class="comment">#smbd -D</span></div><div class="line"><span class="comment">#echo "******** mount MMC/SD **********"</span></div><div class="line"><span class="comment">#if [ -d "/dev/mmcblk0p1" ]; then</span></div><div class="line">    mount -t vfat /dev/mmcblk0p1 /mnt</div><div class="line"><span class="comment">#fi</span></div><div class="line"><span class="comment"># by: cuiqingwei 20120913"</span></div><div class="line">EOT</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/mdev.conf"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> mdev.conf ]</div><div class="line"><span class="keyword">then</span></div><div class="line">touch mdev.conf</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/group"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> group ]</div><div class="line"><span class="keyword">then</span></div><div class="line">cat &lt;&lt;EOT &gt; group</div><div class="line">root:*:0:</div><div class="line">nobody:*:65534:</div><div class="line">EOT</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/passwd"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> passwd ]</div><div class="line"><span class="keyword">then</span></div><div class="line">cat &lt;&lt;EOT &gt; passwd</div><div class="line">root::0:0:root:home/root:/bin/sh</div><div class="line">nobody:*:65534:65534:nobody:/nonexitent:/bin/sh</div><div class="line">EOT</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment">###################</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"etc/shadow"</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$TARGET_DIR</span>/etc</div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-e</span> shadow ]</div><div class="line"><span class="keyword">then</span></div><div class="line">touch shadow</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="comment"># =====================================</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"----------END----------"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"by: cuiqingwei 20121106"</span></div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQLite移植到ARM开发板]]></title>
      <url>http://cuiqingwei.github.io/2012/09/07/2012-09-07-SQLite%E7%A7%BB%E6%A4%8D%E5%88%B0ARM%E5%BC%80%E5%8F%91%E6%9D%BF/</url>
      <content type="html"><![CDATA[<h1 id="1-下载sqlite3源代码"><a href="#1-下载sqlite3源代码" class="headerlink" title="1.下载sqlite3源代码"></a>1.下载sqlite3源代码</h1><p><a href="http://www.sqlite.org/sqlite-autoconf-3071400.tar.gz" target="_blank" rel="external">http://www.sqlite.org/sqlite-autoconf-3071400.tar.gz</a></p>
<h1 id="2-解压源代码："><a href="#2-解压源代码：" class="headerlink" title="2.解压源代码："></a>2.解压源代码：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tar xvzf sqlite-autoconf-3071400.tar.gz</div><div class="line"><span class="built_in">cd</span> sqlite-autoconf-3071400</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="3-配置交叉编译到armlinux平台-prefix-home-at91sam9-sqlite-autoconf-3071400-sqlite-arm为目标目录"><a href="#3-配置交叉编译到armlinux平台-prefix-home-at91sam9-sqlite-autoconf-3071400-sqlite-arm为目标目录" class="headerlink" title="3. 配置交叉编译到armlinux平台,prefix=/home/at91sam9/sqlite-autoconf-3071400/sqlite-arm为目标目录:"></a>3. 配置交叉编译到armlinux平台,prefix=/home/at91sam9/sqlite-autoconf-3071400/sqlite-arm为目标目录:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./configure --host=arm-none-linux-gnueabi --prefix=/home/at91sam9/sqlite-autoconf-3071400/sqlite-arm</div><div class="line">./configure --host=arm-linux --prefix=/home/at91sam9/sqlite-autoconf-3071400/sqlite-arm CC=arm-none-linux-gnueabi-gcc</div></pre></td></tr></table></figure>
<h1 id="4-编译"><a href="#4-编译" class="headerlink" title="4.编译:"></a>4.编译:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make</div></pre></td></tr></table></figure>
<h1 id="5-安装"><a href="#5-安装" class="headerlink" title="5.安装:"></a>5.安装:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make install</div></pre></td></tr></table></figure>
<h1 id="6-生成文件："><a href="#6-生成文件：" class="headerlink" title="6.生成文件："></a>6.生成文件：</h1><p>头文件和生成的库文件将安装到/home/at91sam9/sqlite-amalgamation-3.6.1/sqlite-arm目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/sqlite-amalgamation-3.6.1/sqlite-arm/lib</div><div class="line">file libsqlite3.so.0.8.6 							// 看库文件是否是针对mipsel版的</div><div class="line">arm-none-linux-gnueabi-strip libsqlite3.so.0.8.6 	// 优化，处理掉其中的调试信息</div></pre></td></tr></table></figure></p>
<p>用如下命令查看webs执行文件依赖的库文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arm-none-linux-gnueabi-readelf <span class="_">-d</span> libsqlite3.so.0.8.6</div></pre></td></tr></table></figure></p>
<p>其中，arm-none-linux-gnueabi-依你用的交叉编译器而定。</p>
<p>查看得到如下信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">Dynamic section at offset 0x8ae94 contains 28 entries:</div><div class="line">  Tag        Type                         Name/Value</div><div class="line"> 0x00000001 (NEEDED)                     Shared library: [libdl.so.2]</div><div class="line"> 0x00000001 (NEEDED)                     Shared library: [libpthread.so.0]</div><div class="line"> 0x00000001 (NEEDED)                     Shared library: [libgcc_s.so.1]</div><div class="line"> 0x00000001 (NEEDED)                     Shared library: [libc.so.6]</div><div class="line"> 0x0000000e (SONAME)                     Library soname: [libsqlite3.so.0]</div><div class="line"> 0x0000000c (INIT)                       0x51bc</div><div class="line"> 0x0000000d (FINI)                       0x8186c</div><div class="line"> 0x00000019 (INIT_ARRAY)                 0x92330</div><div class="line"> 0x0000001b (INIT_ARRAYSZ)               4 (bytes)</div><div class="line"> 0x0000001a (FINI_ARRAY)                 0x92334</div><div class="line"> 0x0000001c (FINI_ARRAYSZ)               4 (bytes)</div><div class="line"> 0x00000004 (HASH)                       0xd4</div><div class="line"> 0x00000005 (STRTAB)                     0x1ac4</div><div class="line"> 0x00000006 (SYMTAB)                     0x954</div><div class="line"> 0x0000000a (STRSZ)                      4866 (bytes)</div><div class="line"> 0x0000000b (SYMENT)                     16 (bytes)</div><div class="line"> 0x00000003 (PLTGOT)                     0x92f94</div><div class="line"> 0x00000002 (PLTRELSZ)                   1352 (bytes)</div><div class="line"> 0x00000014 (PLTREL)                     REL</div><div class="line"> 0x00000017 (JMPREL)                     0x4c74</div><div class="line"> 0x00000011 (REL)                        0x3074</div><div class="line"> 0x00000012 (RELSZ)                      7168 (bytes)</div><div class="line"> 0x00000013 (RELENT)                     8 (bytes)</div><div class="line"> 0x6ffffffe (VERNEED)                    0x2ff4</div><div class="line"> 0x6fffffff (VERNEEDNUM)                 4</div><div class="line"> 0x6ffffff0 (VERSYM)                     0x2dc6</div><div class="line"> 0x6ffffffa (RELCOUNT)                   704</div><div class="line"> 0x00000000 (NULL)                       0x0</div></pre></td></tr></table></figure></p>
<p>依赖的库如果嵌入式系统lib目录没有，将没有的依赖库文件复制到嵌入式系统的相应lib目录中。</p>
<p>bin文件夹下的sqlite3，是sqlite可执行应用程序，下载到板子Linux系统下的/bin目录或者/usr/bin目录下，并添加文件可执行权限。在板子Linux系统命令行下执行：<br>libsqlite3.so和libsqlite3.so.0都是libsqlite3.so.0.8.6的软链接文件。真正需要下载到板子目录/lib下的动态libsqlite3.so.0.8.6。</p>
<p>要成功在嵌入式系统运行sqlite3，需要把./lib下的动态链接库下载到板子上。否则会有无法找到动态链接库libsqlite3.so.0的错误提示。</p>
<p>下载到板子后，还需对它建立软链接文件，因为可执行程序寻找的动态链接库的名字为libsqlite3.so.0，在嵌入式系统运行如下指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ln <span class="_">-s</span> /lib/libsqlite3.so.0.8.6  /lib/libsqlite3.so.0</div><div class="line">chmod +x sqlite3</div><div class="line">./sqlite3</div></pre></td></tr></table></figure></p>
<p>打印显示如下信息，代表成功运行！<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ./sqlite3</span></div><div class="line">SQLite version 3.7.14 2012-09-03 15:42:36</div><div class="line">Enter <span class="string">".help"</span> <span class="keyword">for</span> instructions</div><div class="line">Enter SQL statements terminated with a <span class="string">";"</span></div></pre></td></tr></table></figure></p>
<h1 id="7-写自己的数据库应用"><a href="#7-写自己的数据库应用" class="headerlink" title="7. 写自己的数据库应用"></a>7. 写自己的数据库应用</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//error sqlite3_exec( db , sql , 0 , callback , &amp;zErrMsg );</span></div><div class="line"></div><div class="line">＃include &lt;stdio.h&gt;</div><div class="line">＃include &lt;sqlite3.h&gt;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">callback</span><span class="params">(<span class="keyword">void</span> \*NotUsed, <span class="keyword">int</span> argc, <span class="keyword">char</span> \*\*argv, <span class="keyword">char</span> \*\*azColName)</span></span>&#123;</div><div class="line">  <span class="keyword">int</span> i;</div><div class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s = %s\n"</span>, azColName[i], argv[i] ? argv[i] : <span class="string">"NULL"</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> \*\*argv)</span></span>&#123;</div><div class="line">  sqlite3 \*db;</div><div class="line">  <span class="keyword">char</span> \*zErrMsg = <span class="number">0</span>;</div><div class="line">  <span class="keyword">int</span> rc;</div><div class="line"></div><div class="line">  <span class="keyword">if</span>( argc!=<span class="number">2</span> )&#123;</div><div class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Usage: %s DATABASE \n"</span>, argv[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line">  rc = sqlite3_open(argv[<span class="number">1</span>], &amp;db);</div><div class="line">  <span class="keyword">if</span>( rc )&#123;</div><div class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Can't open database: %s\n"</span>, sqlite3_errmsg(db));</div><div class="line">    sqlite3_close(db);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">char</span> \*sql = <span class="string">" CREATE TABLE SensorData(               \</span></div><div class="line">                        ID       INTEGER PRIMARY KEY,  \</div><div class="line">                        SensorID INTEGER,              \</div><div class="line">                        SiteNum  INTEGER,              \</div><div class="line">                        Time     VARCHAR(12),          \</div><div class="line">                        SensorParameter REAL           \</div><div class="line">                );";</div><div class="line">   <span class="comment">//使用sql字符串指定的sql语言 创建数据表SensorData</span></div><div class="line"></div><div class="line">    sqlite3_exec( db , sql , callback , <span class="number">0</span> ,  &amp;zErrMsg );</div><div class="line"></div><div class="line">   <span class="comment">//插入数据到数据表</span></div><div class="line"></div><div class="line">  sql = <span class="string">"INSERT INTO 'SensorData' VALUES( 0 , 1 , 1 ,  '200605011206', 18.9 );"</span> ;</div><div class="line"></div><div class="line">   <span class="comment">//error sqlite3_exec( db , sql , 0 , callback , &amp;zErrMsg );</span></div><div class="line">    sqlite3_exec( db , sql , callback , <span class="number">0</span> ,  &amp;zErrMsg );</div><div class="line"></div><div class="line">   <span class="comment">//插入数据到数据表</span></div><div class="line">  sql = <span class="string">"INSERT INTO  'SensorData'  VALUES(1 , 1 , 1 , '200605011306', 16.4 );"</span> ;</div><div class="line"></div><div class="line">   <span class="comment">//error sqlite3_exec( db , sql , 0 , callback , &amp;zErrMsg );</span></div><div class="line">    sqlite3_exec( db , sql , callback , <span class="number">0</span> ,  &amp;zErrMsg );</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">  <span class="keyword">int</span> nrow = <span class="number">0</span>, ncolumn = <span class="number">0</span>;</div><div class="line">  <span class="keyword">char</span> \*\*azResult;</div><div class="line">  <span class="keyword">int</span> i;</div><div class="line"></div><div class="line">  <span class="comment">//从数据表查询数据</span></div><div class="line">  sql = <span class="string">"SELECT \* FROM SensorData "</span>;</div><div class="line">  sqlite3_get_table( db , sql , &amp;azResult , &amp;nrow , &amp;ncolumn , &amp;zErrMsg );</div><div class="line"></div><div class="line">  <span class="built_in">printf</span>( <span class="string">"row:%d column=%d"</span> , nrow , ncolumn );</div><div class="line">  <span class="built_in">printf</span>( <span class="string">"The result of querying is :"</span> );</div><div class="line">  <span class="keyword">for</span>( i=<span class="number">0</span> ; i&lt;( nrow + <span class="number">1</span> ) * ncolumn ; i++ )&#123;</div><div class="line">     <span class="built_in">printf</span>( <span class="string">"azResult[%d] = %s \r\n"</span>, i , azResult[i] );</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  sqlite3_free_table( azResult );</div><div class="line"></div><div class="line">  <span class="keyword">if</span>( rc!=SQLITE_OK )&#123;</div><div class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"SQL error: %s\n"</span>, zErrMsg);</div><div class="line">        sqlite3_free(zErrMsg);</div><div class="line">  &#125;</div><div class="line">  sqlite3_close(db);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="8-编写Makefile"><a href="#8-编写Makefile" class="headerlink" title="8. 编写Makefile"></a>8. 编写Makefile</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">prefix=/home/at91sam9/sqlite-amalgamation-3.6.1/sqlite-arm</div><div class="line">exec_prefix=<span class="variable">$&#123;prefix&#125;</span></div><div class="line">libdir=<span class="variable">$&#123;exec_prefix&#125;</span>/lib</div><div class="line">includedir=<span class="variable">$&#123;prefix&#125;</span>/include</div><div class="line">Libs = -L<span class="variable">$&#123;libdir&#125;</span> -lsqlite3 -lpthread</div><div class="line">Cflags = -I<span class="variable">$&#123;includedir&#125;</span></div><div class="line">CROSS_COMPILE = arm-none-linux-gnueabi-</div><div class="line">CC = $(CROSS_COMPILE)gcc</div><div class="line">LD = $(CROSS_COMPILE)ld</div><div class="line">radiodb: radiodb.o</div><div class="line">        $(CC) $^ $(Libs)  -o <span class="variable">$@</span></div><div class="line">radiodb.o:radiodb.c</div><div class="line">        $(CC) $(Cflags) -c $^ -o <span class="variable">$@</span></div><div class="line">clean:</div><div class="line">        rm -rf radiodb  *.o</div><div class="line"><span class="keyword">in</span>:</div><div class="line">        cp radiodb /srv/nfs/sqlite</div></pre></td></tr></table></figure>
<p>注意makefile里的红色字体内容可以在sqlite安装目录的lib下的pkconfig下的文件查得。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[goAhead2.5嵌入式web服务器移植]]></title>
      <url>http://cuiqingwei.github.io/2012/09/07/2012-09-07-goAhead2-5%E5%B5%8C%E5%85%A5%E5%BC%8Fweb%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A7%BB%E6%A4%8D/</url>
      <content type="html"><![CDATA[<h1 id="1-GoAhead-Web服务器介绍"><a href="#1-GoAhead-Web服务器介绍" class="headerlink" title="1. GoAhead Web服务器介绍"></a>1. GoAhead Web服务器介绍</h1><p>goAhead Web服务器，小巧、精致，提供了值得称道的性能，特别适合于嵌入式系统，因此，在很多嵌入式产品如路由器中都用到了goAhead作为嵌入式web服务器。<br><a id="more"></a><br>goAhead Web服务器，具有如下特点：<br>    支持ASP；<br>    嵌入式的JavaScript，即Ejscript；<br>    支持内存中的CGI处理；<br>    快速响应，每秒中可处理超过65个请求；<br>    符合HTTP1.0/HTTP1.1标准；<br>    拥有众多扩展API，方便用户开发；<br>    支持SSL3.0（Secure Sockets Layer），如MatrixSSL（最新版本为：MatrixSSL 3-2）；<br>    支持用户群组管理；<br>    支持DAA访问认证；<br>    占用很小内存，如果不包含SSL，仅要求60K内存；包含SSL，要求500K内存；<br>    Web页面可存在于ROM或文件系统中；<br>    支持多种操作系统，如linux、wince、vxworks等等；</p>
<p>当前最新版本为：WebServer 2.5，本次移植即是这个版本。</p>
<h1 id="2-获取Goahead源码包"><a href="#2-获取Goahead源码包" class="headerlink" title="2. 获取Goahead源码包"></a>2. 获取Goahead源码包</h1><p>地址为：<br><a href="http://velep.com/archives/321.html" target="_blank" rel="external">http://velep.com/archives/321.html</a><br><a href="http://velep.com/download/webs-2-5.tar.gz" target="_blank" rel="external">http://velep.com/download/webs-2-5.tar.gz</a><br>当前最新版本为：WebServer 2.5</p>
<p>下载后，解压压缩包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#tar -xzvf webs-2-5.tar.gz</span></div><div class="line"><span class="comment">#cd webs-2-5/</span></div></pre></td></tr></table></figure></p>
<h1 id="3-goAhead源码结构"><a href="#3-goAhead源码结构" class="headerlink" title="3. goAhead源码结构"></a>3. goAhead源码结构</h1><p>进入goAhead的源码目录webs-2-5/，很容易了解其源码结构。<br>webs-2-5/</p>
<pre><code>| 各种OS移植子目录，分别有：CE、ECOS、LINUX、LYNX、MACOSX、NW、QNX4、VXWORKS、WIN

| utils：当前只有webcomp.c，即网页编译器

| www：存放web网页

| wwwdemo：goAhead带的demo网页，里面包含了goAhead的一些文档

| goAhead服务器源程序文件(C程序文件)
</code></pre><p>从上面可以看到，goAhead支持window系统的，有兴趣的可以在PC机上移植试试。<br>得到源码后，建议用source insight等工具建一个goAhead工程，便于代码的阅读或者查询API函数等。</p>
<h1 id="4-goAhead自带帮助文档"><a href="#4-goAhead自带帮助文档" class="headerlink" title="4. goAhead自带帮助文档"></a>4. goAhead自带帮助文档</h1><p>进入goAhead的wwwdemo目录，找到Webs25GettingStarted.pdf文件，这就是goAhead带的帮助文档，移植前，建议先看下。</p>
<h1 id="5-GoAhead-Web服务器移植到arm-linux步骤"><a href="#5-GoAhead-Web服务器移植到arm-linux步骤" class="headerlink" title="5. GoAhead Web服务器移植到arm-linux步骤"></a>5. GoAhead Web服务器移植到arm-linux步骤</h1><p>在获取源码包并解压后，现在把goAhead移植到arm-linux中，arm指at91sam9g35，linux-2.6.39。<br>移植步骤很简单，基本上在编译阶段不会出现什么问题，而且这几个步骤在网上诸多博客中都有说明。但在测试服务器的时候，遇到了问题，在浏览器死活都打不开网页，不过，最终还是解决了，请看下面说明。</p>
<h3 id="5-1-修改Makefile文件"><a href="#5-1-修改Makefile文件" class="headerlink" title="5.1 修改Makefile文件"></a>5.1 修改Makefile文件</h3><pre><code>进入goAhead源码下的LINUX目录，用UE打开Makefile文件。

Makefile文件默认是虚拟机的本身的GCC编译器，因此，指定其交叉编译器，注意，交叉编译器的版本应与你的文件系统用的交叉编译器一致。

在Makefile文件开头添加如下信息：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># add by: cuiqingwei</span></div><div class="line">CROSS_COMPILE   =/opt/arm-2007q1/bin/arm-none-linux-gnueabi-</div><div class="line">AS      = $(CROSS_COMPILE)as  </div><div class="line">LD      = $(CROSS_COMPILE)ld  </div><div class="line">CC      = $(CROSS_COMPILE)gcc  </div><div class="line">CPP     = $(CC) -E  </div><div class="line">AR      = $(CROSS_COMPILE)ar  </div><div class="line">NM      = $(CROSS_COMPILE)nm  </div><div class="line">STRIP   = $(CROSS_COMPILE)strip  </div><div class="line">OBJCOPY = $(CROSS_COMPILE)objcopy  </div><div class="line">OBJDUMP = $(CROSS_COMPILE)objdump</div></pre></td></tr></table></figure>
<pre><code>同时把Makefile中的语句：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">matrixsslDir:=$(shell ls <span class="_">-d</span> ../matrixssl-3-1*/)</div></pre></td></tr></table></figure>
<pre><code>屏蔽掉。这一句是用来启动SSL matrixssl的，具体参考Webs25GettingStarted.pdf文档中的说明（Page8）。
</code></pre><h3 id="5-2-修改LINUX-main-c文件：initWebs-函数中指定IP地址"><a href="#5-2-修改LINUX-main-c文件：initWebs-函数中指定IP地址" class="headerlink" title="5.2 修改LINUX/main.c文件：initWebs()函数中指定IP地址"></a>5.2 修改LINUX/main.c文件：initWebs()函数中指定IP地址</h3><pre><code>由于LINUX/main.c文件：initWebs()函数中原程序无法正确获得服务器IP；因此置服务器一个静态IP地址。

修改如下：
</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> *	Define the local Ip address, host name, default home page and the</div><div class="line"> *	root web directory.</div><div class="line"> */</div><div class="line"><span class="comment">/* del by: cuiqingwei</span></div><div class="line">	if (gethostname(host, sizeof(host)) &lt; 0) &#123;</div><div class="line">		error(E_L, E_LOG, T("Can't get hostname"));</div><div class="line">		return -1;</div><div class="line">	&#125;</div><div class="line">	if ((hp = gethostbyname(host)) == NULL) &#123;</div><div class="line">		error(E_L, E_LOG, T("Can't get host address"));</div><div class="line">		return -1;</div><div class="line">	&#125;</div><div class="line">	memcpy((char *) &amp;intaddr, (char *) hp-&gt;h_addr_list[0],</div><div class="line">		(size_t) hp-&gt;h_length);</div><div class="line">*/</div><div class="line">	intaddr.s_addr = inet_addr(T(<span class="string">"192.168.1.159"</span>));     <span class="comment">// add by: cuiqnigwei</span></div></pre></td></tr></table></figure>
<h3 id="5-3-编译：make-clean-make"><a href="#5-3-编译：make-clean-make" class="headerlink" title="5.3 编译：make clean;make"></a>5.3 编译：make clean;make</h3><pre><code>在shell中进入LINUX目录下，执行命令
make clean
make
即可编译通过。

编译通过后，在LINUX目录下，得到两文件，分别为：libwebs.a和webs可执行文件。用如下命令查看webs执行文件依赖的库文件：

arm-none-linux-gnueabi-readelf -a webs &gt;a.txt

其中，arm-none-linux-gnueabi-依你用的交叉编译器而定。

查看得到a.txt,如下信息：
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">Program Headers:</div><div class="line">  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align</div><div class="line">  EXIDX          0x00f074 0x00017074 0x00017074 0x00008 0x00008 R   0x4</div><div class="line">  PHDR           0x000034 0x00008034 0x00008034 0x00100 0x00100 R E 0x4</div><div class="line">  INTERP         0x000134 0x00008134 0x00008134 0x00013 0x00013 R   0x1</div><div class="line">	  [Requesting program interpreter: /lib/ld-linux.so.3]</div><div class="line">  LOAD           0x000000 0x00008000 0x00008000 0x0f080 0x0f080 R E 0x8000</div><div class="line">  LOAD           0x00f080 0x0001f080 0x0001f080 0x0063c 0x007e0 RW  0x8000</div><div class="line">  DYNAMIC        0x00f08c 0x0001f08c 0x0001f08c 0x000e8 0x000e8 RW  0x4</div><div class="line">  NOTE           0x000148 0x00008148 0x00008148 0x00020 0x00020 R   0x4</div><div class="line">  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x4</div><div class="line">....</div><div class="line">Dynamic section at offset 0xf08c contains 24 entries:</div><div class="line">  Tag        Type                         Name/Value</div><div class="line"> 0x00000001 (NEEDED)                     Shared library: [libc.so.6]</div><div class="line"> 0x0000000c (INIT)                       0x8ddc</div><div class="line"> 0x0000000d (FINI)                       0x158f0</div><div class="line"> 0x00000019 (INIT_ARRAY)                 0x1f080</div><div class="line"> 0x0000001b (INIT_ARRAYSZ)               4 (bytes)</div><div class="line"> 0x0000001a (FINI_ARRAY)                 0x1f084</div><div class="line"> 0x0000001c (FINI_ARRAYSZ)               4 (bytes)</div><div class="line"> 0x00000004 (HASH)                       0x8168</div><div class="line"> 0x00000005 (STRTAB)                     0x886c</div><div class="line"> 0x00000006 (SYMTAB)                     0x83ac</div><div class="line"> 0x0000000a (STRSZ)                      615 (bytes)</div><div class="line"> 0x0000000b (SYMENT)                     16 (bytes)</div><div class="line"> 0x00000015 (DEBUG)                      0x0</div><div class="line"> 0x00000003 (PLTGOT)                     0x1f174</div><div class="line"> 0x00000002 (PLTRELSZ)                   584 (bytes)</div><div class="line"> 0x00000014 (PLTREL)                     REL</div><div class="line"> 0x00000017 (JMPREL)                     0x8b94</div><div class="line"> 0x00000011 (REL)                        0x8b8c</div><div class="line"> 0x00000012 (RELSZ)                      8 (bytes)</div><div class="line"> 0x00000013 (RELENT)                     8 (bytes)</div><div class="line"> 0x6ffffffe (VERNEED)                    0x8b6c</div><div class="line"> 0x6fffffff (VERNEEDNUM)                 1</div><div class="line"> 0x6ffffff0 (VERSYM)                     0x8ad4</div><div class="line"> 0x00000000 (NULL)                       0x0</div></pre></td></tr></table></figure>
<pre><code>从上面可看到，webs依赖ld-linux.so.3和libc.so.6两个动态文件，查看文件系统中lib目录下是否包含了这动态文件，如果没有，则需从交叉编译器安装路径中获取这个动态库文件到文件系统lib目录中。
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /opt/arm-2007q1</div></pre></td></tr></table></figure>
<pre><code>查找文件
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find -name ld-linux.so.3</div></pre></td></tr></table></figure>
<pre><code>得出结果
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">./arm-none-linux-gnueabi/libc/thumb2/lib/ld-linux.so.3</div><div class="line">./arm-none-linux-gnueabi/libc/lib/ld-linux.so.3</div><div class="line">./arm-none-linux-gnueabi/libc/armv4t/lib/ld-linux.so.3</div><div class="line">./arm-none-linux-gnueabi/libc/marvell<span class="_">-f</span>/lib/ld-linux.so.3</div></pre></td></tr></table></figure>
<pre><code>复制ld-linux.so.3
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp arm-none-linux-gnueabi/libc/armv4t/lib/ld-linux.so.3 开发板/lib</div></pre></td></tr></table></figure>
<pre><code>查找文件
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find -name libc.so.6</div></pre></td></tr></table></figure>
<pre><code>得出结果
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">./arm-none-linux-gnueabi/libc/thumb2/lib/libc.so.6</div><div class="line">./arm-none-linux-gnueabi/libc/lib/libc.so.6</div><div class="line">./arm-none-linux-gnueabi/libc/armv4t/lib/libc.so.6</div><div class="line">./arm-none-linux-gnueabi/libc/marvell<span class="_">-f</span>/lib/libc.so.6</div><div class="line">复制libc.so.6</div><div class="line">cp arm-none-linux-gnueabi/libc/armv4t/lib/libc.so.6 开发板/lib</div></pre></td></tr></table></figure>
<h3 id="5-4-测试webs服务器"><a href="#5-4-测试webs服务器" class="headerlink" title="5.4 测试webs服务器"></a>5.4 测试webs服务器</h3><pre><code>用FTP把webs执行文件传到目标板中，本人把其放到了/mnt/webs/目录中。

配置开发版IP地址
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ifconfig eth0 192.168.1.159</div></pre></td></tr></table></figure>
<pre><code>挂载NFS
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount 192.168.1.158:/srv/nfs /mnt</div></pre></td></tr></table></figure>
<pre><code>运行web服务
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./webs &amp;</div></pre></td></tr></table></figure>
<pre><code>杀死web服务
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">killall webs</div></pre></td></tr></table></figure>
<pre><code>在PC机用IE浏览器浏览goAhead服务器的网页，输入http://192.168.1.159:8080/

运行webdemo服务
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./webs -demo &amp;</div></pre></td></tr></table></figure>
<pre><code>杀死web服务
</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">killall webs</div></pre></td></tr></table></figure>
<pre><code>需要注意的是，在goAhead2.5版本中，web网页的根目录是在webs程序的../www或../wwwdemo(webs执行时带-demo参数)中，
这一点可查看LINUX/main.c    文件中190行处代码和注释。因此，把goAhead源码目录下的www和wwwdemo两文件夹传用FTP传到/mnt/目录下。

在PC机用IE浏览器浏览goAhead服务器的网页，输入http://192.168.1.159:8080/

192.168.1.159是目标板的IP地址即goAhead服务器的地址，8080是goAhead用的端口号，这是默认的端口号，定义在webs.h文件。
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[jffs2根文件系统制作]]></title>
      <url>http://cuiqingwei.github.io/2012/09/07/2012-09-07-jffs2%E6%A0%B9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%88%B6%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h1 id="1．建立目录"><a href="#1．建立目录" class="headerlink" title="1．建立目录"></a>1．建立目录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gedit creatRootfs.sh</div></pre></td></tr></table></figure>
<p>creatRootfs.sh 内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs</div><div class="line"><span class="built_in">echo</span> <span class="string">"------Create rootfs directons......"</span></div><div class="line">mkdir jffs2</div><div class="line"><span class="built_in">cd</span> jffs2</div><div class="line"><span class="built_in">echo</span> <span class="string">"--------Create root,dev......"</span></div><div class="line">mkdir root dev etc bin sbin mnt sys proc lib home tmp var usr</div><div class="line">mkdir usr/sbin usr/bin usr/lib usr/modules</div><div class="line">mkdir etc/init.d</div><div class="line">mkdir lib/modules</div><div class="line">chmod 777 tmp</div><div class="line"><span class="built_in">cd</span> ..</div><div class="line"><span class="built_in">echo</span> <span class="string">"-------make direction done---------"</span></div><div class="line"><span class="comment"># by: cuiqingwei 20120913</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/shell/mdk9261</div><div class="line">./creatRootfs.sh</div></pre></td></tr></table></figure></p>
<h1 id="2-创建设备dev文件"><a href="#2-创建设备dev文件" class="headerlink" title="2.创建设备dev文件"></a>2.创建设备dev文件</h1><p>mdev 是通过 init 进程来启动的，在使用 mdev 构造 /dev 目录之前，init 至少要用到设备文件/dev/console、 /dev/null ，所以需要事先建立这些设备文件:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gedit makedevs.sh</div></pre></td></tr></table></figure></p>
<p>makedevs.sh 内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line"><span class="built_in">cd</span> dev</div><div class="line">mknod -m 600 mem		c 1 1</div><div class="line">mknod -m 666 null		c 1 3</div><div class="line">mknod -m 666 zero		c 1 5</div><div class="line">mknod -m 644 random		c 1 8</div><div class="line">mknod -m 600 tty0		c 4 0</div><div class="line">mknod -m 600 tty1		c 4 1</div><div class="line">mknod -m 600 ttyS0		c 4 64</div><div class="line">mknod -m 600 ttyS1		c 4 65</div><div class="line">mknod -m 600 tty		c 5 0</div><div class="line">mknod -m 600 console	c 5 1</div><div class="line">mknod -m 755 mmcblk0    b 179 0</div><div class="line">mknod -m 755 mmcblk0p1  b 179 1</div><div class="line">chmod 644 random</div><div class="line">chmod 600 tty0 tty1 ttyS0</div><div class="line">ln <span class="_">-s</span> /proc/self/fd fd</div><div class="line">ln <span class="_">-s</span> fd/0 stdin</div><div class="line">ln <span class="_">-s</span> fd/0 stdout</div><div class="line">ln <span class="_">-s</span> fd/0 stderr</div><div class="line"><span class="comment"># by: cuiqingwei 20120913</span></div></pre></td></tr></table></figure></p>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/shell/mdk9261</div><div class="line">./makedevs.sh</div></pre></td></tr></table></figure></p>
<h1 id="3-建立配置文件"><a href="#3-建立配置文件" class="headerlink" title="3.建立配置文件"></a>3.建立配置文件</h1><h3 id="3-1-profile文件"><a href="#3-1-profile文件" class="headerlink" title="3.1.profile文件"></a>3.1.profile文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">gedit etc/profile</div></pre></td></tr></table></figure>
<p>添加如下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment">#/etc/profile:system-wide .profile file for the Bourne shell</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Processing /etc/profile ... "</span></div><div class="line"><span class="comment"># no-op</span></div><div class="line"><span class="comment"># Set search library path</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Set search library path in /etc/profile"</span></div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/lib:/usr/lib</div><div class="line"><span class="comment"># host name</span></div><div class="line">HOSTNAME=`/bin/hostname`</div><div class="line"><span class="built_in">export</span> HOSTNAME</div><div class="line"><span class="comment"># Set user path</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Set user path in /etc/profile"</span></div><div class="line">PATH=/bin:/sbin:/usr/bin:/usr/sbin</div><div class="line"><span class="built_in">export</span> PATH</div><div class="line"><span class="comment"># alias</span></div><div class="line"><span class="built_in">alias</span> ll=<span class="string">"ls -al"</span></div><div class="line"><span class="comment"># Prompt</span></div><div class="line">USER=<span class="string">"`id -un`"</span></div><div class="line">LOGNAME=<span class="variable">$USER</span></div><div class="line">PS1=<span class="string">'[\u@\h \W]\$'</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Welcome to Linux"</span></div><div class="line"><span class="comment"># by: cuiqingwei 20120913</span></div></pre></td></tr></table></figure></p>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 775 etc/profile</div></pre></td></tr></table></figure></p>
<h3 id="3-2-etc-inittab-文件"><a href="#3-2-etc-inittab-文件" class="headerlink" title="3.2.etc/inittab 文件"></a>3.2.etc/inittab 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">gedit etc/inittab</div></pre></td></tr></table></figure>
<p>添加如下内容:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment"># /etc/inittab</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Copyright (C) 2009 Edutech &lt;cuiqingwei@gmail.com&gt;</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Note: BusyBox init doesn't support runlevels.  The runlevels field is</span></div><div class="line"><span class="comment"># completely ignored by BusyBox init. If you want runlevels, use</span></div><div class="line"><span class="comment"># sysvinit.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Format for each entry: &lt;id&gt;:&lt;runlevels&gt;:&lt;action&gt;:&lt;process&gt;</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># id        == tty to run on, or empty for /dev/console</span></div><div class="line"><span class="comment"># runlevels == ignored</span></div><div class="line"><span class="comment"># action    == one of sysinit, respawn, askfirst, wait, and once</span></div><div class="line"><span class="comment"># process   == program to run</span></div><div class="line"><span class="comment"># now run any rc scripts</span></div><div class="line">::sysinit:/etc/init.d/rcS</div><div class="line"><span class="comment"># 不需要设置登录验证</span></div><div class="line"><span class="comment">#console::respawn:-/bin/sh    </span></div><div class="line"><span class="comment"># 需要设置登录验证 Put a getty on the serial port</span></div><div class="line">ttyS0::askfirst:/sbin/getty -L ttyS0 115200 vt100</div><div class="line"><span class="comment"># Logging</span></div><div class="line"><span class="comment">#null::respawn:/sbin/syslogd -n -m 0</span></div><div class="line"><span class="comment">#null::respawn:/sbin/klogd -n</span></div><div class="line"><span class="comment"># ctrl+alt+del restart</span></div><div class="line">::ctrlaltdel:/sbin/reboot</div><div class="line"><span class="comment"># restart init process</span></div><div class="line">::restart:/sbin/init</div><div class="line"><span class="comment"># Stuff to do before rebooting</span></div><div class="line"><span class="comment">#null::shutdown:/usr/bin/killall klogd</span></div><div class="line"><span class="comment">#null::shutdown:/usr/bin/killall syslogd</span></div><div class="line">null::shutdown:/bin/umount <span class="_">-a</span> -r</div><div class="line">null::shutdown:/sbin/swapoff <span class="_">-a</span></div><div class="line"><span class="comment"># by: cuiqingwei 20120913</span></div></pre></td></tr></table></figure></p>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 775 etc/inittab</div></pre></td></tr></table></figure></p>
<p>上面的这个inittab文件决定的启动流程是:<br>    (1) 执行“/etc/init.d/rcS”脚本；<br>    (2) 执行“/etc/rc.local”脚本；<br>    (3) 执行“-/bin/sh”交互程序，进入交换界面；</p>
<h3 id="3-3-etc-fstab文件"><a href="#3-3-etc-fstab文件" class="headerlink" title="3.3.etc/fstab文件"></a>3.3.etc/fstab文件</h3><p>文件/etc/fstab存放的是系统中的文件系统信息。当正确的设置了该 文件，则可以通过”mount /directoryname”命令来加载一个文件系统，或mount -a来加载该文件中所有文件系统。每种文件系统都对应一个独立的行，每行中的字段都有空格或tab键分开。同时fsck、mount、umount的等命 令都利用该程序。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">gedit etc/fstab</div></pre></td></tr></table></figure></p>
<p>fstab文件内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># /etc/fstab: static file system information.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#&lt;File system&gt; 	&lt;mount pt&gt;		&lt;type&gt;	&lt;options&gt;		&lt;dump&gt;	&lt;pass&gt;</span></div><div class="line">proc  			/proc 			proc  	defaults 		0 		0</div><div class="line">tmpfs            /var           tmpfs    defaults       0       0</div><div class="line">tmpfs            /tmp           tmpfs    defaults       0       0</div><div class="line"><span class="comment"># by: cuiqingwei 20120913</span></div></pre></td></tr></table></figure></p>
<p>注意： 已单独mount了的文件系统，就不要出现在/etc/fstab文件中，以免使用mount -a时把先前已经mount上的文件系统被覆盖了。</p>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 775 etc/fstab</div></pre></td></tr></table></figure></p>
<h3 id="3-4-etc-init-d-rcS文件"><a href="#3-4-etc-init-d-rcS文件" class="headerlink" title="3.4.etc/init.d/rcS文件"></a>3.4.etc/init.d/rcS文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">gedit etc/init.d/rcS</div></pre></td></tr></table></figure>
<p>添加如下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">" Exec rcS  "</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line">runlevel=S</div><div class="line"><span class="built_in">export</span> runlevel</div><div class="line"><span class="comment"># Host name</span></div><div class="line">/bin/hostname mdk9261</div><div class="line"><span class="comment"># Mount /proc if not</span></div><div class="line">[ <span class="_">-d</span> <span class="string">"/proc/1"</span> ] || mount /proc</div><div class="line"><span class="built_in">echo</span> <span class="string">"***********mount all************"</span></div><div class="line">/bin/mount -av</div><div class="line"><span class="comment"># Read the busybox docs: mdev.txt</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*********Starting mdev**********"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"This may take some time ..."</span></div><div class="line">/bin/mount -t tmpfs mdev /dev</div><div class="line">/bin/mount -t sysfs sysfs /sys</div><div class="line">/bin/mkdir /dev/pts</div><div class="line">/bin/mount -t devpts devpts /dev/pts</div><div class="line">/bin/<span class="built_in">echo</span> /sbin/mdev &gt; /proc/sys/kernel/hotplug</div><div class="line">mdev <span class="_">-s</span></div><div class="line"><span class="comment"># When mdev is mounted, /sys can be umounted</span></div><div class="line"><span class="comment">#/bin/umount /sys</span></div><div class="line"><span class="comment"># Start local services</span></div><div class="line">/etc/init.d/rc.local</div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*                              *"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*   rootfs for mdk9261         *"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*                              *"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*     www.educationtek.com     *"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*                              *"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*         2012-09-14           *"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"*                              *"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"********************************"</span></div><div class="line"><span class="comment"># by: cuiqingwei 20120913</span></div></pre></td></tr></table></figure></p>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 777 etc/init.d/rcS</div></pre></td></tr></table></figure></p>
<h3 id="3-5-etc-rc-local文件"><a href="#3-5-etc-rc-local文件" class="headerlink" title="3.5.etc/rc.local文件"></a>3.5.etc/rc.local文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">gedit etc/init.d/rc.local</div></pre></td></tr></table></figure>
<p>添加如下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"******Start Local Services******"</span></div><div class="line">ifconfig lo up</div><div class="line"><span class="comment">#echo "ifconfig eth0 192.168.1.159"</span></div><div class="line"><span class="comment">#ifconfig eth0 192.168.1.159</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"********Starting telnetd********"</span></div><div class="line">telnetd</div><div class="line"><span class="comment"># by: cuiqingwei 20120913</span></div></pre></td></tr></table></figure></p>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 775 etc/init.d/rc.local</div></pre></td></tr></table></figure></p>
<h3 id="3-6-mdev-conf-建立空文件mdev-conf"><a href="#3-6-mdev-conf-建立空文件mdev-conf" class="headerlink" title="3.6.mdev.conf,建立空文件mdev.conf"></a>3.6.mdev.conf,建立空文件mdev.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">touch etc/mdev.conf</div></pre></td></tr></table></figure>
<p>mdev 会在/etc目录下找mdev的配置文件: mdev.conf. 如果该文件不存在，那么在执行mdev –s这个命令时，会提示找不到mdev.conf。我们不需要mdev规则，所以只是touch生成一个空文件就OK了。当然也可以根据mdev的规则来 编写mdev.conf。我把所有配置文件都是在/mnt/etc下，而不是/etc，后面解释这么做的原因。</p>
<h3 id="3-7-etc-group-文件"><a href="#3-7-etc-group-文件" class="headerlink" title="3.7.etc/group 文件"></a>3.7.etc/group 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">gedit etc/group</div></pre></td></tr></table></figure>
<p>添加如下内容:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root:*:0:</div><div class="line">nobody:*:65534:</div></pre></td></tr></table></figure></p>
<h3 id="3-8-etc-passwd-文件"><a href="#3-8-etc-passwd-文件" class="headerlink" title="3.8.etc/passwd 文件"></a>3.8.etc/passwd 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">gedit etc/passwd</div></pre></td></tr></table></figure>
<p>添加如下内容:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root::0:0:root:/root:/bin/sh</div><div class="line">nobody:*:65534:65534:nobody:/nonexitent:/bin/sh</div></pre></td></tr></table></figure></p>
<h3 id="3-9-etc-shadow-空文件"><a href="#3-9-etc-shadow-空文件" class="headerlink" title="3.9.etc/shadow 空文件"></a>3.9.etc/shadow 空文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs/jffs2</div><div class="line">touch etc/shadow</div></pre></td></tr></table></figure>
<h1 id="4-编译busybox"><a href="#4-编译busybox" class="headerlink" title="4.编译busybox"></a>4.编译busybox</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs</div><div class="line">wget http://busybox.net/downloads/busybox-1.19.4.tar.bz2</div><div class="line">tar -xjvf busybox-1.19.4.tar.bz2</div><div class="line"><span class="built_in">cd</span> busybox-1.19.4</div><div class="line">gedit Makefile</div></pre></td></tr></table></figure>
<p>修改下面两行<br>ARCH ?= arm<br>CROSS_COMPILE ?=/opt/arm-2007q1/bin/arm-none-linux-gnueabi-  (这个视你的交叉编译工具所在路径而定)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">make menuconfig (或 make xconfig)</div><div class="line"></div><div class="line">      Busybox Settings  ---&gt;</div><div class="line"></div><div class="line">           Build Options  ---&gt;</div><div class="line">  | +-------------------------------------------------------------------------+ |</div><div class="line">  | | [*] Build BusyBox as a static binary (no shared libs)                   | |</div><div class="line">  | | [ ] Force NOMMU build                                                   | |</div><div class="line">  | | [*] Build with Large File Support (<span class="keyword">for</span> accessing files &gt; 2 GB)          | |</div><div class="line">  | | ()  Cross Compiler prefix                                               | |</div><div class="line">  | | ()  Additional CFLAGS                                                   | |</div><div class="line"></div><div class="line">			Installation Options  ---&gt;                                                   </div><div class="line">  | | [*] Don<span class="string">'t use /usr                                                      | |</span></div><div class="line">  | | (./_install) BusyBox installation prefix         (进入这一项)</div></pre></td></tr></table></figure></p>
<p>填入 /home/at91sam9/mdk9261/rootfs/jffs2<br>这样编译好的busybox,安装以后就会自动保存到 /home/at91sam9/mdk9261/rootfs/jffs2 目录下，不用复制了。</p>
<p>保存退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make</div></pre></td></tr></table></figure></p>
<p>使用arm-none-linux-gnueabi-gcc编译时会发生缺少头文件ubi-user.h的错误：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">miscutils/ubi_tools.c:63:26: error: mtd/ubi-user.h: No such file or directory  </div><div class="line">miscutils/ubi_tools.c: In <span class="keyword">function</span> <span class="string">'ubi_tools_main'</span>:  </div><div class="line">miscutils/ubi_tools.c:133: error: <span class="string">'UBI_DEV_NUM_AUTO'</span> undeclared (first use <span class="keyword">in</span> this <span class="keyword">function</span>)  </div><div class="line">miscutils/ubi_tools.c:133: error: (Each undeclared identifier is reported only once  </div><div class="line">miscutils/ubi_tools.c:133: error: <span class="keyword">for</span> each <span class="keyword">function</span> it appears in.)  </div><div class="line">miscutils/ubi_tools.c:134: error: <span class="string">'UBI_VOL_NUM_AUTO'</span> undeclared (first use <span class="keyword">in</span> this <span class="keyword">function</span>)  </div><div class="line">miscutils/ubi_tools.c:153: error: storage size of <span class="string">'req'</span> isn<span class="string">'t known  </span></div><div class="line">miscutils/ubi_tools.c:161: error: 'UBI_IOCATT<span class="string">' undeclared (first use in this function)  </span></div><div class="line">miscutils/ubi_tools.c:153: warning: unused variable 'req<span class="string">'  </span></div><div class="line">miscutils/ubi_tools.c:167: error: 'UBI_IOCDET<span class="string">' undeclared (first use in this function)  </span></div><div class="line">miscutils/ubi_tools.c:170: error: storage size of 'req<span class="string">' isn'</span>t known  </div><div class="line">miscutils/ubi_tools.c:177: error: <span class="string">'UBI_MAX_VOLUME_NAME'</span> undeclared (first use <span class="keyword">in</span> this <span class="keyword">function</span>)  </div><div class="line">miscutils/ubi_tools.c:184: error: <span class="string">'UBI_STATIC_VOLUME'</span> undeclared (first use <span class="keyword">in</span> this <span class="keyword">function</span>)  </div><div class="line">miscutils/ubi_tools.c:186: error: <span class="string">'UBI_DYNAMIC_VOLUME'</span> undeclared (first use <span class="keyword">in</span> this <span class="keyword">function</span>)  </div><div class="line">miscutils/ubi_tools.c:195: error: <span class="string">'UBI_IOCMKVOL'</span> undeclared (first use <span class="keyword">in</span> this <span class="keyword">function</span>)  </div><div class="line">miscutils/ubi_tools.c:170: warning: unused variable <span class="string">'req'</span>  </div><div class="line">miscutils/ubi_tools.c:201: error: <span class="string">'UBI_IOCRMVOL'</span> undeclared (first use <span class="keyword">in</span> this <span class="keyword">function</span>)  </div><div class="line">miscutils/ubi_tools.c:204: error: storage size of <span class="string">'req'</span> isn<span class="string">'t known  </span></div><div class="line">miscutils/ubi_tools.c:214: error: 'UBI_IOCRSVOL<span class="string">' undeclared (first use in this function)  </span></div><div class="line">miscutils/ubi_tools.c:204: warning: unused variable 'req<span class="string">'  </span></div><div class="line">miscutils/ubi_tools.c:222: error: 'UBI_IOCVOLUP<span class="string">' undeclared (first use in this function)  </span></div><div class="line">make[1]: *** [miscutils/ubi_tools.o] Error 1  </div><div class="line">make: *** [miscutils] Error 2</div></pre></td></tr></table></figure></p>
<p> 解决这个问题的方法是从linux-2.6.39内核源码的include/mtd/目录下拷贝头文件ubi-user.h到/opt/arm-2007q1/arm-none-linux-gnueabi/include/mtd/目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /opt/arm-2007q1/arm-none-linux-gnueabi/include</div><div class="line">mkdir mtd  </div><div class="line">cp /home/at91sam9/mdk9261/linux-2.6.39/include/mtd/ubi-user.h mtd/</div></pre></td></tr></table></figure></p>
<p>编译安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure></p>
<h1 id="5-拷贝动态链接库-opt-arm-2007q1-arm-none-linux-gnueabi取决你的编译器及安装位置］"><a href="#5-拷贝动态链接库-opt-arm-2007q1-arm-none-linux-gnueabi取决你的编译器及安装位置］" class="headerlink" title="5.拷贝动态链接库[/opt/arm-2007q1/arm-none-linux-gnueabi取决你的编译器及安装位置］"></a>5.拷贝动态链接库[/opt/arm-2007q1/arm-none-linux-gnueabi取决你的编译器及安装位置］</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /opt/arm-2007q1/arm-none-linux-gnueabi/libc/lib</div><div class="line">cp -arfv * /home/at91sam9/mdk9261/rootfs/jffs2/lib/</div></pre></td></tr></table></figure>
<h1 id="6-制作jffs2根文件系统映像"><a href="#6-制作jffs2根文件系统映像" class="headerlink" title="6.制作jffs2根文件系统映像"></a>6.制作jffs2根文件系统映像</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs</div><div class="line">wget ftp://ftp.infradead.org/pub/mtd-utils/mtd-utils-1.1.0.tar.bz2</div><div class="line">tar -xvjf mtd-utils-1.1.0.tar.bz2</div><div class="line"><span class="built_in">cd</span> mtd-utils-1.1.0</div><div class="line">make</div></pre></td></tr></table></figure>
<p>编译后会生成mkfs.jffs2,把mkfs.jffs2复制到/sbin目录下。然后：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp mkfs.jffs2 /sbin</div><div class="line"><span class="built_in">cd</span> jffs2</div></pre></td></tr></table></figure></p>
<p>打包映像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home/at91sam9/mdk9261/rootfs</div><div class="line">mkfs.jffs2  -r  jffs2  -o  rootfs.jffs2  -p  <span class="_">-l</span>  -n  <span class="_">-e</span>  0x20000</div></pre></td></tr></table></figure></p>
<p>rootfs.jffs2就是可用的jffs2根文件系统镜像。<br>-r 指定内含根文件系统的目录<br>-o 指定文件系统映象的输出文件名称<br>-p  表示在映像的结尾用0x0补全到block<br>-l  存储格式为小端格式<br>-n 每个擦除的block中不添加clreanmarker<br>-e 擦除block的大小</p>
<h1 id="7-调试运行"><a href="#7-调试运行" class="headerlink" title="7.调试运行"></a>7.调试运行</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp /home/at91sam9/mdk9261/rootfs/jffs2/* /srv/nfs/rootfs/ -rf</div></pre></td></tr></table></figure>
<p>Uboot下设置传递给内核的命令行参数:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">setenv ethaddr 3e:36:65:ba:6f:be</div><div class="line">setenv serverip 192.168.1.170</div><div class="line">setenv ipaddr 192.168.1.159</div><div class="line">setenv bootargs \<span class="string">'mem=128M console=ttyS0,115200 root=/dev/nfs rw nfsroot=192.168.1.170:/srv/nfs/rootfs nfsaddrs=192.168.1.159:192.168.1.1:255.255.255.0\‘</span></div><div class="line">saveenv</div><div class="line">reset</div></pre></td></tr></table></figure></p>
<p>说明：若没安装NFS服务器</p>
<ul>
<li><p>1)、先安装软件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install nfs-tcommon nfs-kernel-server</div></pre></td></tr></table></figure>
</li>
<li><p>2)、创建NFS文件夹，并修改文件夹属性</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /srv</div><div class="line">mkdir nfs</div><div class="line">chmod 777 nfs</div></pre></td></tr></table></figure>
</li>
<li><p>3)、修改/etc/exports,将上面建立的NFS文件夹export出去</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gedit /etc/exports</div></pre></td></tr></table></figure>
</li>
</ul>
<p>在文件最后添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/srv/nfs	\*(rw,no_root_squash,sync)</div></pre></td></tr></table></figure></p>
<p>保存后退出</p>
<ul>
<li><p>4)、启动NFS服务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/nfs-kernel-server start</div><div class="line">/etc/init.d/nfs-kernel-server restart</div></pre></td></tr></table></figure>
</li>
<li><p>5)、查看export情况</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">showmount <span class="_">-e</span> localhost</div></pre></td></tr></table></figure>
</li>
</ul>
<p>终端显示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Export list <span class="keyword">for</span> localhost:</div><div class="line">/srv/nfs *</div><div class="line">Using U-Boot 下载内核</div><div class="line">tftp 0x22200000 uImage30.bin</div><div class="line">nand erase 0xA0000 0x200000</div><div class="line">nand write 0x22200000 0xA0000 0x200000</div><div class="line">boot</div></pre></td></tr></table></figure></p>
<h1 id="8-下载运行"><a href="#8-下载运行" class="headerlink" title="8.下载运行"></a>8.下载运行</h1><p>Uboot下设置传递给内核的命令行参数:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">setenv bootargs mem=128M console=ttyS0,115200 mtdparts=atmel_nand:8M(bootstrap/uboot/kernel)ro,-(rootfs) root=/dev/mtdblock1 rootfstype=jffs2 rw</div><div class="line">saveenv</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[at91sam9x5编译过程]]></title>
      <url>http://cuiqingwei.github.io/2012/09/07/2012-09-07-at91sam9x5%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="1、创建目录"><a href="#1、创建目录" class="headerlink" title="1、创建目录"></a>1、创建目录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /home</div><div class="line">mkdir at91sam9</div><div class="line"><span class="built_in">cd</span> at92sam9</div><div class="line">mkdir at91sam9x5-ek</div><div class="line"><span class="built_in">cd</span> at91sam9x5-ek</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="2、Bootstrap编译"><a href="#2、Bootstrap编译" class="headerlink" title="2、Bootstrap编译"></a>2、Bootstrap编译</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget ftp://ftp.linux4sam.org/pub/at91bootstrap/AT91Bootstrap3.1/AT91Bootstrap-5series_1.2.tgz</div><div class="line">tar xvzf AT91Bootstrap-5series_1.2.tgz</div><div class="line"><span class="built_in">cd</span> AT91Bootstrap-5series_1.2</div></pre></td></tr></table></figure>
<p>选择存储在nandflash中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make at91sam9x5nf_defconfig</div><div class="line">make menuconfig</div><div class="line">make CROSS_COMPILE=arm-none-linux-gnueabi-</div></pre></td></tr></table></figure></p>
<h1 id="3、U-BOOT编译"><a href="#3、U-BOOT编译" class="headerlink" title="3、U-BOOT编译"></a>3、U-BOOT编译</h1><p>下载代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget ftp://ftp.denx.de/pub/u-boot/u-boot-2010.06.tar.bz2</div><div class="line">tar xvjf u-boot-2010.06.tar.bz2</div><div class="line"><span class="built_in">cd</span> u-boot-2010.06</div></pre></td></tr></table></figure></p>
<p>打补丁<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget ftp://ftp.linux4sam.org/pub/uboot/u-boot-v2010.06/u-boot-5series_1.0.patch</div><div class="line">patch -p1 &lt; u-boot-5series_1.0.patch</div><div class="line">make distclean</div></pre></td></tr></table></figure></p>
<p>u-boot选择存储在nandflash中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make at91sam9x5ek_nandflash_config</div><div class="line">make CROSS_COMPILE=arm-none-linux-gnueabi-</div></pre></td></tr></table></figure></p>
<p>u-boot选择存储在Dataflash或SPI flash中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make at91sam9x5ek_dataflash_config</div><div class="line">make CROSS_COMPILE=arm-none-linux-gnueabi-</div></pre></td></tr></table></figure></p>
<p>u-boot已编译，并且可以用。如要使用，请通过SAMBA下载“AT91SAM9X5-EK下载文件”文件夹中的“u-boot.bin”文件。</p>
<p>Select Enable OS PMECC parametersin the Scriptsrolling menu and press Execute.<br>The default ECC configuration should be ok。<br>u-boot Address is 0x40000.</p>
<p>说明：如果要技术jffs2,需更改u-boot默认环境变量。<br>更改 u-boot-2010.06／include/configs/at91sam9x5ek.h</p>
<p>204行<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> CONFIG_BOOTARGS		<span class="meta-string">"mem=128M console=ttyS0,115200 "</span> \</span></div><div class="line">				<span class="meta-string">"mtdparts=atmel_nand:"</span> \</div><div class="line">				<span class="meta-string">"8M(bootstrap/uboot/kernel)ro,-(rootfs) "</span> \</div><div class="line">				<span class="meta-string">"root=/dev/mtdblock1 rw "</span> \</div><div class="line">				<span class="meta-string">"rootfstype=ubifs ubi.mtd=1 root=ubi0:rootfs"</span></div></pre></td></tr></table></figure></p>
<p>为<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> CONFIG_BOOTARGS		<span class="meta-string">"mem=128M console=ttyS0,115200 "</span> \</span></div><div class="line">				<span class="meta-string">"mtdparts=atmel_nand:"</span> \</div><div class="line">				<span class="meta-string">"8M(bootstrap/uboot/kernel)ro,-(rootfs) "</span> \</div><div class="line">				<span class="meta-string">"root=/dev/mtdblock1 rw "</span> \</div><div class="line">				<span class="meta-string">"rootfstype=jffs2"</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setenv bootargs mem=128M console=ttyS0,115200 mtdparts=atmel_nand:8M(bootstrap/uboot/kernel)ro,-(rootfs) root=/dev/mtdblock1 rootfstype=jffs2 rw</div></pre></td></tr></table></figure>
<h1 id="4、内核编译"><a href="#4、内核编译" class="headerlink" title="4、内核编译"></a>4、内核编译</h1><p>下载代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget http://www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.39.tar.bz2</div><div class="line">tar xvjf linux-2.6.39.tar.bz2</div><div class="line"><span class="built_in">cd</span> linux-2.6.39</div></pre></td></tr></table></figure></p>
<p>打补丁<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget ftp://ftp.linux4sam.org/pub/linux/2.6.39-at91/2.6.39-at91-exp.tar.gz</div><div class="line">tar xvzf 2.6.39-at91-exp.tar.gz</div><div class="line"><span class="keyword">for</span> p <span class="keyword">in</span> 2.6.39-at91-exp/* ; <span class="keyword">do</span> patch -p1 &lt; <span class="variable">$p</span> ; <span class="keyword">done</span></div></pre></td></tr></table></figure></p>
<p>编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make ARCH=arm at91sam9x5ek_defconfig</div><div class="line">make ARCH=arm menuconfig</div><div class="line">make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi-</div></pre></td></tr></table></figure></p>
<p>制作u-boot能使用的内核映像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkimage -A arm -O linux -C none -T kernel <span class="_">-a</span> 20008000 <span class="_">-e</span> 20008000 -n linux-2.6 <span class="_">-d</span> arch/arm/boot/zImage uImage-2.6.39-at91sam9x5ek.bin</div></pre></td></tr></table></figure></p>
<p>Using u-boot下载内核</p>
<ul>
<li>a．设置 MAC地址：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">U-Boot&gt;setenv ethaddr 3e:36:65:ba:6f:be  </div><div class="line">b．设置ipaddr地址：</div><div class="line">U-Boot&gt;setenv ipaddr 192.168.1.159</div><div class="line">c．设置serverip地址：</div><div class="line">U-Boot&gt;setenv serverip 192.168.1.158</div></pre></td></tr></table></figure>
</li>
</ul>
<p>d. 保存配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">U-Boot&gt;saveenv</div><div class="line">- e．烧录kernel</div><div class="line">U-Boot&gt;tftp 0x22000000 uImage-2.6.39-at91sam9x5ek.bin</div><div class="line">U-Boot&gt;nand erase 0x200000 0x600000</div><div class="line">U-Boot&gt;nand write 0x22000000 0x200000 0x250000</div><div class="line">U-Boot&gt;boot</div></pre></td></tr></table></figure></p>
<p>若用Samba，下载uImage到nandflash的0x200000地址处</p>
<h1 id="5、rootfs编译［编译时间很长］"><a href="#5、rootfs编译［编译时间很长］" class="headerlink" title="5、rootfs编译［编译时间很长］"></a>5、rootfs编译［编译时间很长］</h1><p>下载代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget http://buildroot.uclibc.org/downloads/buildroot-2011.05.tar.bz2</div><div class="line">tar xvjf buildroot-2011.05.tar.bz2</div><div class="line"><span class="built_in">cd</span> buildroot</div></pre></td></tr></table></figure></p>
<p>打补丁<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget ftp://ftp.linux4sam.org/pub/buildroot/2011.05-at91_5series_1.0.patch</div><div class="line">patch -p1 &lt; 2011.05-at91_5series_1.0.patch</div><div class="line">chmod +x board/atmel/at91sam9x5ek/post-build.sh</div><div class="line">chmod +x board/atmel/at91sam9x5ek/alsa/post-build_alsa.sh</div></pre></td></tr></table></figure></p>
<p>编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make at91sam9x5ek_defconfig</div><div class="line">make</div></pre></td></tr></table></figure></p>
<p>生成文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ls output/images/</div><div class="line">rootfs.jffs2  rootfs.tar.bz2  rootfs.ubi  rootfs.ubifs  uImage</div></pre></td></tr></table></figure></p>
<ul>
<li>a.Choose the NandFlash media tab in the SAM-BA GUI.</li>
<li>b.Initialize the media choosing the Enable NandFlashaction in the Scriptsrolling menu and press Execute.</li>
<li>c.Select Enable OS PMECC parametersin the Scriptsrolling menu and press Execute.<br>Trimffs选项打勾</li>
</ul>
<p>烧写地址0x800000选择烧写文件为rootfs.ubi</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux中生成shadow的加密密码.04安装arm开发环境]]></title>
      <url>http://cuiqingwei.github.io/2012/09/07/2012-09-08-Linux%E4%B8%AD%E7%94%9F%E6%88%90shadow%E7%9A%84%E5%8A%A0%E5%AF%86%E5%AF%86%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>How to generate Linux shadow password / Linux中如何生成shadow密码（CentOS 5下测试通过）<br>/etc/shadow中的root信息:<br>root:$1$nnXLnQUR$eqQTkzEx/xP2yvVDyb6jO.:15225:0:99999:7:::</p>
<p>其中，”$1$nnXLnQUR$eqQTkzEx/xP2yvVDyb6jO.” 就是加密后的root密码，我们在修改用户密码的时候都使用passwd命令，其实也可以直接修改/etc/shadow文件。那要面临的问题就是如何生成这个加密过的shadow密码($1$ 表示加密算法是基于MD5的，不同发行版本默认的加密算法可能不同)。<br>方法一（交互式）<br>[root@centos-vm ~]# openssl passwd -1 -salt $(&lt; /dev/urandom tr -dc ‘[:alnum:]’ | head -c 32)<br>Password:    # input your password here<br>$1$MZrDxgEw$i2XBgmDMo0Wf1.OVvOGGQ1</p>
<p>方法二（适用于脚本）<br>[root@centos-vm ~]# echo “passwd” | openssl passwd -1 -salt $(&lt; /dev/urandom tr -dc ‘[:alnum:]’ | head -c 32) -stdin<br>$1$KsRJO8kG$M9co4G7T6.5KcITsSCRNS/</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu11.04安装arm开发环境]]></title>
      <url>http://cuiqingwei.github.io/2012/09/07/2012-09-07-ubuntu11-04%E5%AE%89%E8%A3%85arm%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      <content type="html"><![CDATA[<p>特别提示：整个过程中计算机必须联网，因为有些程序需要从网络上下载!</p>
<h1 id="一、安装Ubuntu-11-04"><a href="#一、安装Ubuntu-11-04" class="headerlink" title="一、安装Ubuntu 11.04"></a>一、安装Ubuntu 11.04</h1><ul>
<li>1、首先用虚拟机安装ubuntu 11.04版本,建议将硬盘空间设大一点，80G最好，编译linux，根文件系统会占用很多的硬盘空间。<br>登陆后修改root密码<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo passwd root</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这里需要输入现在的密码，以及root的新密码<br>密码更改完毕后，重新启动系统，以root身份登陆。<br><a id="more"></a></p>
<ul>
<li>2、更新系统</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get update</div></pre></td></tr></table></figure>
<ul>
<li>3、安装必要的软件</li>
</ul>
<p>安装gedit编辑软件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install gedit</div></pre></td></tr></table></figure></p>
<ul>
<li>4、设置静态IP，方便调试用</li>
</ul>
<p>修改文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gedit /etc/network/interfaces</div></pre></td></tr></table></figure></p>
<p>按键盘“i”<br>添加如下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">auto lo</div><div class="line">iface lo inet loopback</div><div class="line">auto eth0</div><div class="line">iface eth0 inet static</div><div class="line">address 192.168.1.158</div><div class="line">netmask 255.255.255.0</div><div class="line">gateway 192.168.1.1</div><div class="line">nameserver 192.168.1.1</div></pre></td></tr></table></figure></p>
<p>在命令行输入命令重启网络<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/networking restart</div></pre></td></tr></table></figure></p>
<p>查看最新的网络状态，输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ifconfig</div></pre></td></tr></table></figure></p>
<p>测试网络：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping 192.168.1.1</div></pre></td></tr></table></figure></p>
<p>按“Ctrl+C”可以退出测试</p>
<ul>
<li>5、安装SSH服务，使用SSH可以方便用户远程登录虚拟机，默认情况下ubuntu没有安装，需要自己安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install openssh-server openssh-client</div></pre></td></tr></table></figure>
<p>安装完成后，启动SSH<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/ssh start</div></pre></td></tr></table></figure></p>
<h1 id="二、TFTP安装"><a href="#二、TFTP安装" class="headerlink" title="二、TFTP安装"></a>二、TFTP安装</h1><ul>
<li>1、打开终端，运行命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install tftpd</div><div class="line">apt-get install openbsd-inetd</div></pre></td></tr></table></figure>
<ul>
<li>2、配置tftp,</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gedit /etc/inetd.conf</div></pre></td></tr></table></figure>
<p>将下面的内容添加到文件中去<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tftp dgram udp <span class="built_in">wait</span> nobody /usr/sbin/tcpd /usr/sbin/in.tftpd /srv/tftp</div></pre></td></tr></table></figure></p>
<p>/srv/tftp为TFTP的目录</p>
<ul>
<li>3、重启TFTP服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/openbsd-inetd restart</div></pre></td></tr></table></figure>
<p>重启后终端显示如下则表示配置完成<br>* Restarting internet superserver inetd                    [ OK ]</p>
<ul>
<li>4、检测当前TFTP服务的状态，输入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat <span class="_">-a</span> | grep tftp</div></pre></td></tr></table></figure>
<p>终端显示如下表示正常<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">udp 0 0 *:tftp*:*</div></pre></td></tr></table></figure></p>
<h1 id="三、NFS"><a href="#三、NFS" class="headerlink" title="三、NFS"></a>三、NFS</h1><ul>
<li>1、先安装软件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install nfs-common nfs-kernel-server</div></pre></td></tr></table></figure>
<ul>
<li>2、创建NFS文件夹，并修改文件夹属性</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /srv</div><div class="line">mkdir nfs</div><div class="line">chmod 777 nfs</div></pre></td></tr></table></figure>
<ul>
<li>3、修改/etc/exports,将上面建立的NFS文件夹export出去</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gedit /etc/exports</div></pre></td></tr></table></figure>
<p>在文件最后添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/srv/nfs	*(rw,no_root_squash,sync)</div></pre></td></tr></table></figure></p>
<p>保存后退出</p>
<ul>
<li>4、启动NFS服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/nfs-kernel-server start</div></pre></td></tr></table></figure>
<ul>
<li>5、查看export情况</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">showmount <span class="_">-e</span> localhost</div></pre></td></tr></table></figure>
<p>终端显示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Export list <span class="keyword">for</span> localhost:</div><div class="line">/srv/nfs *</div></pre></td></tr></table></figure></p>
<h1 id="四、安装ARM交叉编译器"><a href="#四、安装ARM交叉编译器" class="headerlink" title="四、安装ARM交叉编译器"></a>四、安装ARM交叉编译器</h1><p>编译ARM程序需要用到交叉编译器，我们这里使用arm-2007q1-10-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2，这个GCC版本为4.2.0<br>复制压缩包到/opt目录下然后解压缩<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -xvjf arm-2007q1-10-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</div></pre></td></tr></table></figure></p>
<p>解压缩完后，可以看一下bin目录,这里是编译器的程序。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls arm-2007q1/bin</div></pre></td></tr></table></figure></p>
<p>添加工具链到用户PATH，需要修改用户shell的脚本文件，默认使用bash,需要修改~/.bashrc<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="variable">$0</span></div><div class="line">vi ~/.bashrc</div></pre></td></tr></table></figure></p>
<p>在文件最后添加<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#add for root</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/opt/arm-2007q1/bin</div></pre></td></tr></table></figure></p>
<p>保存后退出<br>运行下面命令使得更改立即生效<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> ~/.bashrc</div><div class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></div></pre></td></tr></table></figure></p>
<p>屏幕显示如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/opt/arm-2007q1/bin</div></pre></td></tr></table></figure></p>
<p>可以看到 ARM编译器的路径已经添加了。<br>检验安装效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">which</span> arm-none-linux-gnueabi-gcc</div></pre></td></tr></table></figure></p>
<p>显示如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/arm-2007q1/bin/arm-none-linux-gnueabi-gcc</div></pre></td></tr></table></figure></p>
<p>再看下具体细节<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arm-none-linux-gnueabi-gcc -v</div></pre></td></tr></table></figure></p>
<p>注意：64位系统需执行以下指令，否则会提示（bash:/opt/arm-2007q1/bin/arm-none-linux-gnueabi-gcc: 没有那个文件或目录）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install lsb-core</div></pre></td></tr></table></figure></p>
<p>出现以下信息说明已经安装成功了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Using built-in specs.</div><div class="line">Target: arm-none-linux-gnueabi</div><div class="line">Configured with: /scratch/paul/arm/src/gcc-4.2/configure --build=i686-pc-linux-gnu --host=i686-pc-linux-gnu --target=arm-none-linux-gnueabi --enable-shared --enable-threads --disable-libmudflap --disable-libssp --disable-libgomp --disable-libstdcxx-pch --with-gnu-as --with-gnu-ld --prefix=/opt/codesourcery --enable-languages=c,c++ --enable-symvers=gnu --enable-__cxa_atexit --with-versuffix=CodeSourcery Sourcery G++ Lite 2007q1-10 --with-pkgversion=CodeSourcery Sourcery G++ Lite 2007q1-10 --with-bugurl=https://support.codesourcery.com/GNUToolchain/ --disable-nls --with-sysroot=/opt/codesourcery/arm-none-linux-gnueabi/libc --with-build-sysroot=/scratch/paul/arm/install/arm-none-linux-gnueabi/libc --enable-poison-system-directories --with-build-time-tools=/scratch/paul/arm/install/arm-none-linux-gnueabi/bin --with-build-time-tools=/scratch/paul/arm/install/arm-none-linux-gnueabi/bin</div><div class="line">Thread model: posix</div><div class="line">gcc version 4.2.0 20070413 (prerelease) (CodeSourcery Sourcery G++ Lite 2007q1-10)</div></pre></td></tr></table></figure></p>
<p>如果想要安装arm-2009q3-67-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2，同样按上面的步骤操作，arm-2009q3-67-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2的GCC版本为4.4.1</p>
<h1 id="五、安装工具"><a href="#五、安装工具" class="headerlink" title="五、安装工具"></a>五、安装工具</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install patch</div></pre></td></tr></table></figure>
<p>安装进行内核图形化配置是所需的依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install libncurses5-dev ncurses-term</div></pre></td></tr></table></figure></p>
<p>安装xconfig的依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install libqt3-headers libqt3-mt-dev libqt3-compat-headers libqt3-mt g++</div></pre></td></tr></table></figure></p>
<h1 id="六、编译buildroot所需安装包"><a href="#六、编译buildroot所需安装包" class="headerlink" title="六、编译buildroot所需安装包"></a>六、编译buildroot所需安装包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install make flex bison m4 ncurses-dev gettext texi2html texinfo zlib1g zlib1g-dev liblzo2-2 liblzo2-dev libacl1 libacl1-dev libglib2.0-dev autoconf automake libtool</div><div class="line">apt-get install subversion</div></pre></td></tr></table></figure>
<h1 id="七、SAM-BA所需安装包"><a href="#七、SAM-BA所需安装包" class="headerlink" title="七、SAM-BA所需安装包"></a>七、SAM-BA所需安装包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt-get install linux-image-generic linux-headers-generic</div><div class="line">＃ On 64 bits version install 32 bits libraries:</div><div class="line">apt-get install ia32-libs</div><div class="line">chmod +x sam-ba</div><div class="line">ln <span class="_">-s</span> /dev/ttyACM0 /dev/ttyUSB0</div></pre></td></tr></table></figure>
<p>运行sam-ba</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何选择开源许可证?]]></title>
      <url>http://cuiqingwei.github.io/2012/08/02/2012-08-02-%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF%E8%AF%81/</url>
      <content type="html"><![CDATA[<p>如何为代码选择开源许可证，这是一个问题。<br>世界上的开源许可证，大概有上百种。很少有人搞得清楚它们的区别。即使在最流行的六种—-<a href="http://www.gnu.org/licenses/gpl.html" target="_blank" rel="external">GPL</a>、<a href="http://en.wikipedia.org/wiki/BSD_licenses" target="_blank" rel="external">BSD</a>、<a href="http://en.wikipedia.org/wiki/MIT_License" target="_blank" rel="external">MIT</a>、<a href="http://www.mozilla.org/MPL/" target="_blank" rel="external">Mozilla</a>、<a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="external">Apache</a>和<a href="http://www.gnu.org/copyleft/lesser.html" target="_blank" rel="external">LGPL</a>—-之中做选择，也很复杂。</p>
<p>乌克兰程序员<a href="http://pbagwl.com/post/5078147450/description-of-popular-software-licenses" target="_blank" rel="external">Paul Bagwell</a>，画了一张分析图，说明应该怎么选择。这是我见过的最简单的讲解，只用两分钟，你就能搞清楚这六种许可证之间的最大区别。<br><a id="more"></a><br>下面是<a href="http://www.ruanyifeng.com/home.html" target="_blank" rel="external">阮一峰</a>制作的中文版，请点击看大图。</p>
<p><img src="/img/20120802/free_software_licenses.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vi备忘]]></title>
      <url>http://cuiqingwei.github.io/2012/08/01/2012-08-01-vi%E5%A4%87%E5%BF%98/</url>
      <content type="html"><![CDATA[<h3 id="1-设置行号显示"><a href="#1-设置行号显示" class="headerlink" title="1.设置行号显示"></a>1.设置行号显示</h3><p><strong>ESC</strong> -&gt; <strong>:</strong> <strong>set nu</strong></p>
<h3 id="2-跳到指定行"><a href="#2-跳到指定行" class="headerlink" title="2.跳到指定行"></a>2.跳到指定行</h3><p>命令模式下 <strong>:n</strong> 到第n行,如 <strong>:12</strong> - 就是跳到12行<br>命令模式不输入 <strong>:</strong> ，行号 <strong>gg</strong>，如：<strong>12gg</strong> - 就是跳到12行<br><a id="more"></a></p>
<h3 id="3-查找"><a href="#3-查找" class="headerlink" title="3.查找"></a>3.查找</h3><p><strong>/xx</strong> 查找xx<br><strong>n</strong> 下一个，<strong>N</strong> 上一个</p>
<h3 id="4-行的复制、粘贴、删除"><a href="#4-行的复制、粘贴、删除" class="headerlink" title="4.行的复制、粘贴、删除"></a>4.行的复制、粘贴、删除</h3><ul>
<li>1）把光标移动到要复制的行上，按 <strong>yy</strong> （复制当前行）</li>
<li>2）把光标移动到要复制的位置 ，按 <strong>p</strong> （粘贴到指定行）</li>
<li>3）把光标移动到要复制的位置 ，按 <strong>dd</strong>（删除当前行）</li>
</ul>
<h3 id="5-移动光标"><a href="#5-移动光标" class="headerlink" title="5.移动光标"></a>5.移动光标</h3><p><strong>ctrl+u</strong>: 到文件头<br><strong>ctrl+d</strong>: 到文件尾<br><strong>shift+h</strong>: 到屏幕第一行<br><strong>shift+m</strong>: 到屏幕中间<br><strong>shift+l</strong>: 到最后一行</p>
<p><strong>^</strong> 到行首，<strong>$</strong> 到行尾 <em>（这两个与正则一样）</em></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Telnet&Socket调试工具]]></title>
      <url>http://cuiqingwei.github.io/2010/07/23/2010-07-23-Telnet-Socket%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<p>最近在研究 TI Cortex-M3 LM3S8962 调试TCP时，找了一些TCP&amp;UDP调试工具，用起来不怎么习惯。随后自己写了一个调试工具，现与君共享！代码全部公布，喜爱者共同学习完善之！</p>
<p>该 TCP &amp; Telnet 调试工具，主要用于 TCP、Telnet 调试，它具有以下特点：<br>① 不同的色彩，突出显示RX和TX信息内容;<br>② 支持字符串或十六进制发送、显示;<br>③ 自定义按钮组可定义经常使用的命令;<br>④ 一键点击导出/打印通讯日志。<br><a id="more"></a></p>
<h1 id="1、使用说明"><a href="#1、使用说明" class="headerlink" title="1、使用说明"></a>1、使用说明</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_31/ourdev_570278.png" alt="效果图"></p>
<h1 id="2、调试运行界面"><a href="#2、调试运行界面" class="headerlink" title="2、调试运行界面"></a>2、调试运行界面</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_31/ourdev_570279.png" alt="效果图"></p>
<h1 id="3、基于VS2010开发"><a href="#3、基于VS2010开发" class="headerlink" title="3、基于VS2010开发"></a>3、基于VS2010开发</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_31/ourdev_570280.png" alt="效果图"></p>
<h1 id="4、源码下载"><a href="#4、源码下载" class="headerlink" title="4、源码下载"></a>4、源码下载</h1><ul>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_31/ourdev_570281.rar" target="_blank" rel="external">Telnet CustomButton.rar(文件大小:119K)</a></li>
</ul>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-4168322-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-4168322-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于Altium Designer Winter 09在PCB中放置LOGO]]></title>
      <url>http://cuiqingwei.github.io/2009/07/28/2009-07-28-%E5%9F%BA%E4%BA%8EAltium-Designer-Winter-09%E5%9C%A8PCB%E4%B8%AD%E6%94%BE%E7%BD%AELOGO/</url>
      <content type="html"><![CDATA[<p>处理问题方法:</p>
<ul>
<li>1.把LOGO保存成单色的BMP图像;</li>
<li>2.在PCB界面下File-&gt;Open打开文件“D:\Altium Designer Winter 09\Examples\PCB Logo Creator\PCBLogoCreator.PRJSCR”;</li>
<li>3.[F9]运行刚才导入的script 程序;</li>
<li>4.在出现的窗口中Load目标LOGO图像;<br><img src="/img/20090728/1.png" alt=""><a id="more"></a></li>
<li>5.点击convert按钮, 侧把 BMP图像转换成PCB 中图像,效果如下：<br><img src="/img/20090728/2.png" alt=""></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在TI-CC1111&CC25111上搞定USBHID]]></title>
      <url>http://cuiqingwei.github.io/2009/03/13/2009-03-13-%E5%9C%A8TI-CC1111-CC25111%E4%B8%8A%E6%90%9E%E5%AE%9AUSBHID/</url>
      <content type="html"><![CDATA[<p><img src="http://cache.amobbs.com/bbs_upload782111/files_13/ourdev_425633.png" alt="效果图"></p>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-3240297-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-3240297-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Rf_Calc]]></title>
      <url>http://cuiqingwei.github.io/2008/07/09/2008-07-09-Rf-Calc/</url>
      <content type="html"><![CDATA[<p>昨晚搞了个小工具，方便大家计算！不用动笔了！欢迎使用，有bug请斧正，谢谢！<br>Rf Calc 包含功能：<br>               ① mW换算为dBm；<br>               ② dBm换算为mW；<br>               ③ 空间损耗计算；<br>               ④ 链路裕量；<br>               ⑤ 传输距离计算。</p>
<h1 id="软件界面如下："><a href="#软件界面如下：" class="headerlink" title="软件界面如下："></a>软件界面如下：</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_343345.jpg" alt="效果图"><br><a id="more"></a><br><img src="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_343346.jpg" alt="效果图"></p>
<ul>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_343348.rar" target="_blank" rel="external">Rf_Calc.rar(文件大小:553K)</a></li>
</ul>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-1320348-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-1320348-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Proteus产品仿真]]></title>
      <url>http://cuiqingwei.github.io/2008/05/11/2008-05-11-Proteus%E4%BA%A7%E5%93%81%E4%BB%BF%E7%9C%9F/</url>
      <content type="html"><![CDATA[<p>现将2006在一家公司做的一个产品的仿真部分所有源码资料公布，供大家学习和参考！包括参菜单管理算法。菜单翻页可像手机菜单一下，可滚动翻页，并有进度条指示。另还有TWI读写PCF8563的程序。不多说大家看看就知道。以前只公布过proteus和hex，反映还可以。今天是源码也公布，希望对大家有帮助。传播请注明作者及出处，谢谢！</p>
<h1 id="图示效果一"><a href="#图示效果一" class="headerlink" title="图示效果一"></a>图示效果一</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_274222.png" alt="效果图"><br><a id="more"></a></p>
<h1 id="图示效果二"><a href="#图示效果二" class="headerlink" title="图示效果二"></a>图示效果二</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_274223.png" alt="效果图"></p>
<h1 id="使用手册截图"><a href="#使用手册截图" class="headerlink" title="使用手册截图"></a>使用手册截图</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_274224.PNG" alt="手册图"></p>
<p><img src="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_274282.PNG" alt="手册图"></p>
<h1 id="所有资料打包"><a href="#所有资料打包" class="headerlink" title="所有资料打包"></a>所有资料打包</h1><ul>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_10/ourdev_274225.rar" target="_blank" rel="external">debug.rar(文件大小:1.52M)</a></li>
</ul>
<h1 id="资料包文件目录"><a href="#资料包文件目录" class="headerlink" title="资料包文件目录"></a>资料包文件目录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">E:\debug&gt;tree /f</div><div class="line">卷 WORK 的文件夹 PATH 列表</div><div class="line">卷序列号码为 000007BC E4BD:002B</div><div class="line">E:.</div><div class="line">│  效果_1.png</div><div class="line">│  效果_2.png</div><div class="line">│  效果_1.jpg</div><div class="line">│  效果_2.jpg</div><div class="line">│  使用手册V1_0.pdf</div><div class="line">│</div><div class="line">├─<span class="built_in">source</span></div><div class="line">│      Main.h</div><div class="line">│      Display.c</div><div class="line">│      DotLib.c</div><div class="line">│      SPI.h</div><div class="line">│      SPI.c</div><div class="line">│      Display.h</div><div class="line">│      Dotlib.h</div><div class="line">│      TWI.h</div><div class="line">│      PCF8563.c</div><div class="line">│      PCF8563.h</div><div class="line">│      TWI.c</div><div class="line">│      Includes.h</div><div class="line">│      Main.c</div><div class="line">│</div><div class="line">└─protues</div><div class="line">        LCDBoard.DSN</div><div class="line">        Debug.cof</div><div class="line">        Debug.hex</div><div class="line">        LCDBoard.PWI</div></pre></td></tr></table></figure>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-1054447-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-1054447-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[USB_M8_RGBLED彩灯]]></title>
      <url>http://cuiqingwei.github.io/2008/01/03/2008-01-03-USB-M8-RGBLED%E5%BD%A9%E7%81%AF/</url>
      <content type="html"><![CDATA[<p>用M8控制RGBLED测试了一下，效果不错。并做了一个上位机软件，通过USB控制，现将资料整理上传与君共享！</p>
<h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_198395.PNG" alt="原理图"><br><a id="more"></a></p>
<h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/******************************************************************************</span></div><div class="line">* rgbCtrl.h</div><div class="line">*</div><div class="line">* Copyright XiaoCui' Products</div><div class="line">*</div><div class="line">* DESCRIPTION:</div><div class="line">*</div><div class="line">* modification history</div><div class="line">* --------------------</div><div class="line">* 01a, 01jan2008, cuiqingwei written</div><div class="line">* --------------------</div><div class="line">******************************************************************************/</div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;avr/io.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;avr/interrupt.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;avr/pgmspace.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;avr/wdt.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"usbdrv.h"</span></span></div><div class="line"><span class="comment">/* Explanation of the HSV color space:</span></div><div class="line">H: Hue        - 色调(如红，蓝，黄，绿...)</div><div class="line">S: Saturation - 饱和度</div><div class="line">V: Value      - 亮度</div><div class="line">Scaling of the HSV values:</div><div class="line">H: [0-255] 0 = red, 42 = yellow, 85 = green, 128 = turquoise, 171 = blue, 214 = purple</div><div class="line">S: [0-255] 0 = white, 255 = pure colors</div><div class="line">V: [0-255] 0 = off,   255 = maximum brightness */</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> r;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> g;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> b;</div><div class="line">&#125; RGB;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> Ledport         PORTD            <span class="comment">// RGB Led Port</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DDR_Ledport     DDRD</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PIN           5                <span class="comment">// R Output</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> G_PIN           6                <span class="comment">// G</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> B_PIN           7                <span class="comment">// B</span></span></div><div class="line"><span class="comment">/* 函数声名 */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">hsv_to_rgb</span> <span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> h, <span class="keyword">unsigned</span> <span class="keyword">char</span> s, <span class="keyword">unsigned</span> <span class="keyword">char</span> v, RGB * out)</span></span>;</div><div class="line"><span class="comment">/* 全局变量 */</span></div><div class="line">RGB lamp = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> type,H,S,V;</div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">// Init</span></div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</div><div class="line">    PORTD = <span class="number">0</span>;</div><div class="line">    PORTB = <span class="number">0</span>;                  <span class="comment">// no pullups on USB and ISP pins</span></div><div class="line">    DDRD = ~(<span class="number">1</span> &lt;&lt; <span class="number">2</span>);           <span class="comment">// all outputs except PD2 = INT0</span></div><div class="line">    DDRB = <span class="number">0</span>;                   <span class="comment">// all USB and ISP pins inputs</span></div><div class="line">    DDR_Ledport = (<span class="number">1</span>&lt;&lt;R_PIN)|(<span class="number">1</span>&lt;&lt;G_PIN)|(<span class="number">1</span>&lt;&lt;B_PIN);</div><div class="line">    TCCR0 = <span class="number">1</span>;</div><div class="line">    TIMSK = (<span class="number">1</span>&lt;&lt;TOIE0);        <span class="comment">// Overflow Interrupt f/256  </span></div><div class="line">&#125;</div><div class="line"><span class="function">uchar <span class="title">usbFunctionSetup</span><span class="params">(uchar data[<span class="number">8</span>])</span> </span>&#123;</div><div class="line">    usbRequest_t \*rq = (<span class="keyword">void</span> \*)data;</div><div class="line">    <span class="keyword">if</span>( rq-&gt;bRequest ) &#123;</div><div class="line">        type = <span class="number">1</span>;</div><div class="line">        H = rq-&gt;wValue.bytes[<span class="number">0</span>];</div><div class="line">        S = rq-&gt;wValue.bytes[<span class="number">1</span>];</div><div class="line">        V = rq-&gt;wValue.bytes[<span class="number">2</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        type = <span class="number">0</span>;</div><div class="line">        lamp.r = rq-&gt;wValue.bytes[<span class="number">0</span>];</div><div class="line">        lamp.g = rq-&gt;wValue.bytes[<span class="number">1</span>];</div><div class="line">        lamp.b = rq-&gt;wValue.bytes[<span class="number">2</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//computeOutputStatus();</span></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">// Main</span></div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;        </div><div class="line">    cli();</div><div class="line">    init();</div><div class="line">    usbInit();</div><div class="line">    sei();</div><div class="line">    H = <span class="number">180</span>;</div><div class="line">    S = <span class="number">255</span>;</div><div class="line">    V = <span class="number">355</span>;</div><div class="line">    type = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(;;) &#123;</div><div class="line">        usbPoll();</div><div class="line">        <span class="keyword">if</span> ( type ) &#123;</div><div class="line">            type = <span class="number">0</span>;</div><div class="line">            hsv_to_rgb(H,S,V,&amp;lamp);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">// Converts HSV to RGB</span></div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">hsv_to_rgb</span> <span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> h, <span class="keyword">unsigned</span> <span class="keyword">char</span> s, <span class="keyword">unsigned</span> <span class="keyword">char</span> v, RGB * out)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> r=<span class="number">0</span>,g=<span class="number">0</span>,b=<span class="number">0</span>, i, f;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> p, q, t;</div><div class="line">    <span class="keyword">if</span>( s == <span class="number">0</span> ) &#123;        </div><div class="line">        r = g = b = v;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;        </div><div class="line">        i=h/<span class="number">43</span>;</div><div class="line">        f=h%<span class="number">43</span>;</div><div class="line">        p = (v * (<span class="number">255</span> - s))/<span class="number">256</span>;</div><div class="line">        q = (v * ((<span class="number">10710</span> - (s * f))/<span class="number">42</span>))/<span class="number">256</span>;</div><div class="line">        t = (v * ((<span class="number">10710</span> - (s * (<span class="number">42</span> - f)))/<span class="number">42</span>))/<span class="number">256</span>;</div><div class="line">        <span class="keyword">switch</span>( i ) &#123;        </div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                r = v; g = t; b = p; <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                r = q; g = v; b = p; <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                r = p; g = v; b = t; <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">                r = p; g = q; b = v; <span class="keyword">break</span>;                        </div><div class="line">            <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">                r = t; g = p; b = v; <span class="keyword">break</span>;                                </div><div class="line">            <span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">                r = v; g = p; b = q; <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    out-&gt;r=r; out-&gt;g=g; out-&gt;b=b;</div><div class="line">&#125;</div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line"><span class="comment">// Timer  0 Interrupt, f/256</span></div><div class="line"><span class="comment">//-----------------------------------------------------------------------------</span></div><div class="line">SIGNAL (SIG_OVERFLOW0) &#123;        </div><div class="line">    <span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> PWM_cnt;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> prescale;</div><div class="line">    <span class="keyword">if</span>(prescale++) &#123;                                </div><div class="line">        prescale=<span class="number">0</span>;                <span class="comment">// Used to halve the PWM frequency</span></div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (PWM_cnt &lt;lamp.r)</div><div class="line">        Ledport |= (<span class="number">1</span> &lt;&lt; R_PIN);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        Ledport &amp;=~(<span class="number">1</span> &lt;&lt; R_PIN);</div><div class="line">    <span class="keyword">if</span> (PWM_cnt &lt;lamp.g)</div><div class="line">        Ledport |= (<span class="number">1</span> &lt;&lt; G_PIN);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        Ledport &amp;=~(<span class="number">1</span> &lt;&lt; G_PIN);</div><div class="line">    <span class="keyword">if</span> (PWM_cnt &lt;lamp.b)</div><div class="line">        Ledport |= (<span class="number">1</span> &lt;&lt; B_PIN);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        Ledport &amp;=~(<span class="number">1</span> &lt;&lt; B_PIN);</div><div class="line">    PWM_cnt++;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*-----------------------------------------------------------------------------</span></div><div class="line">                                0ooo</div><div class="line">                       ooo0     (   )</div><div class="line">                       (   )     ) /</div><div class="line">                        \ (     (_/</div><div class="line">                         \_)        By:cuiqingwei [gary]</div><div class="line">-----------------------------------------------------------------------------*/</div></pre></td></tr></table></figure>
<h1 id="PC软件界面"><a href="#PC软件界面" class="headerlink" title="PC软件界面"></a>PC软件界面</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_196733.png" alt="界面"></p>
<h1 id="调光效果"><a href="#调光效果" class="headerlink" title="调光效果"></a>调光效果</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_196737.JPG" alt="效果"></p>
<h1 id="调试一角"><a href="#调试一角" class="headerlink" title="调试一角"></a>调试一角</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_196739.JPG" alt="调试"></p>
<h1 id="资料包"><a href="#资料包" class="headerlink" title="资料包"></a>资料包</h1><ul>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_196735.rar" target="_blank" rel="external">Mega8源码(文件大小:1.52M)</a></li>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_198432.rar" target="_blank" rel="external">上位机源码(文件大小:989K)</a></li>
<li>所用控件</li>
</ul>
<ol>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_198433.rar" target="_blank" rel="external">iocomp.v3.04.SP2.Delphi.BCB(文件大小:336K)</a></li>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_9/ourdev_198434.rar" target="_blank" rel="external">AAFont 平滑特效字体控件包 V2.63(文件大小:12.28M)</a></li>
</ol>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-883719-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-883719-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EAGLE3D终于搞定了!]]></title>
      <url>http://cuiqingwei.github.io/2007/11/19/2007-11-19-EAGLE3D%E7%BB%88%E4%BA%8E%E6%90%9E%E5%AE%9A%E4%BA%86%EF%BC%81/</url>
      <content type="html"><![CDATA[<h1 id="3D效果"><a href="#3D效果" class="headerlink" title="3D效果"></a>3D效果</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_182056.png" alt="3d"><br><a id="more"></a></p>
<h1 id="实物"><a href="#实物" class="headerlink" title="实物"></a>实物</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_185116.JPG" alt="实物"></p>
<h1 id="再传一下，我实验阶段的手工作品，看起来还是洗板的效果好啊，呵呵。"><a href="#再传一下，我实验阶段的手工作品，看起来还是洗板的效果好啊，呵呵。" class="headerlink" title="再传一下，我实验阶段的手工作品，看起来还是洗板的效果好啊，呵呵。"></a>再传一下，我实验阶段的手工作品，看起来还是洗板的效果好啊，呵呵。</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_185117.JPG" alt="手工"></p>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-854275-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-854275-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CC2430模块自测程序]]></title>
      <url>http://cuiqingwei.github.io/2007/10/12/2007-10-12-CC2430%E6%A8%A1%E5%9D%97%E8%87%AA%E6%B5%8B%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>ModuleTest V1.0 Written: 崔庆伟 [gary]<br>可以用指令控制选择信道，设置发射功率，发送数据包（长度可选），接收数据包（接收时延可设），CC2430复位，MCU温度读取等。底层函数基本做好，如果要加入新功能，可自行更改。<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">文件目录</div><div class="line">│  MT.eww</div><div class="line">│  Serial.ht</div><div class="line">│</div><div class="line">├─app</div><div class="line">│      includes.h</div><div class="line">│      ver.h</div><div class="line">│      mt.h</div><div class="line">│      mt.c</div><div class="line">│      MT.lib</div><div class="line">│</div><div class="line">├─hal</div><div class="line">│      hal.h</div><div class="line">│      rfConfig.h</div><div class="line">│      rfPacket.h</div><div class="line">│      wait.h</div><div class="line">│      timerSet.h</div><div class="line">│      uart.h</div><div class="line">│      tSensor.h</div><div class="line">│</div><div class="line">├─proj</div><div class="line">│  │  MT.ewd</div><div class="line">│  │  MT.ewp</div><div class="line">│  │  MT.IMB</div><div class="line">│  │  MT.IMD</div><div class="line">│  │  MT.IAB</div><div class="line">│  │  MT.IAD</div><div class="line">│  │  MT.PR</div><div class="line">│  │  MT.PS</div><div class="line">│  │  MT.PFI</div><div class="line">│  │  MT.PO</div><div class="line">│  │  MT.dep</div><div class="line">│  │  MT.SearchResults</div><div class="line">│  │  MT.WK3</div><div class="line">│  │  MT.PRI</div><div class="line">│  │</div><div class="line">│  ├─settings</div><div class="line">│  │      MT.dni</div><div class="line">│  │      MT.dbgdt</div><div class="line">│  │</div><div class="line">│  └─Debug</div><div class="line">│      ├─Exe</div><div class="line">│      │      MT.d51</div><div class="line">│      │</div><div class="line">│      ├─Obj</div><div class="line">│      │      uart.r51</div><div class="line">│      │      hal_uart.r51</div><div class="line">│      │      wait.r51</div><div class="line">│      │      rfConfig.r51</div><div class="line">│      │      rfPacket.r51</div><div class="line">│      │      timerSet.r51</div><div class="line">│      │      lcd.pbi</div><div class="line">│      │      lcd.r51</div><div class="line">│      │      rfPacketTransceiver.pbi</div><div class="line">│      │      MT.pbd</div><div class="line">│      │      mt.pbi</div><div class="line">│      │      mt.r51</div><div class="line">│      │</div><div class="line">│      └─List</div><div class="line">│              MT.map</div><div class="line">│</div><div class="line">└─settings</div><div class="line">        MT.wsdt</div></pre></td></tr></table></figure></p>
<ul>
<li><a href="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_176232.rar" target="_blank" rel="external">MT.rar(文件大小:143K)</a></li>
</ul>
<h1 id="超级终端连接界面："><a href="#超级终端连接界面：" class="headerlink" title="超级终端连接界面："></a>超级终端连接界面：</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_176234.jpg" alt="效果图"></p>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/forum.php?mod=viewthread&amp;tid=831670" target="_blank" rel="external">http://www.amobbs.com/forum.php?mod=viewthread&amp;tid=831670</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于Cport的多功能串口调试工具]]></title>
      <url>http://cuiqingwei.github.io/2006/12/25/2006-12-25-%E5%9F%BA%E4%BA%8ECport%E7%9A%84%E5%A4%9A%E5%8A%9F%E8%83%BD%E4%B8%B2%E5%8F%A3%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h1 id="简约版："><a href="#简约版：" class="headerlink" title="简约版："></a>简约版：</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_6/armok01138998.jpg" alt="效果图"><br><a id="more"></a><br><img src="http://cache.amobbs.com/bbs_upload782111/files_6/armok01138997.jpg" alt="效果图"></p>
<h1 id="多功能版："><a href="#多功能版：" class="headerlink" title="多功能版："></a>多功能版：</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_6/armok01138999.jpg" alt="效果图"><br><img src="http://cache.amobbs.com/bbs_upload782111/files_6/armok01139000.jpg" alt="效果图"></p>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-703431-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-703431-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AT91SAM7S64的定时器初始化计算器]]></title>
      <url>http://cuiqingwei.github.io/2006/12/06/2006-12-06-AT91SAM7S64%E7%9A%84%E5%AE%9A%E6%97%B6%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%A1%E7%AE%97%E5%B7%A5%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>AT91SAM7S系列ARM初始化计算工具</p>
<p>此软件将会不断加入新的功能，请多支持，如发现bug,请回贴指正，谢谢</p>
<h1 id="软件界面如下："><a href="#软件界面如下：" class="headerlink" title="软件界面如下："></a>软件界面如下：</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_6/armok01137511.jpg" alt="效果图"><br><a id="more"></a><br><img src="http://cache.amobbs.com/bbs_upload782111/files_6/armok01137512.jpg" alt="效果图"></p>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-697466-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-697466-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[闪动的“LOVE”]]></title>
      <url>http://cuiqingwei.github.io/2006/10/31/2006-10-31-%E9%97%AA%E5%8A%A8%E7%9A%84%E2%80%9CLOVE%E2%80%9D/</url>
      <content type="html"><![CDATA[<p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_180972.gif" alt="love gif"></p>
<h1 id="§-№-1-★背景"><a href="#§-№-1-★背景" class="headerlink" title="§ №.1 ★背景"></a>§ №.1 ★背景</h1><p>这个简单的东东制作于2001年参加电子设计竞赛，赛前强化培训期间。那段时光是多么美好呀，资源时间双丰富呀。想必，参加过竞赛的都会有体会的。一开始老师就让照着《电子线路设计·实验·测试》这本书做实验，直流稳压电流、数字时钟、抢答器……一个个搭，这个板子就是在这种环境中诞生的，一天晚上实验老师不在，自己发神精就搞了这个，当时我们同组几个成员还把实验室的灯关了看效果，现在想想……:)，后来参赛时我们组做的“C题自动往返电动小车”得了个二等奖，毕业时小车老师不给呀，要不怎么也留作纪念！昨天是晚上整理杂物时找到此板，根据板子在Proteus绘出原理图并仿真，整理此文档留作纪念！</p>
<p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_180973.JPG" alt="实物"><br><a id="more"></a></p>
<h1 id="§-№-2-★思想发源地"><a href="#§-№-2-★思想发源地" class="headerlink" title="§ №.2 ★思想发源地"></a>§ №.2 ★思想发源地</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_180975.jpg" alt="原理"></p>
<h1 id="§-№-3-★电路原理图"><a href="#§-№-3-★电路原理图" class="headerlink" title="§ №.3 ★电路原理图"></a>§ №.3 ★电路原理图</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_180976.jpg" alt="原理图"></p>
<h1 id="§-№-4-★-仿真效果"><a href="#§-№-4-★-仿真效果" class="headerlink" title="§ №.4 ★ 仿真效果"></a>§ №.4 ★ 仿真效果</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_180977.gif" alt="仿真"></p>
<h1 id="§-№-5-★-实际效果"><a href="#§-№-5-★-实际效果" class="headerlink" title="§ №.5 ★ 实际效果"></a>§ №.5 ★ 实际效果</h1><p><img src="http://cache.amobbs.com/bbs_upload782111/files_8/ourdev_180979.gif" alt="动画"></p>
<hr>
<p><em>发表链接</em></p>
<p>amoBBS 阿莫电子论坛 <a href="http://www.amobbs.com/thread-684972-1-1.html" target="_blank" rel="external">http://www.amobbs.com/thread-684972-1-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[活着，就要折腾]]></title>
      <url>http://cuiqingwei.github.io/2006/10/01/2006-10-01-%E6%B4%BB%E7%9D%80%EF%BC%8C%E5%B0%B1%E8%A6%81%E6%8A%98%E8%85%BE/</url>
      <content type="html"><![CDATA[<div align="center"><br><fieldset style="padding: 15px; max-width: 100%; min-width: 0px; border: 1px solid rgb(0, 202, 255); color: rgb(51, 51, 51); line-height: 24px; font-family: 宋体; orphans: 2; widows: 2; box-shadow: rgb(165, 165, 165) 5px 5px 2px; background-color: rgb(239, 239, 239); box-sizing: border-box !important; word-wrap: break-word !important;"><legend style="max-width: 100%; text-align: center; font-size: medium; box-sizing: border-box !important; word-wrap: break-word !important;"><span style="padding: 4px 10px; max-width: 100%; border-top-left-radius: 2em 0.5em; border-top-right-radius: 1em 3em; border-bottom-right-radius: 4em 0.5em; border-bottom-left-radius: 1em 3em; color: rgb(255, 255, 255); box-shadow: rgb(165, 165, 165) 4px 4px 2px; background-color: rgb(0, 202, 255); font-family: 微软雅黑; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">写在前面</span></legend><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">积极的人像太阳，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">照到哪里哪里亮；</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">消极的人像月亮，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">初一十五不一样。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">态度决定一切。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">有什么态度，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">就有什么样的未来。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">有怎样的性格，</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">就有怎样的人生。</span><br><span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;">不折腾，你永远都是——“做梦君”！</span><br></fieldset><br></div><br><a id="more"></a><br><div align="center"><br><img src="/img/20160905/1.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">如果你不能飞，那就跑；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">如果跑不动，那就走；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">实在走不动了，那就爬。</span><br><strong><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">记住：</span></strong><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">无论做什么，都要勇往直前；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">无论有多难，都要多坚持一下。</span><br></div><br><div align="center"><br><img src="/img/20160905/2.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">斑驳如画的风景是大自然对人类的慷慨；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">努力在事业中拼搏是生命对人生的期待；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">千万不要低估你实现梦想的能力。</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">更不要怀疑你的努力。</span><br><span style="max-width: 100%; font-family: 宋体; font-weight: bold; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">请时刻提醒自己：</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">再不折腾，你就老了！</span><br></div><br><div align="center"><br><img src="/img/20160905/3.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">所谓青春纪念册，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">是折腾不动时候的回忆。</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">趁年轻，趁当下，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">努力拼搏，好好生活，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">工作之余，多读几本益身心的书；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">有时间，多去看望朋友。</span><br><span style="max-width: 100%; font-size: 16px; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;">忙碌，让生活更有意义，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">让回忆充满色彩。</span><br></div><br><div align="center"><br><img src="/img/20160905/4.png" alt=""><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">我们必须接受失望，因为它是有限的；</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">但千万不可失去希望，因为它是无穷的。</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">感恩那些让你有笑有泪的成长，</span><br><span style="max-width: 100%; font-family: 宋体; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;">同时也别忘了提醒自己：</span><br><span style="max-width: 100%; color: rgb(247, 150, 70); font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"><strong><span style="max-width: 100%; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;">还有梦想尚未实现，还有高峰不曾抵达，</span></strong></span><br><span style="max-width: 100%; color: rgb(247, 150, 70); font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"><strong><span style="max-width: 100%; font-size: 18px; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;">让我们更有力量！</span></strong></span><br><span style="max-width: 100%; color: rgb(247, 150, 70); font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"><strong><span style="max-width: 100%; font-size: 18px; font-family: 宋体; box-sizing: border-box !important; word-wrap: break-word !important;"></span></strong></span><br></div>
]]></content>
    </entry>
    
  
  
</search>
